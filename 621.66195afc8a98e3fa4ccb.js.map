{"version":3,"file":"621.66195afc8a98e3fa4ccb.js","mappings":"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","sources":["webpack://telegram-t/./src/components/common/AnimatedIconFromSticker.tsx","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/ChatExtra.tsx","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/FakeIcon.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/components/common/Picker.tsx","webpack://telegram-t/./src/components/common/PickerSelectedItem.tsx","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/common/ReportModal.tsx","webpack://telegram-t/./src/components/common/StickerButton.tsx","webpack://telegram-t/./src/components/common/StickerSetModal.async.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/VerifiedIcon.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/helpers/mediaDimensions.ts","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/left/main/Badge.tsx","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/TextFormatter.tsx","webpack://telegram-t/./src/util/getKeyFromEvent.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/ui/CheckboxGroup.tsx","webpack://telegram-t/./src/components/ui/ConfirmDialog.tsx","webpack://telegram-t/./src/components/ui/FloatingActionButton.tsx","webpack://telegram-t/./src/components/ui/ListItem.tsx","webpack://telegram-t/./src/components/ui/Notification.tsx","webpack://telegram-t/./src/components/ui/ProgressSpinner.tsx","webpack://telegram-t/./src/components/ui/Radio.tsx","webpack://telegram-t/./src/components/ui/RadioGroup.tsx","webpack://telegram-t/./src/components/ui/RangeSlider.tsx","webpack://telegram-t/./src/components/ui/SearchInput.tsx","webpack://telegram-t/./src/components/ui/ShowTransition.tsx","webpack://telegram-t/./src/components/ui/Switcher.tsx","webpack://telegram-t/./src/components/ui/Tab.tsx","webpack://telegram-t/./src/components/ui/TabList.tsx","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useBuffering.ts","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useContextMenuHandlers.ts","webpack://telegram-t/./src/hooks/useContextMenuPosition.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useIntersectionObserver.ts","webpack://telegram-t/./src/hooks/useLayoutEffectWithPrevDeps.ts","webpack://telegram-t/./src/hooks/useUniqueId.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/hooks/useStateRef.ts","webpack://telegram-t/./src/hooks/useTimeout.ts","webpack://telegram-t/./src/hooks/useVideoCleanup.ts","webpack://telegram-t/./src/lib/fastBlur.js","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/captureEvents.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/fastSmoothScroll.ts","webpack://telegram-t/./src/util/fastSmoothScrollHorizontal.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/util/isElementInViewport.ts","webpack://telegram-t/./src/util/math.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/parseMessageInput.ts","webpack://telegram-t/./src/util/patchSafariProgressiveAudio.ts","webpack://telegram-t/./src/util/stopEvent.ts","webpack://telegram-t/./src/util/systemFilesDialog.ts","webpack://telegram-t/./src/util/themeStyle.ts"],"sourcesContent":["import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport type { ApiSticker } from '../../api/types';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean; lastSyncTime?: number };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, lastSyncTime, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = `sticker${sticker?.id}`;\n  const previewBlobUrl = useMedia(\n    sticker ? `${localMediaHash}?size=m` : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n    lastSyncTime,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad, undefined, lastSyncTime);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"src-components-common-AnimatedIconWithPreview-module__root\",\"preview\":\"src-components-common-AnimatedIconWithPreview-module__preview\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport AnimatedIcon from './AnimatedIcon';\nimport styles from './AnimatedIconWithPreview.module.scss';\nimport useFlag from '../../hooks/useFlag';\nimport buildStyle from '../../util/buildStyle';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string };\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const transitionClassNames = useMediaTransition(previewUrl);\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {!isAnimationReady && thumbDataUri && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={buildClassName(styles.preview)} />\n      )}\n      {!isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={previewUrl} className={buildClassName(styles.preview, transitionClassNames)} />\n      )}\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <AnimatedIcon {...otherProps} onLoad={markAnimationReady} noTransition />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, height, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","/* eslint-disable no-bitwise */\n\n// eslint-disable-next-line max-len\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiAudio, ApiMessage, ApiVoice } from '../../api/types';\nimport { ApiMediaFormat } from '../../api/types';\nimport type { ISettings } from '../../types';\nimport { AudioOrigin } from '../../types';\n\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../../util/environment';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dateFormat';\nimport {\n  getMediaDuration,\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport useBuffering from '../../hooks/useBuffering';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport type { LangFn } from '../../hooks/useLang';\nimport useLang from '../../hooks/useLang';\nimport { captureEvents } from '../../util/captureEvents';\nimport useMedia from '../../hooks/useMedia';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport { getTranslation } from '../../util/langProvider';\n\nimport Button from '../ui/Button';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Link from '../ui/Link';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  lastSyncTime?: number;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading: boolean;\n  onPlay: (messageId: number, chatId: string) => void;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nconst AVG_VOICE_DURATION = 10;\nconst MIN_SPIKES = IS_SINGLE_COLUMN_LAYOUT ? 20 : 25;\nconst MAX_SPIKES = IS_SINGLE_COLUMN_LAYOUT ? 50 : 75;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  lastSyncTime,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  onPlay,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const { cancelMessageMediaDownload, downloadMessageMedia } = getActions();\n\n  const { content: { audio, voice, video }, isMediaUnread } = message;\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n  const { isRtl } = lang;\n\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = (isActivated || PRELOAD) && lastSyncTime;\n  const coverHash = getMessageMediaHash(message, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n\n  const mediaData = useMedia(\n    getMessageMediaHash(message, 'inline'),\n    !shouldLoad,\n    getMessageMediaFormat(message, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n  );\n\n  const handleForcePlay = useCallback(() => {\n    setIsActivated(true);\n    onPlay(message.id, message.chatId);\n  }, [message, onPlay]);\n\n  const handleTrackChange = useCallback(() => {\n    setIsActivated(false);\n  }, []);\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    isVoice ? 'voice' : 'audio',\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    isActivated,\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message),\n  );\n\n  const isOwn = isOwnMessage(message);\n  const waveformCanvasRef = useWaveformCanvas(theme, voice, (isMediaUnread && !isOwn) ? 1 : playProgress, isOwn);\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  }, [isUploading, isPlaying, isActivated, playPause, onCancelUpload, onPlay, message.id, message.chatId, origin]);\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && (isPlaying || isDownloading)) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia, isDownloading]);\n\n  const handleDownloadClick = useCallback(() => {\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message });\n    } else {\n      downloadMessageMedia({ message });\n    }\n  }, [cancelMessageMediaDownload, downloadMessageMedia, isDownloading, message]);\n\n  const handleSeek = useCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  }, [duration, setCurrentTime]);\n\n  const handleStartSeek = useCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  }, [handleSeek]);\n\n  const handleStopSeek = useCallback(() => {\n    isSeeking.current = false;\n  }, []);\n\n  const handleDateClick = useCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  }, [onDateClick, message.id, message.chatId]);\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toggle-play'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {date && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon-select\" />}\n        </div>\n      )}\n      <Button\n        round\n        ripple={!IS_SINGLE_COLUMN_LAYOUT}\n        size=\"smaller\"\n        color={coverBlobUrl ? 'translucent-white' : 'primary'}\n        className={buttonClassNames.join(' ')}\n        ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n        onClick={handleButtonClick}\n        isRtl={lang.isRtl}\n        backgroundImage={coverBlobUrl}\n      >\n        <i className=\"icon-play\" />\n        <i className=\"icon-pause\" />\n      </Button>\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {audio && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <i className={isDownloading ? 'icon-close' : 'icon-arrow-down'} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && (voice || video) && renderWithTitle()}\n      {origin === AudioOrigin.Inline && voice && (\n        renderVoice(voice, seekerRef, waveformCanvasRef, playProgress, isMediaUnread)\n      )}\n    </div>\n  );\n};\n\nfunction renderAudio(\n  lang: LangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = getTranslation;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {date && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  voice: ApiVoice,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n) {\n  return (\n    <div className=\"content\">\n      <div\n        className=\"waveform\"\n        draggable={false}\n        ref={seekerRef}\n      >\n        <canvas ref={waveformCanvasRef} />\n      </div>\n      <p className={buildClassName('voice-duration', isMediaUnread && 'unread')} dir=\"auto\">\n        {playProgress === 0 ? formatMediaDuration(voice.duration) : formatMediaDuration(voice.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ISettings['theme'],\n  voice?: ApiVoice,\n  playProgress = 0,\n  isOwn = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!voice) {\n      return undefined;\n    }\n\n    const { waveform, duration } = voice;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [voice]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    renderWaveform(canvas, spikes, playProgress, {\n      peak,\n      fillStyle: isOwn ? fillOwnColor : fillColor,\n      progressFillStyle: isOwn ? progressFillOwnColor : progressFillColor,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline no-selection\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\nimport type { ApiChat, ApiCountryCode, ApiUser } from '../../api/types';\n\nimport {\n  selectChat, selectNotifyExceptions, selectNotifySettings, selectUser,\n} from '../../global/selectors';\nimport {\n  getChatDescription, getChatLink, getHasAdminRight, isChatChannel, isUserId, isUserRightBanned, selectIsChatMuted,\n} from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport useLang from '../../hooks/useLang';\n\nimport ListItem from '../ui/ListItem';\nimport Switcher from '../ui/Switcher';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  forceShowSelf?: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    chat?: ApiChat;\n    canInviteUsers?: boolean;\n    isMuted?: boolean;\n    phoneCodeList: ApiCountryCode[];\n  }\n  & Pick<GlobalState, 'lastSyncTime'>;\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  lastSyncTime,\n  user,\n  chat,\n  forceShowSelf,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n}) => {\n  const {\n    loadFullUser,\n    showNotification,\n    updateChatMutedState,\n  } = getActions();\n\n  const {\n    id: userId,\n    fullInfo,\n    username,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId } = chat || {};\n  const lang = useLang();\n\n  useEffect(() => {\n    if (lastSyncTime && userId) {\n      loadFullUser({ userId });\n    }\n  }, [loadFullUser, userId, lastSyncTime]);\n\n  const handleNotificationChange = useCallback(() => {\n    updateChatMutedState({ chatId, isMuted: !isMuted });\n  }, [chatId, isMuted, updateChatMutedState]);\n\n  if (!chat || chat.isRestricted || (isSelf && !forceShowSelf)) {\n    return undefined;\n  }\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n  const link = getChatLink(chat);\n  const description = (fullInfo?.bio) || getChatDescription(chat);\n\n  return (\n    <div className=\"ChatExtra\">\n      {formattedNumber && Boolean(formattedNumber.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={() => copy(formattedNumber, lang('Phone'))}>\n          <span className=\"title\" dir=\"auto\">{formattedNumber}</span>\n          <span className=\"subtitle\">{lang('Phone')}</span>\n        </ListItem>\n      )}\n      {username && (\n        <ListItem\n          icon=\"mention\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(`@${username}`, lang('Username'))}\n        >\n          <span className=\"title\" dir=\"auto\">{renderText(username)}</span>\n          <span className=\"subtitle\">{lang('Username')}</span>\n        </ListItem>\n      )}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n        >\n          <span className=\"title\" dir=\"auto\">\n            {renderText(description, ['br', 'links', 'emoji'])}\n          </span>\n          <span className=\"subtitle\">{lang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {(canInviteUsers || !username) && link && (\n        <ListItem\n          icon={chat.username ? 'mention' : 'link'}\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, lang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{lang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {!forceShowSelf && (\n        <ListItem icon=\"unmute\" ripple onClick={handleNotificationChange}>\n          <span>{lang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={!isMuted}\n            inactive\n          />\n        </ListItem>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId }): StateProps => {\n    const { lastSyncTime, countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = isUserId(chatOrUserId) ? selectUser(global, chatOrUserId) : undefined;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    return {\n      lastSyncTime, phoneCodeList, chat, user, canInviteUsers, isMuted,\n    };\n  },\n)(ChatExtra));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport {\n  isUserId,\n  isUserBot,\n  getUserFirstOrLastName,\n  getPrivateChatUserId,\n  isChatBasicGroup,\n  isChatSuperGroup,\n  isChatChannel,\n  getChatTitle,\n} from '../../global/helpers';\nimport useLang from '../../hooks/useLang';\nimport renderText from './helpers/renderText';\n\nimport Avatar from './Avatar';\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockContact,\n  } = getActions();\n\n  const lang = useLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteMessageForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [deleteHistory, chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockContact({ contactId: chat.id, accessHash: chat.accessHash });\n\n    onClose();\n  }, [deleteHistory, chat.id, chat.accessHash, blockContact, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    onClose,\n    deleteHistory,\n    deleteChatUser,\n    leaveChannel,\n    deleteChannel,\n  ]);\n\n  const handleLeaveChat = useCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else {\n      handleDeleteChat();\n    }\n  }, [chat.id, handleDeleteChat, isChannel, isSuperGroup, leaveChannel, onClose]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          chat={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderMessage() {\n    if (isChannel && chat.isCreator) {\n      return <p>{renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown'])}</p>;\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderMessage()}\n      {isBot && (\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n          {lang('DeleteAndStop')}\n        </Button>\n      )}\n      {canDeleteForAll && (\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForAll}>\n          {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n        </Button>\n      )}\n      {!isPrivateChat && chat.isCreator && (\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n          {lang('DeleteForAll')}\n        </Button>\n      )}\n      <Button\n        color=\"danger\"\n        className=\"confirm-dialog-button\"\n        isText\n        onClick={isPrivateChat ? handleDeleteChat : handleLeaveChat}\n      >\n        {lang(renderActionText())}\n      </Button>\n      <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useCallback, memo, useRef, useEffect, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\n\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\nimport {\n  getMediaTransferState,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  isMessageDocumentVideo,\n} from '../../global/helpers';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useMedia from '../../hooks/useMedia';\nimport useFlag from '../../hooks/useFlag';\n\nimport File from './File';\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nconst BYTES_PER_MB = 1024 * 1024;\n\nconst Document: FC<OwnProps> = ({\n  message,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n  isDownloading,\n}) => {\n  const dispatch = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const document = message.content.document!;\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getMessageMediaHash(message, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, undefined, undefined, undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(message, uploadProgress || downloadProgress, shouldDownload && !isLoaded);\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMessageMediaThumbDataUri(message) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && Boolean(document.mediaType);\n\n  const handleClick = useCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      dispatch.cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n    } else {\n      dispatch.downloadMessageMedia({ message });\n    }\n  }, [\n    isUploading, isDownloading, isTransferring, withMediaViewer, onCancelUpload, dispatch, message, onMediaClick,\n  ]);\n\n  const handleDateClick = useCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  }, [onDateClick, message.id, message.chatId]);\n\n  return (\n    <File\n      ref={ref}\n      name={fileName}\n      extension={extension}\n      size={size}\n      timestamp={withDate ? datetime || timestamp : undefined}\n      thumbnailDataUri={thumbDataUri}\n      previewData={localBlobUrl || previewData}\n      smaller={smaller}\n      isTransferring={isTransferring}\n      isUploading={isUploading}\n      transferProgress={transferProgress}\n      className={className}\n      sender={sender}\n      isSelectable={isSelectable}\n      isSelected={isSelected}\n      actionIcon={withMediaViewer ? (isMessageDocumentVideo(message) ? 'icon-play' : 'icon-eye') : 'icon-download'}\n      onClick={handleClick}\n      onDateClick={onDateClick ? handleDateClick : undefined}\n    />\n  );\n};\n\nexport default memo(Document);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport useLang from '../../hooks/useLang';\nimport buildClassName from '../../util/buildClassName';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {content}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiFakeType } from '../../api/types';\n\nimport useLang from '../../hooks/useLang';\n\nimport './FakeIcon.scss';\n\ntype OwnProps = {\n  fakeType: ApiFakeType;\n};\n\nconst FakeIcon: FC<OwnProps> = ({\n  fakeType,\n}) => {\n  const lang = useLang();\n\n  return <span className=\"FakeIcon\">{lang(fakeType === 'fake' ? 'FakeMessage' : 'ScamMessage')}</span>;\n};\n\nexport default memo(FakeIcon);\n","import type { RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dateFormat';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Link from '../ui/Link';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: string;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const transitionClassNames = useMediaTransition(previewData);\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon-select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={thumbnailDataUri}\n              width={width}\n              height={height}\n              className=\"thumbnail\"\n              alt=\"\"\n            />\n            <img\n              src={previewData}\n              className={buildClassName('full-media', transitionClassNames)}\n              width={width}\n              height={height}\n              alt=\"\"\n            />\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <i\n            className={buildClassName(\n              'action-icon',\n              actionIcon || 'icon-download',\n              shouldSpinnerRender && 'hidden',\n            )}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\">{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {isTransferring && transferProgress ? `${Math.round(transferProgress * 100)}%` : sizeString}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && timestamp && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && timestamp && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import type { MouseEvent as ReactMouseEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { useEffect, useCallback, memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiTypingStatus } from '../../api/types';\nimport type { GlobalState } from '../../global/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getChatTypeString,\n  getChatTitle,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport { selectChat, selectChatMessages, selectChatOnlineCount } from '../../global/selectors';\nimport renderText from './helpers/renderText';\nimport type { LangFn } from '../../hooks/useLang';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\nimport VerifiedIcon from './VerifiedIcon';\nimport TypingStatus from './TypingStatus';\nimport DotAnimation from './DotAnimation';\nimport FakeIcon from './FakeIcon';\n\ntype OwnProps = {\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noRtl?: boolean;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n  }\n  & Pick<GlobalState, 'lastSyncTime'>;\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  lastSyncTime,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n  } = getActions();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin && withFullInfo && lastSyncTime) {\n      loadFullChat({ chatId });\n    }\n  }, [chatId, isMin, lastSyncTime, withFullInfo, loadFullChat, isSuperGroup]);\n\n  const handleAvatarViewerOpen = useCallback((e: ReactMouseEvent<HTMLDivElement, MouseEvent>, hasPhoto: boolean) => {\n    if (chat && hasPhoto) {\n      e.stopPropagation();\n      openMediaViewer({\n        avatarOwnerId: chat.id,\n        origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n      });\n    }\n  }, [chat, avatarSize, openMediaViewer]);\n\n  const lang = useLang();\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">{status}</span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const handle = withUsername ? chat.username : undefined;\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {handle && <span className=\"handle\">{handle}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div className=\"ChatInfo\" dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      <Avatar\n        key={chat.id}\n        size={avatarSize}\n        chat={chat}\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        <div className=\"title\">\n          <h3 dir=\"auto\">{renderText(getChatTitle(lang, chat))}</h3>\n          {chat.isVerified && <VerifiedIcon />}\n          {chat.fakeType && <FakeIcon fakeType={chat.fakeType} />}\n        </div>\n        {renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nfunction getGroupStatus(lang: LangFn, chat: ApiChat) {\n  const chatTypeString = lang(getChatTypeString(chat));\n  const { membersCount } = chat;\n\n  if (chat.isRestricted) {\n    return chatTypeString === 'Channel' ? 'channel is inaccessible' : 'group is inaccessible';\n  }\n\n  if (!membersCount) {\n    return chatTypeString;\n  }\n\n  return chatTypeString === 'Channel'\n    ? lang('Subscribers', membersCount, 'i')\n    : lang('Members', membersCount, 'i');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { lastSyncTime } = global;\n    const chat = selectChat(global, chatId);\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n\n    return {\n      lastSyncTime, chat, onlineCount, areMessagesLoaded,\n    };\n  },\n)(GroupChatInfo));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport { formatPastTimeShort } from '../../util/dateFormat';\nimport useLang from '../../hooks/useLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n};\n\nconst LastMessageMeta: FC<OwnProps> = ({ message, outgoingStatus }) => {\n  const lang = useLang();\n  return (\n    <div className=\"LastMessageMeta\">\n      {outgoingStatus && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">{formatPastTimeShort(lang, message.date * 1000)}</span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useRef } from '../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../api/types';\n\nimport { formatMediaDuration } from '../../util/dateFormat';\nimport stopEvent from '../../util/stopEvent';\nimport {\n  getMessageHtmlId,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransition(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const handleClick = useCallback(() => {\n    onClick!(message.id, message.chatId);\n  }, [message.id, message.chatId, onClick]);\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        <i className={`icon-message-${status}`} />\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useLang();\n  const { transitionClassNames } = useShowTransition(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { IS_TOUCH_ENV, IS_SINGLE_COLUMN_LAYOUT } from '../../util/environment';\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\nimport useTimeout from '../../hooks/useTimeout';\n\nimport Button from '../ui/Button';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit: (password: string) => void;\n};\n\nconst FOCUS_DELAY_TIMEOUT_MS = IS_SINGLE_COLUMN_LAYOUT ? 550 : 400;\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useLang();\n\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, FOCUS_DELAY_TIMEOUT_MS);\n\n  useEffect(() => {\n    if (error) {\n      requestAnimationFrame(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={handleSubmit} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n        >\n          <i className={isPasswordVisible ? 'icon-eye' : 'icon-eye-closed'} />\n        </div>\n      </div>\n      {(canSubmit || shouldShowSubmit) && (\n        <Button type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useCallback, useRef, useEffect, memo,\n} from '../../lib/teact/teact';\n\nimport { isUserId } from '../../global/helpers';\n\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport PrivateChatInfo from './PrivateChatInfo';\nimport GroupChatInfo from './GroupChatInfo';\nimport PickerSelectedItem from './PickerSelectedItem';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLang from '../../hooks/useLang';\n\nimport Loading from '../ui/Loading';\n\nimport './Picker.scss';\n\ntype OwnProps = {\n  itemIds: string[];\n  selectedIds: string[];\n  filterValue?: string;\n  filterPlaceholder?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  onSelectedIdsChange: (ids: string[]) => void;\n  onFilterChange: (value: string) => void;\n  onLoadMore?: () => void;\n};\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst Picker: FC<OwnProps> = ({\n  itemIds,\n  selectedIds,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  isLoading,\n  noScrollRestore,\n  onSelectedIdsChange,\n  onFilterChange,\n  onLoadMore,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    setTimeout(() => {\n      requestAnimationFrame(() => {\n        inputRef.current!.focus();\n      });\n    }, FOCUS_DELAY_MS);\n  }, []);\n\n  const handleItemClick = useCallback((id: string) => {\n    const newSelectedIds = [...selectedIds];\n    if (newSelectedIds.includes(id)) {\n      newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n    } else {\n      newSelectedIds.push(id);\n    }\n    onSelectedIdsChange(newSelectedIds);\n    onFilterChange('');\n  }, [selectedIds, onSelectedIdsChange, onFilterChange]);\n\n  const handleFilterChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange(value);\n  }, [onFilterChange]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(onLoadMore, itemIds, Boolean(filterValue));\n\n  const lang = useLang();\n\n  return (\n    <div className=\"Picker\">\n      <div className=\"picker-header custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {selectedIds.map((id, i) => (\n          <PickerSelectedItem\n            chatOrUserId={id}\n            isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n            canClose\n            onClick={handleItemClick}\n            clickArg={id}\n          />\n        ))}\n        <InputText\n          id={searchInputId}\n          ref={inputRef}\n          value={filterValue}\n          onChange={handleFilterChange}\n          placeholder={filterPlaceholder || lang('SelectChat')}\n        />\n      </div>\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className=\"picker-list custom-scroll\"\n          items={viewportIds}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => (\n            <ListItem\n              key={id}\n              className=\"chat-item-clickable picker-list-item\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleItemClick(id)}\n              ripple\n            >\n              <Checkbox label=\"\" checked={selectedIds.includes(id)} />\n              {isUserId(id) ? (\n                <PrivateChatInfo userId={id} />\n              ) : (\n                <GroupChatInfo chatId={id} />\n              )}\n            </ListItem>\n          ))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\">{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(Picker);\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { selectChat, selectUser } from '../../global/selectors';\nimport { getChatTitle, getUserFirstOrLastName, isUserId } from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\n\nimport './PickerSelectedItem.scss';\n\ntype OwnProps = {\n  chatOrUserId?: string;\n  icon?: string;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  onClick: (arg: any) => void;\n  clickArg: any;\n  className?: string;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n};\n\nconst PickerSelectedItem: FC<OwnProps & StateProps> = ({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  onClick,\n  clickArg,\n  chat,\n  user,\n  className,\n}) => {\n  const lang = useLang();\n\n  let iconElement: TeactNode | undefined;\n  let titleText: any;\n\n  if (icon && title) {\n    iconElement = (\n      <div className=\"item-icon\">\n        <i className={`icon-${icon}`} />\n      </div>\n    );\n\n    titleText = title;\n  } else if (chat || user) {\n    iconElement = (\n      <Avatar\n        chat={chat}\n        user={user}\n        size=\"small\"\n        isSavedMessages={user?.isSelf}\n      />\n    );\n\n    const name = !chat || (user && !user.isSelf)\n      ? getUserFirstOrLastName(user)\n      : getChatTitle(lang, chat, user);\n\n    titleText = name ? renderText(name) : undefined;\n  }\n\n  const fullClassName = buildClassName(\n    'PickerSelectedItem',\n    className,\n    isMinimized && 'minimized',\n    canClose && 'closeable',\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick(clickArg)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className=\"item-name\" dir=\"auto\">\n          {titleText}\n        </div>\n      )}\n      {canClose && (\n        <div className=\"item-remove\">\n          <i className=\"icon-close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId }): StateProps => {\n    if (!chatOrUserId) {\n      return {};\n    }\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = isUserId(chatOrUserId) ? selectUser(global, chatOrUserId) : undefined;\n\n    return {\n      chat,\n      user,\n    };\n  },\n)(PickerSelectedItem));\n","import type { MouseEvent as ReactMouseEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { useEffect, useCallback, memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiUser, ApiTypingStatus, ApiUserStatus } from '../../api/types';\nimport type { GlobalState } from '../../global/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport { getUserFullName, getUserStatus, isUserOnline } from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\nimport VerifiedIcon from './VerifiedIcon';\nimport TypingStatus from './TypingStatus';\nimport DotAnimation from './DotAnimation';\nimport FakeIcon from './FakeIcon';\n\ntype OwnProps = {\n  userId: string;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n    serverTimeOffset: number;\n  }\n  & Pick<GlobalState, 'lastSyncTime'>;\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  noStatusOrTyping,\n  noRtl,\n  user,\n  userStatus,\n  isSavedMessages,\n  areMessagesLoaded,\n  lastSyncTime,\n  serverTimeOffset,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n  } = getActions();\n\n  const { id: userId } = user || {};\n  const fullName = getUserFullName(user);\n\n  useEffect(() => {\n    if (withFullInfo && lastSyncTime && userId) {\n      loadFullUser({ userId });\n    }\n  }, [userId, loadFullUser, lastSyncTime, withFullInfo]);\n\n  const handleAvatarViewerOpen = useCallback((e: ReactMouseEvent<HTMLDivElement, MouseEvent>, hasPhoto: boolean) => {\n    if (user && hasPhoto) {\n      e.stopPropagation();\n      openMediaViewer({\n        avatarOwnerId: user.id,\n        origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n      });\n    }\n  }, [user, avatarSize, openMediaViewer]);\n\n  const lang = useLang();\n\n  if (!user) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">{status}</span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    return (\n      <span className={`status ${isUserOnline(user, userStatus) ? 'online' : ''}`}>\n        {withUsername && user.username && <span className=\"handle\">{user.username}</span>}\n        <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, userStatus, serverTimeOffset)}</span>\n      </span>\n    );\n  }\n\n  return (\n    <div className=\"ChatInfo\" dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      <Avatar\n        key={user.id}\n        size={avatarSize}\n        user={user}\n        isSavedMessages={isSavedMessages}\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {isSavedMessages ? (\n          <div className=\"title\">\n            <h3>{lang('SavedMessages')}</h3>\n          </div>\n        ) : (\n          <div className=\"title\">\n            <h3 dir=\"auto\">{fullName && renderText(fullName)}</h3>\n            {user?.isVerified && <VerifiedIcon />}\n            {user.fakeType && <FakeIcon fakeType={user.fakeType} />}\n          </div>\n        )}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { lastSyncTime, serverTimeOffset } = global;\n    const user = selectUser(global, userId);\n    const userStatus = selectUserStatus(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, userId));\n\n    return {\n      lastSyncTime, user, userStatus, isSavedMessages, areMessagesLoaded, serverTimeOffset,\n    };\n  },\n)(PrivateChatInfo));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getUserColorKey,\n  getUserFullName,\n  isUserId,\n  isChatWithRepliesBot,\n  isDeletedUser,\n} from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport useMedia from '../../hooks/useMedia';\nimport useLang from '../../hooks/useLang';\n\nimport Spinner from '../ui/Spinner';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isFirstPhoto?: boolean;\n  isSavedMessages?: boolean;\n  photo?: ApiPhoto;\n  lastSyncTime?: number;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isFirstPhoto,\n  isSavedMessages,\n  lastSyncTime,\n  onClick,\n}) => {\n  const lang = useLang();\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n\n  function getMediaHash(size: 'normal' | 'big', forceAvatar?: boolean) {\n    if (photo && !forceAvatar) {\n      return `photo${photo.id}?size=c`;\n    }\n\n    let hash: string | undefined;\n    if (!isSavedMessages && !isDeleted && !isRepliesChat) {\n      if (user) {\n        hash = getChatAvatarHash(user, size);\n      } else if (chat) {\n        hash = getChatAvatarHash(chat, size);\n      }\n    }\n\n    return hash;\n  }\n\n  const photoBlobUrl = useMedia(getMediaHash('big'), false, ApiMediaFormat.BlobUrl, lastSyncTime);\n  const avatarMediaHash = isFirstPhoto && !photoBlobUrl ? getMediaHash('normal', true) : undefined;\n  const avatarBlobUrl = useMedia(avatarMediaHash, false, ApiMediaFormat.BlobUrl, lastSyncTime);\n  const imageSrc = photoBlobUrl || avatarBlobUrl || photo?.thumbnail?.dataUri;\n\n  let content: TeactNode | undefined;\n\n  if (isSavedMessages) {\n    content = <i className=\"icon-avatar-saved-messages\" />;\n  } else if (isDeleted) {\n    content = <i className=\"icon-avatar-deleted-account\" />;\n  } else if (isRepliesChat) {\n    content = <i className=\"icon-reply-filled\" />;\n  } else if (imageSrc) {\n    content = <img src={imageSrc} className=\"avatar-media\" alt=\"\" />;\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    `color-bg-${getUserColorKey(user || chat)}`,\n    isSavedMessages && 'saved-messages',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !(imageSrc)) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={imageSrc ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useCallback, memo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiUser, ApiChat, ApiUserStatus } from '../../api/types';\nimport type { GlobalState } from '../../global/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { IS_TOUCH_ENV } from '../../util/environment';\nimport { selectChat, selectUser, selectUserStatus } from '../../global/selectors';\nimport {\n  getUserFullName, getUserStatus, isChatChannel, isUserOnline,\n} from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport buildClassName from '../../util/buildClassName';\nimport usePhotosPreload from './hooks/usePhotosPreload';\nimport useLang from '../../hooks/useLang';\n\nimport VerifiedIcon from './VerifiedIcon';\nimport ProfilePhoto from './ProfilePhoto';\nimport Transition from '../ui/Transition';\nimport FakeIcon from './FakeIcon';\n\nimport './ProfileInfo.scss';\n\ntype OwnProps = {\n  userId: string;\n  forceShowSelf?: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    isSavedMessages?: boolean;\n    animationLevel: 0 | 1 | 2;\n    serverTimeOffset: number;\n  }\n  & Pick<GlobalState, 'connectionState'>;\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  user,\n  userStatus,\n  chat,\n  isSavedMessages,\n  connectionState,\n  animationLevel,\n  serverTimeOffset,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { id: userId } = user || {};\n  const { id: chatId } = chat || {};\n  const fullName = user ? getUserFullName(user) : (chat ? chat.title : '');\n  const photos = user?.photos || chat?.photos || [];\n  const slideAnimation = animationLevel >= 1\n    ? (lang.isRtl ? 'slide-optimized-rtl' : 'slide-optimized')\n    : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = isSavedMessages || photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = isSavedMessages || photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  useEffect(() => {\n    if (connectionState === 'connectionStateReady' && userId && !forceShowSelf) {\n      loadFullUser({ userId });\n    }\n  }, [userId, loadFullUser, connectionState, forceShowSelf]);\n\n  usePhotosPreload(user || chat, photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useCallback(() => {\n    openMediaViewer({\n      avatarOwnerId: userId || chatId,\n      profilePhotoIndex: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  }, [openMediaViewer, userId, chatId, currentPhotoIndex, forceShowSelf]);\n\n  const selectPreviousMedia = useCallback(() => {\n    if (isFirst) {\n      return;\n    }\n\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  }, [currentPhotoIndex, isFirst]);\n\n  const selectNextMedia = useCallback(() => {\n    if (isLast) {\n      return;\n    }\n\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  }, [currentPhotoIndex, isLast]);\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>('.photo-wrapper');\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderPhotoTabs() {\n    if (isSavedMessages || !photos || photos.length <= 1) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"photo-dashes\">\n        {photos.map((_, i) => (\n          <span className={`photo-dash ${i === currentPhotoIndex ? 'current' : ''}`} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto() {\n    const photo = !isSavedMessages && photos && photos.length > 0 ? photos[currentPhotoIndex] : undefined;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={photo}\n        isSavedMessages={isSavedMessages}\n        isFirstPhoto={isFirst}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    if (user) {\n      return (\n        <div className={`status ${isUserOnline(user, userStatus) ? 'online' : ''}`}>\n          <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, userStatus, serverTimeOffset)}</span>\n        </div>\n      );\n    }\n\n    return (\n      <span className=\"status\" dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  const isVerifiedIconShown = (user || chat)?.isVerified;\n  const fakeType = (user || chat)?.fakeType;\n\n  return (\n    <div className={buildClassName('ProfileInfo', forceShowSelf && 'self')} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div className=\"photo-wrapper\">\n        {renderPhotoTabs()}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation} className=\"profile-slide-container\">\n          {renderPhoto()}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            className=\"navigation prev\"\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            className=\"navigation next\"\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className=\"info\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {isSavedMessages ? (\n          <div className=\"title\">\n            <h3 dir=\"auto\">{lang('SavedMessages')}</h3>\n          </div>\n        ) : (\n          <div className=\"title\">\n            <h3 dir=\"auto\">{fullName && renderText(fullName)}</h3>\n            {isVerifiedIconShown && <VerifiedIcon />}\n            {fakeType && <FakeIcon fakeType={fakeType} />}\n          </div>\n        )}\n        {!isSavedMessages && renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { connectionState, serverTimeOffset } = global;\n    const user = selectUser(global, userId);\n    const userStatus = selectUserStatus(global, userId);\n    const chat = selectChat(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const { animationLevel } = global.settings.byKey;\n\n    return {\n      connectionState,\n      user,\n      userStatus,\n      chat,\n      isSavedMessages,\n      animationLevel,\n      serverTimeOffset,\n    };\n  },\n)(ProfileInfo));\n","import type { ApiChat, ApiPhoto, ApiUser } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { useEffect } from '../../../lib/teact/teact';\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  profile: ApiUser | ApiChat | undefined,\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaData = mediaLoader.getFromMemory(`photo${photo.id}?size=c`);\n      if (!mediaData) {\n        mediaLoader.fetch(`photo${photo.id}?size=c`, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import type { RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport { ApiMediaFormat } from '../../api/types';\n\nimport useMedia from '../../hooks/useMedia';\nimport buildClassName from '../../util/buildClassName';\n\nimport './ReactionStaticEmoji.scss';\n\ntype OwnProps = {\n  reaction: string;\n  ref?: RefObject<HTMLImageElement>;\n  className?: string;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  ref,\n  className,\n}) => {\n  const staticIconId = getGlobal().availableReactions?.find((l) => l.reaction === reaction)?.staticIcon?.id;\n  const mediaData = useMedia(`document${staticIconId}`, !staticIconId, ApiMediaFormat.BlobUrl);\n\n  return (\n    <img\n      className={buildClassName('ReactionStaticEmoji', className)}\n      ref={ref}\n      src={mediaData}\n      alt=\"\"\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","import type { ChangeEvent } from 'react';\n\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto, ApiReportReason } from '../../api/types';\n\nimport useLang from '../../hooks/useLang';\n\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\nimport RadioGroup from '../ui/RadioGroup';\nimport InputText from '../ui/InputText';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  subject?: 'peer' | 'messages' | 'media';\n  chatId?: string;\n  photo?: ApiPhoto;\n  messageIds?: number[];\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nconst ReportModal: FC<OwnProps> = ({\n  isOpen,\n  subject = 'messages',\n  chatId,\n  photo,\n  messageIds,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    reportMessages,\n    reportPeer,\n    reportProfilePhoto,\n    exitMessageSelectMode,\n  } = getActions();\n\n  const [selectedReason, setSelectedReason] = useState<ApiReportReason>('spam');\n  const [description, setDescription] = useState('');\n\n  const handleReport = useCallback(() => {\n    switch (subject) {\n      case 'messages':\n        reportMessages({ messageIds, reason: selectedReason, description });\n        exitMessageSelectMode();\n        break;\n      case 'peer':\n        reportPeer({ chatId, reason: selectedReason, description });\n        break;\n      case 'media':\n        reportProfilePhoto({\n          chatId, photo, reason: selectedReason, description,\n        });\n        break;\n    }\n    onClose();\n  }, [\n    description,\n    exitMessageSelectMode,\n    messageIds,\n    photo,\n    onClose,\n    reportMessages,\n    selectedReason,\n    chatId,\n    reportProfilePhoto,\n    reportPeer,\n    subject,\n  ]);\n\n  const handleSelectReason = useCallback((value: string) => {\n    setSelectedReason(value as ApiReportReason);\n  }, []);\n\n  const handleDescriptionChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setDescription(e.target.value);\n  }, []);\n\n  const lang = useLang();\n\n  const REPORT_OPTIONS: { value: ApiReportReason; label: string }[] = useMemo(() => [\n    { value: 'spam', label: lang('lng_report_reason_spam') },\n    { value: 'violence', label: lang('lng_report_reason_violence') },\n    { value: 'pornography', label: lang('lng_report_reason_pornography') },\n    { value: 'childAbuse', label: lang('lng_report_reason_child_abuse') },\n    { value: 'copyright', label: lang('ReportPeer.ReasonCopyright') },\n    { value: 'illegalDrugs', label: 'Illegal Drugs' },\n    { value: 'personalDetails', label: 'Personal Details' },\n    { value: 'other', label: lang('lng_report_reason_other') },\n  ], [lang]);\n\n  if (\n    (subject === 'messages' && !messageIds)\n    || (subject === 'peer' && !chatId)\n    || (subject === 'media' && (!chatId || !photo))\n  ) {\n    return undefined;\n  }\n\n  const title = subject === 'messages'\n    ? lang('lng_report_message_title')\n    : lang('ReportPeer.Report');\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen ? handleReport : undefined}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      className=\"report\"\n      title={title}\n    >\n      <RadioGroup\n        name=\"report-message\"\n        options={REPORT_OPTIONS}\n        onChange={handleSelectReason}\n        selected={selectedReason}\n      />\n      <InputText\n        label={lang('lng_report_reason_description')}\n        value={description}\n        onChange={handleDescriptionChange}\n      />\n      <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleReport}>\n        {lang('lng_report_button')}\n      </Button>\n      <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n    </Modal>\n  );\n};\n\nexport default memo(ReportModal);\n","import type { MouseEvent as ReactMouseEvent } from 'react';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiBotInlineMediaResult, ApiSticker } from '../../api/types';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\nimport safePlay from '../../util/safePlay';\nimport { IS_TOUCH_ENV, IS_WEBM_SUPPORTED } from '../../util/environment';\n\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useMedia from '../../hooks/useMedia';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useContextMenuPosition from '../../hooks/useContextMenuPosition';\n\nimport AnimatedSticker from './AnimatedSticker';\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport './StickerButton.scss';\n\ntype OwnProps<T> = {\n  sticker: ApiSticker;\n  size: number;\n  noAnimate?: boolean;\n  title?: string;\n  className?: string;\n  clickArg: T;\n  noContextMenu?: boolean;\n  isSavedMessages?: boolean;\n  canViewSet?: boolean;\n  observeIntersection: ObserveFn;\n  onClick?: (arg: OwnProps<T>['clickArg'], isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onFaveClick?: (sticker: ApiSticker) => void;\n  onUnfaveClick?: (sticker: ApiSticker) => void;\n  onRemoveRecentClick?: (sticker: ApiSticker) => void;\n};\n\nconst StickerButton = <T extends number | ApiSticker | ApiBotInlineMediaResult | undefined = undefined>({\n  sticker,\n  size,\n  noAnimate,\n  title,\n  className,\n  clickArg,\n  noContextMenu,\n  isSavedMessages,\n  canViewSet,\n  observeIntersection,\n  onClick,\n  onFaveClick,\n  onUnfaveClick,\n  onRemoveRecentClick,\n}: OwnProps<T>) => {\n  const { openStickerSet } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n\n  const localMediaHash = `sticker${sticker.id}`;\n  const stickerSelector = `sticker-button-${sticker.id}`;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const thumbDataUri = sticker.thumbnail ? sticker.thumbnail.dataUri : undefined;\n  const previewBlobUrl = useMedia(`${localMediaHash}?size=m`, !isIntersecting, ApiMediaFormat.BlobUrl);\n\n  const shouldPlay = isIntersecting && !noAnimate;\n  const lottieData = useMedia(sticker.isLottie && localMediaHash, !shouldPlay);\n  const [isLottieLoaded, markLoaded, unmarkLoaded] = useFlag(Boolean(lottieData));\n  const canLottiePlay = isLottieLoaded && shouldPlay;\n  const isVideo = sticker.isVideo && IS_WEBM_SUPPORTED;\n  const videoBlobUrl = useMedia(isVideo && localMediaHash, !shouldPlay, ApiMediaFormat.BlobUrl);\n  const canVideoPlay = Boolean(isVideo && videoBlobUrl && shouldPlay);\n\n  const { transitionClassNames: previewTransitionClassNames } = useShowTransition(\n    Boolean(previewBlobUrl || canLottiePlay),\n    undefined,\n    undefined,\n    'slow',\n  );\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useCallback(() => ref.current, []);\n\n  const getRootElement = useCallback(\n    () => ref.current!.closest('.custom-scroll, .no-scrollbar'),\n    [],\n  );\n\n  const getMenuElement = useCallback(\n    () => ref.current!.querySelector('.sticker-context-menu .bubble'),\n    [],\n  );\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useContextMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n  );\n\n  // To avoid flickering\n  useEffect(() => {\n    if (!shouldPlay) {\n      unmarkLoaded();\n    }\n  }, [unmarkLoaded, shouldPlay]);\n\n  useEffect(() => {\n    if (!isVideo || !ref.current) return;\n    const video = ref.current.querySelector('video');\n    if (!video) return;\n    if (canVideoPlay) {\n      safePlay(video);\n    } else {\n      video.pause();\n    }\n  }, [isVideo, canVideoPlay]);\n\n  useEffect(() => {\n    if (!isIntersecting) handleContextMenuClose();\n  }, [handleContextMenuClose, isIntersecting]);\n\n  const handleClick = () => {\n    if (isContextMenuOpen) return;\n    onClick?.(clickArg);\n  };\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handleRemoveClick = useCallback((e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    onRemoveRecentClick!(sticker);\n  }, [onRemoveRecentClick, sticker]);\n\n  const handleContextRemoveRecent = useCallback(() => {\n    onRemoveRecentClick!(sticker);\n  }, [onRemoveRecentClick, sticker]);\n\n  const handleContextUnfave = useCallback(() => {\n    onUnfaveClick!(sticker);\n  }, [onUnfaveClick, sticker]);\n\n  const handleContextFave = useCallback(() => {\n    onFaveClick!(sticker);\n  }, [onFaveClick, sticker]);\n\n  const handleSendQuiet = useCallback(() => {\n    onClick?.(clickArg, true);\n  }, [clickArg, onClick]);\n\n  const handleSendScheduled = useCallback(() => {\n    onClick?.(clickArg, undefined, true);\n  }, [clickArg, onClick]);\n\n  const handleOpenSet = useCallback(() => {\n    openStickerSet({ sticker });\n  }, [openStickerSet, sticker]);\n\n  const shouldShowCloseButton = !IS_TOUCH_ENV && onRemoveRecentClick;\n\n  const fullClassName = buildClassName(\n    'StickerButton',\n    onClick && 'interactive',\n    stickerSelector,\n    className,\n  );\n\n  const style = (thumbDataUri && !canLottiePlay && !canVideoPlay) ? `background-image: url('${thumbDataUri}');` : '';\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      title={title || (sticker?.emoji)}\n      style={style}\n      data-sticker-id={sticker.id}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {!canLottiePlay && !canVideoPlay && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={previewBlobUrl} className={previewTransitionClassNames} />\n      )}\n      {isVideo && (\n        <video\n          className={previewTransitionClassNames}\n          src={videoBlobUrl}\n          autoPlay={canVideoPlay}\n          loop\n          playsInline\n          muted\n        />\n      )}\n      {shouldPlay && lottieData && (\n        <AnimatedSticker\n          tgsUrl={lottieData}\n          play\n          size={size}\n          isLowPriority\n          onLoad={markLoaded}\n        />\n      )}\n      {shouldShowCloseButton && (\n        <Button\n          className=\"sticker-remove-button\"\n          color=\"dark\"\n          round\n          onClick={handleRemoveClick}\n        >\n          <i className=\"icon-close\" />\n        </Button>\n      )}\n      {!noContextMenu && onClick && contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"sticker-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {onUnfaveClick && (\n            <MenuItem icon=\"favorite\" onClick={handleContextUnfave}>\n              {lang('Stickers.RemoveFromFavorites')}\n            </MenuItem>\n          )}\n          {onFaveClick && (\n            <MenuItem icon=\"favorite\" onClick={handleContextFave}>\n              {lang('AddToFavorites')}\n            </MenuItem>\n          )}\n          {!isSavedMessages && <MenuItem onClick={handleSendQuiet} icon=\"muted\">{lang('SendWithoutSound')}</MenuItem>}\n          <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n            {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n          </MenuItem>\n          {canViewSet && (\n            <MenuItem onClick={handleOpenSet} icon=\"stickers\">\n              {lang('ViewPackPreview')}\n            </MenuItem>\n          )}\n          {onRemoveRecentClick && (\n            <MenuItem icon=\"delete\" onClick={handleContextRemoveRecent}>\n              {lang('DeleteFromRecent')}\n            </MenuItem>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerButton);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport type { OwnProps } from './StickerSetModal';\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst StickerSetModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerSetModal = useModuleLoader(Bundles.Extra, 'StickerSetModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return StickerSetModal ? <StickerSetModal {...props} /> : undefined;\n};\n\nexport default memo(StickerSetModalAsync);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiUser, ApiTypingStatus } from '../../api/types';\n\nimport { selectUser } from '../../global/selectors';\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji).trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport './VerifiedIcon.scss';\n\n// eslint-disable-next-line max-len\nconst VERIFIED_ICON = { __html: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M12.3 2.9c.1.1.2.1.3.2.7.6 1.3 1.1 2 1.7.3.2.6.4.9.4.9.1 1.7.2 2.6.2.5 0 .6.1.7.7.1.9.1 1.8.2 2.6 0 .4.2.7.4 1 .6.7 1.1 1.3 1.7 2 .3.4.3.5 0 .8-.5.6-1.1 1.3-1.6 1.9-.3.3-.5.7-.5 1.2-.1.8-.2 1.7-.2 2.5 0 .4-.2.5-.6.6-.8 0-1.6.1-2.5.2-.5 0-1 .2-1.4.5-.6.5-1.3 1.1-1.9 1.6-.3.3-.5.3-.8 0-.7-.6-1.4-1.2-2-1.8-.3-.2-.6-.4-.9-.4-.9-.1-1.8-.2-2.7-.2-.4 0-.5-.2-.6-.5 0-.9-.1-1.7-.2-2.6 0-.4-.2-.8-.4-1.1-.6-.6-1.1-1.3-1.6-2-.4-.4-.3-.5 0-1 .6-.6 1.1-1.3 1.7-1.9.3-.3.4-.6.4-1 0-.8.1-1.6.2-2.5 0-.5.1-.6.6-.6.9-.1 1.7-.1 2.6-.2.4 0 .7-.2 1-.4.7-.6 1.4-1.2 2.1-1.7.1-.2.3-.3.5-.2z\" style=\"fill: var(--color-fill)\"/><path class=\"lol\" d=\"M16.4 10.1l-.2.2-5.4 5.4c-.1.1-.2.2-.4 0l-2.6-2.6c-.2-.2-.1-.3 0-.4.2-.2.5-.6.7-.6.3 0 .5.4.7.6l1.1 1.1c.2.2.3.2.5 0l4.3-4.3c.2-.2.4-.3.6 0 .1.2.3.3.4.5.2 0 .3.1.3.1z\" style=\"fill: var(--color-checkmark)\"/></svg>' };\n\nconst VerifiedIcon: FC = () => {\n  return (\n    // eslint-disable-next-line react/no-danger\n    <span className=\"VerifiedIcon\" dangerouslySetInnerHTML={VERIFIED_ICON} />\n  );\n};\n\nexport default VerifiedIcon;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { TextPart } from '../../types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport trimText from '../../util/trimText';\nimport renderText from './helpers/renderText';\nimport { formatPastTimeShort } from '../../util/dateFormat';\nimport useLang from '../../hooks/useLang';\nimport { renderMessageSummary } from './helpers/renderMessageText';\n\nimport Media from './Media';\nimport Link from '../ui/Link';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (messageId: number, chatId: string) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message) !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useCallback(() => {\n    onMessageClick(message.id, message.chatId);\n  }, [onMessageClick, message.id, message.chatId]);\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text=\"\"\n          isRtl={lang.isRtl}\n        >\n          {url.replace('mailto:', '') || displayUrl}\n        </SafeLink>\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import type {\n  ApiPhoto, ApiVideo, ApiSticker, ApiDimensions,\n} from '../../../api/types';\n\nimport { STICKER_SIZE_INLINE_DESKTOP_FACTOR, STICKER_SIZE_INLINE_MOBILE_FACTOR } from '../../../config';\nimport { IS_SINGLE_COLUMN_LAYOUT, IS_TOUCH_ENV } from '../../../util/environment';\nimport windowSize from '../../../util/windowSize';\nimport { getPhotoInlineDimensions, getVideoDimensions } from '../../../global/helpers';\n\nexport const MEDIA_VIEWER_MEDIA_QUERY = '(max-height: 640px)';\nexport const REM = parseInt(getComputedStyle(document.documentElement).fontSize, 10);\nexport const ROUND_VIDEO_DIMENSIONS_PX = 240;\nexport const GIF_MIN_WIDTH = 300;\nexport const AVATAR_FULL_DIMENSIONS = { width: 640, height: 640 };\nexport const LIKE_STICKER_ID = '4986041492570112461';\n\nconst DEFAULT_MEDIA_DIMENSIONS: ApiDimensions = { width: 100, height: 100 };\nconst MOBILE_SCREEN_NO_AVATARS_MESSAGE_EXTRA_WIDTH_REM = 4.5;\nconst MOBILE_SCREEN_MESSAGE_EXTRA_WIDTH_REM = 7;\nconst MESSAGE_MAX_WIDTH_REM = 29;\nconst MESSAGE_OWN_MAX_WIDTH_REM = 30;\n\nlet cachedMaxWidthOwn: number | undefined;\nlet cachedMaxWidth: number | undefined;\nlet cachedMaxWidthNoAvatar: number | undefined;\n\nfunction getMaxMessageWidthRem(fromOwnMessage: boolean, noAvatars?: boolean) {\n  const regularMaxWidth = fromOwnMessage ? MESSAGE_OWN_MAX_WIDTH_REM : MESSAGE_MAX_WIDTH_REM;\n  if (!IS_SINGLE_COLUMN_LAYOUT) {\n    return regularMaxWidth;\n  }\n\n  const { width: windowWidth } = windowSize.get();\n\n  // @optimization Limitation: changing device screen width not supported\n  if (!cachedMaxWidthOwn) {\n    cachedMaxWidthOwn = Math.min(\n      MESSAGE_OWN_MAX_WIDTH_REM,\n      windowWidth / REM - MOBILE_SCREEN_NO_AVATARS_MESSAGE_EXTRA_WIDTH_REM,\n    );\n  }\n  if (!cachedMaxWidth) {\n    cachedMaxWidth = Math.min(\n      MESSAGE_MAX_WIDTH_REM,\n      windowWidth / REM - MOBILE_SCREEN_MESSAGE_EXTRA_WIDTH_REM,\n    );\n  }\n  if (!cachedMaxWidthNoAvatar) {\n    cachedMaxWidthNoAvatar = Math.min(\n      MESSAGE_MAX_WIDTH_REM,\n      windowWidth / REM - MOBILE_SCREEN_NO_AVATARS_MESSAGE_EXTRA_WIDTH_REM,\n    );\n  }\n\n  return fromOwnMessage\n    ? cachedMaxWidthOwn\n    : (noAvatars ? cachedMaxWidthNoAvatar : cachedMaxWidth);\n}\n\nexport function getAvailableWidth(\n  fromOwnMessage: boolean,\n  isForwarded?: boolean,\n  isWebPagePhoto?: boolean,\n  noAvatars?: boolean,\n) {\n  const extraPaddingRem = isForwarded || isWebPagePhoto ? 1.625 : 0;\n  const availableWidthRem = getMaxMessageWidthRem(fromOwnMessage, noAvatars) - extraPaddingRem;\n\n  return availableWidthRem * REM;\n}\n\nfunction getAvailableHeight(isGif?: boolean, aspectRatio?: number) {\n  if (\n    isGif && aspectRatio\n    && aspectRatio >= 0.75 && aspectRatio <= 1.25\n  ) {\n    return 20 * REM;\n  }\n\n  return 27 * REM;\n}\n\nfunction calculateDimensionsForMessageMedia({\n  width,\n  height,\n  fromOwnMessage,\n  isForwarded,\n  isWebPagePhoto,\n  isGif,\n  noAvatars,\n}: {\n  width: number;\n  height: number;\n  fromOwnMessage: boolean;\n  isForwarded?: boolean;\n  isWebPagePhoto?: boolean;\n  isGif?: boolean;\n  noAvatars?: boolean;\n}): ApiDimensions {\n  const aspectRatio = height / width;\n  const availableWidth = getAvailableWidth(fromOwnMessage, isForwarded, isWebPagePhoto, noAvatars);\n  const availableHeight = getAvailableHeight(isGif, aspectRatio);\n  const mediaWidth = isGif ? Math.max(GIF_MIN_WIDTH, width) : width;\n  const mediaHeight = isGif ? height * (mediaWidth / width) : height;\n\n  return calculateDimensions(availableWidth, availableHeight, mediaWidth, mediaHeight);\n}\n\nexport function getMediaViewerAvailableDimensions(withFooter: boolean, isVideo: boolean): ApiDimensions {\n  const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n  const { width: windowWidth, height: windowHeight } = windowSize.get();\n  let occupiedHeightRem = isVideo && mql.matches ? 10 : 8.25;\n  if (withFooter && !IS_TOUCH_ENV) {\n    occupiedHeightRem = mql.matches ? 10 : 12.5;\n  }\n  return {\n    width: windowWidth,\n    height: windowHeight - occupiedHeightRem * REM,\n  };\n}\n\nexport function calculateInlineImageDimensions(\n  photo: ApiPhoto,\n  fromOwnMessage: boolean,\n  isForwarded?: boolean,\n  isWebPagePhoto?: boolean,\n  noAvatars?: boolean,\n) {\n  const { width, height } = getPhotoInlineDimensions(photo) || DEFAULT_MEDIA_DIMENSIONS;\n\n  return calculateDimensionsForMessageMedia({\n    width,\n    height,\n    fromOwnMessage,\n    isForwarded,\n    isWebPagePhoto,\n    noAvatars,\n  });\n}\n\nexport function calculateVideoDimensions(\n  video: ApiVideo,\n  fromOwnMessage: boolean,\n  isForwarded?: boolean,\n  noAvatars?: boolean,\n) {\n  const { width, height } = getVideoDimensions(video) || DEFAULT_MEDIA_DIMENSIONS;\n\n  return calculateDimensionsForMessageMedia({\n    width,\n    height,\n    fromOwnMessage,\n    isForwarded,\n    isGif: video.isGif,\n    noAvatars,\n  });\n}\n\nexport function getPictogramDimensions(): ApiDimensions {\n  return {\n    width: 2 * REM,\n    height: 2 * REM,\n  };\n}\n\nexport function getDocumentThumbnailDimensions(smaller?: boolean): ApiDimensions {\n  if (smaller) {\n    return {\n      width: 3 * REM,\n      height: 3 * REM,\n    };\n  }\n\n  return {\n    width: 3.375 * REM,\n    height: 3.375 * REM,\n  };\n}\n\nexport function getStickerDimensions(sticker: ApiSticker): ApiDimensions {\n  const { width } = sticker;\n  let { height } = sticker;\n\n  // For some reason this sticker has some weird `height` value\n  if (sticker.id === LIKE_STICKER_ID) {\n    height = width;\n  }\n\n  const aspectRatio = (height && width) && height / width;\n  const baseWidth = REM * (\n    IS_SINGLE_COLUMN_LAYOUT\n      ? STICKER_SIZE_INLINE_MOBILE_FACTOR\n      : STICKER_SIZE_INLINE_DESKTOP_FACTOR\n  );\n  const calculatedHeight = aspectRatio ? baseWidth * aspectRatio : baseWidth;\n\n  if (aspectRatio && calculatedHeight > baseWidth) {\n    return {\n      width: Math.round(baseWidth / aspectRatio),\n      height: baseWidth,\n    };\n  }\n\n  return {\n    width: baseWidth,\n    height: calculatedHeight,\n  };\n}\n\nexport function calculateMediaViewerDimensions(\n  { width, height }: ApiDimensions, withFooter: boolean, isVideo: boolean = false,\n): ApiDimensions {\n  const { width: availableWidth, height: availableHeight } = getMediaViewerAvailableDimensions(withFooter, isVideo);\n\n  return calculateDimensions(availableWidth, availableHeight, width, height);\n}\n\nexport function calculateDimensions(\n  availableWidth: number,\n  availableHeight: number,\n  mediaWidth: number,\n  mediaHeight: number,\n): ApiDimensions {\n  const aspectRatio = mediaHeight / mediaWidth;\n  const calculatedWidth = Math.min(mediaWidth, availableWidth);\n  const calculatedHeight = Math.round(calculatedWidth * aspectRatio);\n\n  if (calculatedHeight > availableHeight) {\n    return {\n      width: Math.round(availableHeight / aspectRatio),\n      height: availableHeight,\n    };\n  }\n\n  return {\n    width: calculatedWidth,\n    height: Math.round(calculatedWidth * aspectRatio),\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { Bundles } from '../../util/moduleLoader';\nimport type { OwnProps } from './ChatFolderModal';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default memo(ChatFolderModalAsync);\n","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType(orderDiffById: Record<string, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById);\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: string): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport buildClassName from '../../../util/buildClassName';\n\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './Badge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  isPinned?: boolean;\n  isMuted?: boolean;\n};\n\nconst Badge: FC<OwnProps> = ({ chat, isPinned, isMuted }) => {\n  const isShown = Boolean(\n    chat.unreadCount || chat.unreadMentionsCount || chat.hasUnreadMark || isPinned || chat.unreadReactionsCount,\n  );\n  const isUnread = Boolean(chat.unreadCount || chat.hasUnreadMark);\n  const className = buildClassName(\n    'Badge',\n    isMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  function renderContent() {\n    const unreadReactionsElement = chat.unreadReactionsCount && (\n      <div className={buildClassName('Badge reaction', isMuted && 'muted')}>\n        <i className=\"icon-heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = chat.unreadMentionsCount && (\n      <div className=\"Badge mention\">\n        <i className=\"icon-mention\" />\n      </div>\n    );\n\n    const unreadCountElement = (chat.hasUnreadMark || chat.unreadCount) ? (\n      <div className={className}>\n        {!chat.hasUnreadMark && formatIntegerCompact(chat.unreadCount!)}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement && (\n      <div className={className}>\n        <i className=\"icon-pinned-chat\" />\n      </div>\n    );\n\n    const elements = [unreadReactionsElement, unreadMentionsElement, unreadCountElement, pinnedElement].filter(Boolean);\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    return (\n      <div className=\"Badge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"Badge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(Badge);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport buildClassName from '../../../util/buildClassName';\n\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../../../util/environment';\n\nimport './ChatCallStatus.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n}) => {\n  return (\n    <div className={buildClassName(\n      'ChatCallStatus',\n      isActive && 'active',\n      isSelected && !IS_SINGLE_COLUMN_LAYOUT && 'selected',\n    )}\n    >\n      <div className=\"indicator\">\n        <div />\n        <div />\n        <div />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useLayoutEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { LangFn } from '../../../hooks/useLang';\nimport useLang from '../../../hooks/useLang';\n\nimport type {\n  ApiChat, ApiUser, ApiMessage, ApiMessageOutgoingStatus, ApiFormattedText, ApiUserStatus,\n} from '../../../api/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../../../util/environment';\nimport {\n  getChatTitle,\n  isUserId,\n  isActionMessage,\n  getPrivateChatUserId,\n  getMessageAction,\n  getMessageSenderName,\n  isChatChannel,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n  getMessageSticker,\n  selectIsChatMuted,\n  getMessageRoundVideo,\n} from '../../../global/helpers';\nimport {\n  selectChat, selectUser, selectChatMessage, selectOutgoingStatus, selectDraft, selectCurrentMessageList,\n  selectNotifySettings, selectNotifyExceptions, selectUserStatus,\n} from '../../../global/selectors';\nimport { renderActionMessageText } from '../../common/helpers/renderActionMessageText';\nimport renderText from '../../common/helpers/renderText';\nimport { fastRaf } from '../../../util/schedulers';\nimport buildClassName from '../../../util/buildClassName';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport useMedia from '../../../hooks/useMedia';\nimport { ChatAnimationTypes } from './hooks';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport Avatar from '../../common/Avatar';\nimport VerifiedIcon from '../../common/VerifiedIcon';\nimport TypingStatus from '../../common/TypingStatus';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport ListItem from '../../ui/ListItem';\nimport Badge from './Badge';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport ChatCallStatus from './ChatCallStatus';\nimport ReportModal from '../../common/ReportModal';\nimport FakeIcon from '../../common/FakeIcon';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  style?: string;\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  actionTargetUserIds?: string[];\n  actionTargetMessage?: ApiMessage;\n  actionTargetChatId?: string;\n  lastMessageSender?: ApiUser;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiFormattedText;\n  animationLevel?: number;\n  isSelected?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastSyncTime?: number;\n};\n\nconst ANIMATION_DURATION = 200;\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  style,\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  chat,\n  isMuted,\n  user,\n  userStatus,\n  actionTargetUserIds,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  actionTargetMessage,\n  actionTargetChatId,\n  draft,\n  animationLevel,\n  isSelected,\n  canScrollDown,\n  canChangeFolder,\n  lastSyncTime,\n}) => {\n  const {\n    openChat,\n    focusLastMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderReportModal, markRenderReportModal, unmarkRenderReportModal] = useFlag();\n\n  const { lastMessage, typingStatus } = chat || {};\n  const isAction = lastMessage && isActionMessage(lastMessage);\n\n  useEnsureMessage(chatId, isAction ? lastMessage!.replyToMessageId : undefined, actionTargetMessage);\n\n  const mediaThumbnail = lastMessage && !getMessageSticker(lastMessage)\n    ? getMessageMediaThumbDataUri(lastMessage)\n    : undefined;\n  const mediaBlobUrl = useMedia(lastMessage ? getMessageMediaHash(lastMessage, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const actionTargetUsers = useMemo(() => {\n    if (!actionTargetUserIds) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    return actionTargetUserIds.map((userId) => usersById[userId]).filter<ApiUser>(Boolean as any);\n  }, [actionTargetUserIds]);\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate.\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (animationLevel === 0 || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      fastRaf(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * 100}%, 0)`;\n\n      fastRaf(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      fastRaf(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [animationLevel, orderDiff, animationType]);\n\n  const handleClick = useCallback(() => {\n    openChat({ id: chatId, shouldReplaceHistory: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  }, [\n    isSelected,\n    canScrollDown,\n    openChat,\n    chatId,\n    focusLastMessage,\n  ]);\n\n  const handleDelete = useCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  }, [markRenderDeleteModal, openDeleteModal]);\n\n  const handleChatFolderChange = useCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  }, [markRenderChatFolderModal, openChatFolderModal]);\n\n  const handleReport = useCallback(() => {\n    markRenderReportModal();\n    openReportModal();\n  }, [markRenderReportModal, openReportModal]);\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n  });\n\n  const lang = useLang();\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderLastMessageOrTyping() {\n    if (typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (draft?.text.length) {\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{lang('Draft')}</span>\n          {renderText(draft.text)}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    if (isAction) {\n      const isChat = chat && (isChatChannel(chat) || lastMessage.senderId === lastMessage.chatId);\n\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {renderActionMessageText(\n            lang,\n            lastMessage,\n            !isChat ? lastMessageSender : undefined,\n            isChat ? chat : undefined,\n            actionTargetUsers,\n            actionTargetMessage,\n            actionTargetChatId,\n            { asTextWithSpoilers: true },\n          )}\n        </p>\n      );\n    }\n\n    const senderName = getMessageSenderName(lang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {renderSummary(lang, lastMessage!, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }\n\n  const className = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isSelected && 'selected',\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={className}\n      style={style}\n      ripple={!IS_SINGLE_COLUMN_LAYOUT}\n      contextActions={contextActions}\n      onClick={handleClick}\n    >\n      <div className=\"status\">\n        <Avatar\n          chat={chat}\n          user={user}\n          userStatus={userStatus}\n          isSavedMessages={user?.isSelf}\n          lastSyncTime={lastSyncTime}\n        />\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isSelected={isSelected} isActive={animationLevel !== 0} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"title\">\n          <h3>{renderText(getChatTitle(lang, chat, user))}</h3>\n          {chat.isVerified && <VerifiedIcon />}\n          {chat.fakeType && <FakeIcon fakeType={chat.fakeType} />}\n          {isMuted && <i className=\"icon-muted\" />}\n          {chat.lastMessage && (\n            <LastMessageMeta\n              message={chat.lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderLastMessageOrTyping()}\n          <Badge chat={chat} isPinned={isPinned} isMuted={isMuted} />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderReportModal && (\n        <ReportModal\n          isOpen={isReportModalOpen}\n          onClose={closeReportModal}\n          onCloseAnimationEnd={unmarkRenderReportModal}\n          chatId={chatId}\n          subject=\"peer\"\n        />\n      )}\n    </ListItem>\n  );\n};\n\nfunction renderSummary(lang: LangFn, message: ApiMessage, blobUrl?: string, isRoundVideo?: boolean) {\n  if (!blobUrl) {\n    return renderMessageSummary(lang, message);\n  }\n\n  return (\n    <span className=\"media-preview\">\n      <img src={blobUrl} alt=\"\" className={buildClassName('media-preview--image', isRoundVideo && 'round')} />\n      {getMessageVideo(message) && <i className=\"icon-play\" />}\n      {renderMessageSummary(lang, message, true)}\n    </span>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat || !chat.lastMessage) {\n      return {};\n    }\n\n    const { senderId, replyToMessageId, isOutgoing } = chat.lastMessage;\n    const lastMessageSender = senderId ? selectUser(global, senderId) : undefined;\n    const lastMessageAction = getMessageAction(chat.lastMessage);\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chat.id, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const privateChatUserId = getPrivateChatUserId(chat);\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = chatId === currentChatId && currentThreadId === MAIN_THREAD_ID;\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      animationLevel: global.settings.byKey.animationLevel,\n      isSelected,\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: Boolean(global.chatFolders.orderedIds?.length),\n      lastSyncTime: global.lastSyncTime,\n      ...(isOutgoing && { lastMessageOutgoingStatus: selectOutgoingStatus(global, chat.lastMessage) }),\n      ...(privateChatUserId && {\n        user: selectUser(global, privateChatUserId),\n        userStatus: selectUserStatus(global, privateChatUserId),\n      }),\n    };\n  },\n)(Chat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport { SettingsScreens } from '../../../types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\n\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../../../util/environment';\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\n\nimport './EmptyFolder.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'folder';\n  foldersDispatch?: FolderEditDispatch;\n  onScreenSelect?: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 128;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onScreenSelect,\n}) => {\n  const lang = useLang();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch!({ type: 'editFolder', payload: chatFolder });\n    onScreenSelect!(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onScreenSelect]);\n\n  return (\n    <div className=\"EmptyFolder\">\n      <div className=\"sticker\">\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className=\"title\" dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className=\"description\" dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && foldersDispatch && onScreenSelect && (\n        <Button\n          ripple={!IS_SINGLE_COLUMN_LAYOUT}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <i className=\"icon-settings\" />\n          {lang('ChatList.EmptyChatListEditFilter')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo, useEffect } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { SettingsScreens } from '../../../types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVED_FOLDER_ID,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n} from '../../../config';\nimport { IS_MAC_OS, IS_PWA } from '../../../util/environment';\nimport { mapValues } from '../../../util/iteratees';\nimport { getPinnedChatsCount, getOrderKey } from '../../../util/folderManager';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useChatAnimationType } from './hooks';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\n\ntype OwnProps = {\n  folderType: 'all' | 'archived' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  lastSyncTime?: number;\n  foldersDispatch?: FolderEditDispatch;\n  onScreenSelect?: (screen: SettingsScreens) => void;\n};\n\nconst ChatList: FC<OwnProps> = ({\n  folderType,\n  folderId,\n  isActive,\n  foldersDispatch,\n  onScreenSelect,\n}) => {\n  const { openChat, openNextChat } = getActions();\n\n  const resolvedFolderId = (\n    folderType === 'all' ? ALL_FOLDER_ID : folderType === 'archived' ? ARCHIVED_FOLDER_ID : folderId!\n  );\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePrevious(orderById);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [orderById, prevOrderById]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(isActive && orderedIds?.length ? {\n    'alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined);\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || !orderedIds || !IS_PWA) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit) return;\n\n        const position = Number(digit) - 1;\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isActive, openChat, openNextChat, orderedIds]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          style={`top: ${(viewportOffset + i) * CHAT_HEIGHT_PX}px;`}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className=\"chat-list custom-scroll\"\n      items={viewportIds}\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      maxHeight={(orderedIds?.length || 0) * CHAT_HEIGHT_PX}\n      onLoadMore={getMore}\n    >\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch}\n            onScreenSelect={onScreenSelect}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport {\n  getChatTitle,\n  getSenderTitle,\n  isUserId,\n  isChatGroup,\n} from '../../../../global/helpers';\nimport type { LangFn } from '../../../../hooks/useLang';\n\nexport function getSenderName(\n  lang: LangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getSenderTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if (isUserId(senderId) && (sender as ApiUser).isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport type { OwnProps } from './CustomSendMenu';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default memo(CustomSendMenuAsync);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport useFlag from '../../../hooks/useFlag';\nimport buildClassName from '../../../util/buildClassName';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, onFileSelect }) => {\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragEnter = () => { markHovered(); };\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      onDrop={onFileSelect}\n      onDragEnter={handleDragEnter}\n      onDragLeave={handleDragLeave}\n    >\n      <div className=\"target-content\">\n        <div className={`icon icon-${isQuick ? 'photo' : 'document'}`} />\n        <div className=\"title\">Drop files here to send them</div>\n        <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\n\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport buildClassName from '../../../util/buildClassName';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], isQuick: boolean) => void;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePrevious(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      if (folderFiles.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, false);\n  }, [onFileSelect, onHide]);\n\n  const handleQuickFilesDrop = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  }, [onFileSelect, onHide]);\n\n  const handleDragLeave = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if ((fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && !toTarget) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  }, [onHide]);\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerId=\"#middle-column-portals\">\n      <div className={className} onDragLeave={handleDragLeave} onDragOver={handleDragOver} onDrop={onHide}>\n        <DropTarget onFileSelect={handleFilesDrop} />\n        {(withQuick || prevWithQuick) && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport type { OwnProps } from './EmojiTooltip';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default memo(EmojiTooltipAsync);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect, useRef, memo, useState, useCallback,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { IAnchorPosition, ISettings } from '../../../types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { selectReplyingToId } from '../../../global/selectors';\nimport { debounce } from '../../../util/schedulers';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport buildClassName from '../../../util/buildClassName';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_SINGLE_COLUMN_LAYOUT, IS_TOUCH_ENV,\n} from '../../../util/environment';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport { isHeavyAnimating } from '../../../hooks/useHeavyAnimationCheck';\nimport useSendMessageAction from '../../../hooks/useSendMessageAction';\nimport useLang from '../../../hooks/useLang';\nimport parseEmojiOnlyString from '../../common/helpers/parseEmojiOnlyString';\nimport { isSelectionInsideInput } from './helpers/selection';\nimport renderText from '../../common/helpers/renderText';\n\nimport TextFormatter from './TextFormatter';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\ntype OwnProps = {\n  id: string;\n  chatId: string;\n  threadId: number;\n  isAttachmentModalInput?: boolean;\n  editableInputId?: string;\n  html: string;\n  placeholder: string;\n  forcedPlaceholder?: string;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n};\n\ntype StateProps = {\n  replyingToId?: number;\n  noTabCapture?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n};\n\nconst MAX_INPUT_HEIGHT = IS_SINGLE_COLUMN_LAYOUT ? 256 : 416;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 90;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  id,\n  chatId,\n  threadId,\n  isAttachmentModalInput,\n  editableInputId,\n  html,\n  placeholder,\n  forcedPlaceholder,\n  canAutoFocus,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyingToId,\n  noTabCapture,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n\n  useEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput]);\n\n  useLayoutEffectWithPrevDeps(([prevHtml]) => {\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (prevHtml !== undefined && prevHtml !== html) {\n      updateInputHeight(!html.length);\n    }\n  }, [html]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useCallback(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (isHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  }, []);\n\n  const handleCloseTextFormatter = useCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  }, [closeTextFormatter]);\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const inputRect = inputRef.current!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - inputRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > inputRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = inputRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - inputRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    // Small delay to allow browser properly recalculate selection\n    setTimeout(processSelection, 1);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      e.target.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    if (!html.length && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !(IS_IOS || IS_ANDROID)\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (e.key === 'ArrowUp' && !html.length && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n    sendMessageAction({ type: 'typing' });\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function stopEvent(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  function updateInputHeight(willSend = false) {\n    const input = inputRef.current!;\n    const clone = cloneRef.current!;\n    const currentHeight = Number(input.style.height.replace('px', ''));\n    const newHeight = Math.min(clone.scrollHeight, MAX_INPUT_HEIGHT);\n    if (newHeight === currentHeight) {\n      return;\n    }\n\n    const transitionDuration = Math.round(\n      TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n    );\n\n    const exec = () => {\n      input.style.height = `${newHeight}px`;\n      input.style.transitionDuration = `${transitionDuration}ms`;\n      input.classList.toggle('overflown', clone.scrollHeight > MAX_INPUT_HEIGHT);\n    };\n\n    if (willSend) {\n      // Sync with sending animation\n      requestAnimationFrame(exec);\n    } else {\n      exec();\n    }\n  }\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyingToId, canAutoFocus]);\n\n  useEffect(() => {\n    if (noTabCapture) {\n      return undefined;\n    }\n\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab') {\n        e.preventDefault();\n        requestAnimationFrame(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput, noTabCapture]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const className = buildClassName(\n    'form-control custom-scroll',\n    html.length > 0 && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div\n        ref={inputRef}\n        id={editableInputId || EDITABLE_INPUT_ID}\n        className={className}\n        contentEditable\n        dir=\"auto\"\n        onClick={focusInput}\n        onChange={handleChange}\n        onKeyDown={handleKeyDown}\n        onMouseDown={handleMouseDown}\n        onContextMenu={IS_ANDROID ? stopEvent : undefined}\n        onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n        aria-label={placeholder}\n      />\n      <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n      {!forcedPlaceholder && <span className=\"placeholder-text\" dir=\"auto\">{placeholder}</span>}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      messageSendKeyCombo,\n      replyingToId: chatId && threadId ? selectReplyingToId(global, chatId, threadId) : undefined,\n      noTabCapture: global.pollModal.isOpen || global.payment.isPaymentModalOpen,\n    };\n  },\n)(MessageInput));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { ensureProtocol } from '../../../util/ensureProtocol';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport getKeyFromEvent from '../../../util/getKeyFromEvent';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useVirtualBackdrop from '../../../hooks/useVirtualBackdrop';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\n\nimport './TextFormatter.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  anchorPosition?: IAnchorPosition;\n  selectedRange?: Range;\n  setSelectedRange: (range: Range) => void;\n  onClose: () => void;\n};\n\ninterface ISelectedTextFormats {\n  bold?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n  strikethrough?: boolean;\n  monospace?: boolean;\n  spoiler?: boolean;\n}\n\nconst TEXT_FORMAT_BY_TAG_NAME: Record<string, keyof ISelectedTextFormats> = {\n  B: 'bold',\n  STRONG: 'bold',\n  I: 'italic',\n  EM: 'italic',\n  U: 'underline',\n  DEL: 'strikethrough',\n  CODE: 'monospace',\n  SPAN: 'spoiler',\n};\nconst fragmentEl = document.createElement('div');\n\nconst TextFormatter: FC<OwnProps> = ({\n  isOpen,\n  anchorPosition,\n  selectedRange,\n  setSelectedRange,\n  onClose,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const linkUrlInputRef = useRef<HTMLInputElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n  const [isLinkControlOpen, openLinkControl, closeLinkControl] = useFlag();\n  const [linkUrl, setLinkUrl] = useState('');\n  const [isEditingLink, setIsEditingLink] = useState(false);\n  const [inputClassName, setInputClassName] = useState<string | undefined>();\n  const [selectedTextFormats, setSelectedTextFormats] = useState<ISelectedTextFormats>({});\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n  useVirtualBackdrop(\n    isOpen,\n    containerRef,\n    onClose,\n  );\n\n  useEffect(() => {\n    if (isLinkControlOpen) {\n      linkUrlInputRef.current!.focus();\n    } else {\n      setLinkUrl('');\n      setIsEditingLink(false);\n    }\n  }, [isLinkControlOpen]);\n\n  useEffect(() => {\n    if (!shouldRender) {\n      closeLinkControl();\n      setSelectedTextFormats({});\n      setInputClassName(undefined);\n    }\n  }, [closeLinkControl, shouldRender]);\n\n  useEffect(() => {\n    if (!isOpen || !selectedRange) {\n      return;\n    }\n\n    const selectedFormats: ISelectedTextFormats = {};\n    let { parentElement } = selectedRange.commonAncestorContainer;\n    while (parentElement && parentElement.id !== EDITABLE_INPUT_ID) {\n      const textFormat = TEXT_FORMAT_BY_TAG_NAME[parentElement.tagName];\n      if (textFormat) {\n        selectedFormats[textFormat] = true;\n      }\n\n      parentElement = parentElement.parentElement;\n    }\n\n    setSelectedTextFormats(selectedFormats);\n  }, [isOpen, selectedRange, openLinkControl]);\n\n  const restoreSelection = useCallback(() => {\n    if (!selectedRange) {\n      return;\n    }\n\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(selectedRange);\n    }\n  }, [selectedRange]);\n\n  const updateSelectedRange = useCallback(() => {\n    const selection = window.getSelection();\n    if (selection) {\n      setSelectedRange(selection.getRangeAt(0));\n    }\n  }, [setSelectedRange]);\n\n  const getSelectedText = useCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n    fragmentEl.replaceChildren(selectedRange.cloneContents());\n    return fragmentEl.innerHTML;\n  }, [selectedRange]);\n\n  const getSelectedElement = useCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n\n    return selectedRange.commonAncestorContainer.parentElement;\n  }, [selectedRange]);\n\n  function updateInputStyles() {\n    const input = linkUrlInputRef.current;\n    if (!input) {\n      return;\n    }\n\n    const { offsetWidth, scrollWidth, scrollLeft } = input;\n    if (scrollWidth <= offsetWidth) {\n      setInputClassName(undefined);\n      return;\n    }\n\n    let className = '';\n    if (scrollLeft < scrollWidth - offsetWidth) {\n      className = 'mask-right';\n    }\n    if (scrollLeft > 0) {\n      className += ' mask-left';\n    }\n\n    setInputClassName(className);\n  }\n\n  function handleLinkUrlChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setLinkUrl(e.target.value);\n    updateInputStyles();\n  }\n\n  function getFormatButtonClassName(key: keyof ISelectedTextFormats) {\n    if (selectedTextFormats[key]) {\n      return 'active';\n    }\n\n    if (key === 'monospace' || key === 'strikethrough') {\n      if (Object.keys(selectedTextFormats).some(\n        (fKey) => fKey !== key && Boolean(selectedTextFormats[fKey as keyof ISelectedTextFormats]),\n      )) {\n        return 'disabled';\n      }\n    } else if (selectedTextFormats.monospace || selectedTextFormats.strikethrough) {\n      return 'disabled';\n    }\n\n    return undefined;\n  }\n\n  const handleSpoilerText = useCallback(() => {\n    if (selectedTextFormats.spoiler) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.dataset.entityType !== ApiMessageEntityTypes.Spoiler\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        spoiler: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand(\n      'insertHTML', false, `<span class=\"spoiler\" data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">${text}</span>`,\n    );\n    onClose();\n  }, [getSelectedElement, getSelectedText, onClose, selectedRange, selectedTextFormats.spoiler]);\n\n  const handleBoldText = useCallback(() => {\n    setSelectedTextFormats((selectedFormats) => {\n      // Somehow re-applying 'bold' command to already bold text doesn't work\n      document.execCommand(selectedFormats.bold ? 'removeFormat' : 'bold');\n      Object.keys(selectedFormats).forEach((key) => {\n        if ((key === 'italic' || key === 'underline') && Boolean(selectedFormats[key])) {\n          document.execCommand(key);\n        }\n      });\n\n      updateSelectedRange();\n      return {\n        ...selectedFormats,\n        bold: !selectedFormats.bold,\n      };\n    });\n  }, [updateSelectedRange]);\n\n  const handleItalicText = useCallback(() => {\n    document.execCommand('italic');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      italic: !selectedFormats.italic,\n    }));\n  }, [updateSelectedRange]);\n\n  const handleUnderlineText = useCallback(() => {\n    document.execCommand('underline');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      underline: !selectedFormats.underline,\n    }));\n  }, [updateSelectedRange]);\n\n  const handleStrikethroughText = useCallback(() => {\n    if (selectedTextFormats.strikethrough) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'DEL'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        strikethrough: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<del>${text}</del>`);\n    onClose();\n  }, [\n    getSelectedElement, getSelectedText, onClose, selectedRange, selectedTextFormats.strikethrough,\n  ]);\n\n  const handleMonospaceText = useCallback(() => {\n    if (selectedTextFormats.monospace) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'CODE'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        monospace: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<code class=\"text-entity-code\" dir=\"auto\">${text}</code>`);\n    onClose();\n  }, [\n    getSelectedElement, getSelectedText, onClose, selectedRange, selectedTextFormats.monospace,\n  ]);\n\n  const handleLinkUrlConfirm = useCallback(() => {\n    const formattedLinkUrl = (ensureProtocol(linkUrl) || '').split('%').map(encodeURI).join('%');\n\n    if (isEditingLink) {\n      const element = getSelectedElement();\n      if (!element || element.tagName !== 'A') {\n        return;\n      }\n\n      (element as HTMLAnchorElement).href = formattedLinkUrl;\n\n      onClose();\n\n      return;\n    }\n\n    const text = getSelectedText();\n    restoreSelection();\n    document.execCommand(\n      'insertHTML',\n      false,\n      `<a href=${formattedLinkUrl} class=\"text-entity-link\" dir=\"auto\">${text}</a>`,\n    );\n    onClose();\n  }, [getSelectedElement, getSelectedText, isEditingLink, linkUrl, onClose, restoreSelection]);\n\n  const handleKeyDown = useCallback((e: KeyboardEvent) => {\n    const HANDLERS_BY_KEY: Record<string, AnyToVoidFunction> = {\n      k: openLinkControl,\n      b: handleBoldText,\n      u: handleUnderlineText,\n      i: handleItalicText,\n      m: handleMonospaceText,\n      s: handleStrikethroughText,\n      p: handleSpoilerText,\n    };\n\n    const handler = HANDLERS_BY_KEY[getKeyFromEvent(e)];\n\n    if (\n      e.altKey\n      || !(e.ctrlKey || e.metaKey)\n      || !handler\n    ) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    handler();\n  }, [\n    openLinkControl, handleBoldText, handleUnderlineText, handleItalicText, handleMonospaceText,\n    handleStrikethroughText, handleSpoilerText,\n  ]);\n\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen, handleKeyDown]);\n\n  const lang = useLang();\n\n  function handleContainerKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    if (e.key === 'Enter' && isLinkControlOpen) {\n      handleLinkUrlConfirm();\n      e.preventDefault();\n    }\n  }\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'TextFormatter',\n    transitionClassNames,\n    isLinkControlOpen && 'link-control-shown',\n  );\n\n  const linkUrlConfirmClassName = buildClassName(\n    'TextFormatter-link-url-confirm',\n    Boolean(linkUrl.length) && 'shown',\n  );\n\n  const style = anchorPosition\n    ? `left: ${anchorPosition.x}px; top: ${anchorPosition.y}px;--text-formatter-left: ${anchorPosition.x}px;`\n    : '';\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      style={style}\n      onKeyDown={handleContainerKeyDown}\n    >\n      <div className=\"TextFormatter-buttons\">\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Spoiler text\"\n          className={getFormatButtonClassName('spoiler')}\n          onClick={handleSpoilerText}\n        >\n          <i className=\"icon-eye-closed\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Bold text\"\n          className={getFormatButtonClassName('bold')}\n          onClick={handleBoldText}\n        >\n          <i className=\"icon-bold\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Italic text\"\n          className={getFormatButtonClassName('italic')}\n          onClick={handleItalicText}\n        >\n          <i className=\"icon-italic\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Underlined text\"\n          className={getFormatButtonClassName('underline')}\n          onClick={handleUnderlineText}\n        >\n          <i className=\"icon-underlined\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Strikethrough text\"\n          className={getFormatButtonClassName('strikethrough')}\n          onClick={handleStrikethroughText}\n        >\n          <i className=\"icon-strikethrough\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Monospace text\"\n          className={getFormatButtonClassName('monospace')}\n          onClick={handleMonospaceText}\n        >\n          <i className=\"icon-monospace\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button color=\"translucent\" ariaLabel={lang('TextFormat.AddLinkTitle')} onClick={openLinkControl}>\n          <i className=\"icon-link\" />\n        </Button>\n      </div>\n\n      <div className=\"TextFormatter-link-control\">\n        <div className=\"TextFormatter-buttons\">\n          <Button color=\"translucent\" ariaLabel={lang('Cancel')} onClick={closeLinkControl}>\n            <i className=\"icon-arrow-left\" />\n          </Button>\n          <div className=\"TextFormatter-divider\" />\n\n          <div\n            className={buildClassName('TextFormatter-link-url-input-wrapper', inputClassName)}\n          >\n            <input\n              ref={linkUrlInputRef}\n              className=\"TextFormatter-link-url-input\"\n              type=\"text\"\n              value={linkUrl}\n              placeholder=\"Enter URL...\"\n              autoComplete=\"off\"\n              inputMode=\"url\"\n              dir=\"auto\"\n              onChange={handleLinkUrlChange}\n              onScroll={updateInputStyles}\n            />\n          </div>\n\n          <div className={linkUrlConfirmClassName}>\n            <div className=\"TextFormatter-divider\" />\n            <Button\n              color=\"translucent\"\n              ariaLabel={lang('Save')}\n              className=\"color-primary\"\n              onClick={handleLinkUrlConfirm}\n            >\n              <i className=\"icon-check\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TextFormatter);\n","export default function getKeyFromEvent(e: KeyboardEvent) {\n  const key = 'key' in e ? e.key : e.code;\n\n  return key.startsWith('Key') ? key.slice(3).toLowerCase() : key;\n}\n","export default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return files.map(fixMovMime);\n}\n\n// .mov MIME type not reported sometimes https://developer.mozilla.org/en-US/docs/Web/API/File/type#sect1\nfunction fixMovMime(file: File) {\n  const ext = file.name.split('.').pop()!;\n  if (!file.type && ext.toLowerCase() === 'mov') {\n    return new File([file], file.name, { type: 'video/quicktime' });\n  }\n  return file;\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import {\n  useCallback, useEffect, useState,\n} from '../../../../lib/teact/teact';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji';\nimport { uncompressEmoji } from '../../../../util/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique,\n} from '../../../../util/iteratees';\nimport memoized from '../../../../util/memoized';\nimport useFlag from '../../../../hooks/useFlag';\nimport renderText from '../../../common/helpers/renderText';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):[-+_:\\p{L}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):[-+_:\\d\\wа-яё]*$/gi;\n}\n\nexport default function useEmojiTooltip(\n  isAllowed: boolean,\n  htmlRef: { current: string },\n  recentEmojiIds: string[],\n  inputId = EDITABLE_INPUT_ID,\n  onUpdateHtml: (html: string) => void,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n  isDisabled = false,\n) {\n  const [isOpen, markIsOpen, unmarkIsOpen] = useFlag();\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [shouldForceInsertEmoji, setShouldForceInsertEmoji] = useState(false);\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render.\n  useEffect(() => {\n    if (isDisabled) return;\n    const exec = () => {\n      setById(emojiData.emojis);\n    };\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData()\n        .then(exec);\n    }\n  }, [isDisabled]);\n\n  const html = htmlRef.current;\n  useEffect(() => {\n    if (!isAllowed || !html || !byId || isDisabled) {\n      unmarkIsOpen();\n      return;\n    }\n\n    const code = html.includes(':') && getEmojiCode(html);\n    if (!code) {\n      setFilteredEmojis(MEMO_EMPTY_ARRAY);\n      unmarkIsOpen();\n      return;\n    }\n\n    const forceSend = code.length > 2 && code.endsWith(':');\n    const filter = code.substr(1, forceSend ? code.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    setShouldForceInsertEmoji(forceSend);\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if (filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter, EMOJIS_LIMIT);\n    }\n\n    if (matched.length) {\n      if (!forceSend) {\n        markIsOpen();\n      }\n      setFilteredEmojis(matched);\n    } else {\n      unmarkIsOpen();\n    }\n  }, [\n    byId, html, isAllowed, markIsOpen, recentEmojiIds, unmarkIsOpen, setShouldForceInsertEmoji,\n    isDisabled, baseEmojiKeywords, emojiKeywords,\n  ]);\n\n  const insertEmoji = useCallback((textEmoji: string, isForce?: boolean) => {\n    const currentHtml = htmlRef.current;\n    const atIndex = currentHtml.lastIndexOf(':', isForce ? currentHtml.lastIndexOf(':') - 1 : undefined);\n    if (atIndex !== -1) {\n      onUpdateHtml(`${currentHtml.substr(0, atIndex)}${renderText(textEmoji, ['emoji_html'])}`);\n      let messageInput: HTMLDivElement;\n      if (inputId === EDITABLE_INPUT_ID) {\n        messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!;\n      } else {\n        messageInput = document.getElementById(inputId) as HTMLDivElement;\n      }\n      requestAnimationFrame(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    unmarkIsOpen();\n  }, [htmlRef, inputId, onUpdateHtml, unmarkIsOpen]);\n\n  useEffect(() => {\n    if (isOpen && shouldForceInsertEmoji && filteredEmojis.length) {\n      insertEmoji(filteredEmojis[0].native, true);\n    }\n  }, [filteredEmojis, insertEmoji, isOpen, shouldForceInsertEmoji]);\n\n  return {\n    isEmojiTooltipOpen: isOpen,\n    closeEmojiTooltip: unmarkIsOpen,\n    filteredEmojis,\n    insertEmoji,\n  };\n}\n\nfunction getEmojiCode(html: string) {\n  const emojis = prepareForRegExp(html).match(RE_EMOJI_SEARCH);\n\n  return emojis ? emojis[0].trim() : undefined;\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json') as unknown as Promise<EmojiModule>;\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names,\n  } = library;\n\n  let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword!, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  return matched.slice(0, limit);\n}\n","import {\n  useCallback, useEffect, useState,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiUser } from '../../../../api/types';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\nimport { EDITABLE_INPUT_ID } from '../../../../config';\nimport { filterUsersByName, getUserFirstOrLastName } from '../../../../global/helpers';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport useFlag from '../../../../hooks/useFlag';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { throttle } from '../../../../util/schedulers';\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\nlet RE_USERNAME_SEARCH: RegExp;\n\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яё]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  canSuggestMembers: boolean | undefined,\n  htmlRef: { current: string },\n  onUpdateHtml: (html: string) => void,\n  inputId: string = EDITABLE_INPUT_ID,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const [isOpen, markIsOpen, unmarkIsOpen] = useFlag();\n  const [usersToMention, setUsersToMention] = useState<ApiUser[] | undefined>();\n\n  const updateFilteredUsers = useCallback((filter, withInlineBots: boolean) => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n\n    if (!(groupChatMembers || topInlineBotIds) || !usersById) {\n      setUsersToMention(undefined);\n\n      return;\n    }\n\n    runThrottled(() => {\n      const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n        if (member.userId !== currentUserId) {\n          acc.push(member.userId);\n        }\n\n        return acc;\n      }, []);\n\n      const filteredIds = filterUsersByName(unique([\n        ...((withInlineBots && topInlineBotIds) || []),\n        ...(memberIds || []),\n      ]), usersById, filter);\n\n      setUsersToMention(Object.values(pickTruthy(usersById, filteredIds)));\n    });\n  }, [currentUserId, groupChatMembers, topInlineBotIds]);\n\n  const html = htmlRef.current;\n  useEffect(() => {\n    if (!canSuggestMembers || !html.length) {\n      unmarkIsOpen();\n      return;\n    }\n\n    const usernameFilter = html.includes('@') && getUsernameFilter(html);\n\n    if (usernameFilter) {\n      const filter = usernameFilter ? usernameFilter.substr(1) : '';\n      updateFilteredUsers(filter, canSuggestInlineBots(html));\n    } else {\n      unmarkIsOpen();\n    }\n  }, [canSuggestMembers, updateFilteredUsers, markIsOpen, unmarkIsOpen, html]);\n\n  useEffect(() => {\n    if (usersToMention?.length) {\n      markIsOpen();\n    } else {\n      unmarkIsOpen();\n    }\n  }, [markIsOpen, unmarkIsOpen, usersToMention]);\n\n  const insertMention = useCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.username && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const insertedHtml = user.username\n      ? `@${user.username}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${getUserFirstOrLastName(user)}</a>`;\n\n    const currentHtml = htmlRef.current;\n    const atIndex = currentHtml.lastIndexOf('@');\n    if (atIndex !== -1) {\n      onUpdateHtml(`${currentHtml.substr(0, atIndex)}${insertedHtml}&nbsp;`);\n      const messageInput = document.getElementById(inputId)!;\n      requestAnimationFrame(() => {\n        focusEditableElement(messageInput, forceFocus);\n      });\n    }\n\n    unmarkIsOpen();\n  }, [htmlRef, inputId, onUpdateHtml, unmarkIsOpen]);\n\n  return {\n    isMentionTooltipOpen: isOpen,\n    closeMentionTooltip: unmarkIsOpen,\n    insertMention,\n    mentionFilteredUsers: usersToMention,\n  };\n}\n\nfunction getUsernameFilter(html: string) {\n  const username = prepareForRegExp(html).match(RE_USERNAME_SEARCH);\n\n  return username ? username[0].trim() : undefined;\n}\n\nfunction canSuggestInlineBots(html: string) {\n  return html.startsWith('@');\n}\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useOnChange from '../../../hooks/useOnChange';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useOnChange(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, memo, useState } from '../../lib/teact/teact';\n\nimport Checkbox from './Checkbox';\n\ntype IRadioOption = {\n  label: string;\n  subLabel?: string;\n  value: string;\n};\n\ntype OwnProps = {\n  id?: string;\n  options: IRadioOption[];\n  selected?: string[];\n  disabled?: boolean;\n  round?: boolean;\n  loadingOptions?: string[];\n  onChange: (value: string[]) => void;\n};\n\nconst CheckboxGroup: FC<OwnProps> = ({\n  id,\n  options,\n  selected = [],\n  disabled,\n  round,\n  loadingOptions,\n  onChange,\n}) => {\n  const [values, setValues] = useState<string[]>(selected || []);\n\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const { value, checked } = event.currentTarget;\n    let newValues: string[];\n    if (checked) {\n      newValues = [...values, value];\n    } else {\n      newValues = values.filter((v) => v !== value);\n    }\n\n    setValues(newValues);\n    onChange(newValues);\n  }, [onChange, values]);\n\n  return (\n    <div id={id} className=\"radio-group\">\n      {options.map((option) => (\n        <Checkbox\n          label={option.label}\n          subLabel={option.subLabel}\n          value={option.value}\n          checked={selected.indexOf(option.value) !== -1}\n          disabled={disabled}\n          round={round}\n          isLoading={loadingOptions ? loadingOptions.indexOf(option.value) !== -1 : undefined}\n          onChange={handleChange}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(CheckboxGroup);\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useRef } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport useLang from '../../hooks/useLang';\nimport useKeyboardListNavigation from '../../hooks/useKeyboardListNavigation';\n\nimport Modal from './Modal';\nimport Button from './Button';\n\ntype OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n  title?: string;\n  header?: TeactNode;\n  textParts?: TextPart[];\n  text?: string;\n  confirmLabel?: string;\n  confirmHandler: () => void;\n  confirmIsDestructive?: boolean;\n  isButtonsInOneRow?: boolean;\n  children?: React.ReactNode;\n};\n\nconst ConfirmDialog: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onCloseAnimationEnd,\n  title,\n  header,\n  text,\n  textParts,\n  confirmLabel = 'Confirm',\n  confirmHandler,\n  confirmIsDestructive,\n  isButtonsInOneRow,\n  children,\n}) => {\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const handleSelectWithEnter = useCallback((index: number) => {\n    if (index === -1) confirmHandler();\n  }, [confirmHandler]);\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, handleSelectWithEnter, '.Button');\n\n  return (\n    <Modal\n      className=\"confirm\"\n      title={title || lang('Telegram')}\n      header={header}\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {text && text.split('\\\\n').map((textPart) => (\n        <p>{textPart}</p>\n      ))}\n      {textParts || children}\n      <div className={isButtonsInOneRow ? 'dialog-buttons mt-2' : ''} ref={containerRef} onKeyDown={handleKeyDown}>\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={confirmHandler}\n          color={confirmIsDestructive ? 'danger' : 'primary'}\n        >\n          {confirmLabel}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ConfirmDialog);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport type { OwnProps as ButtonProps } from './Button';\nimport Button from './Button';\n\nimport './FloatingActionButton.scss';\n\ntype OwnProps = {\n  isShown: boolean;\n  className?: string;\n  color?: ButtonProps['color'];\n  ariaLabel?: ButtonProps['ariaLabel'];\n  disabled?: boolean;\n  onClick: () => void;\n  children: React.ReactNode;\n};\n\nconst FloatingActionButton: FC<OwnProps> = ({\n  isShown,\n  className,\n  color = 'primary',\n  ariaLabel,\n  disabled,\n  onClick,\n  children,\n}) => {\n  const buttonClassName = buildClassName(\n    'FloatingActionButton',\n    isShown && 'revealed',\n    className,\n  );\n\n  return (\n    <Button\n      className={buttonClassName}\n      color={color}\n      round\n      disabled={disabled}\n      onClick={isShown && !disabled ? onClick : undefined}\n      ariaLabel={ariaLabel}\n      tabIndex={-1}\n    >\n      {children}\n    </Button>\n  );\n};\n\nexport default FloatingActionButton;\n","import type { RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { useRef, useCallback } from '../../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../../util/environment';\nimport { fastRaf } from '../../util/schedulers';\nimport buildClassName from '../../util/buildClassName';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useContextMenuPosition from '../../hooks/useContextMenuPosition';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport RippleEffect from './RippleEffect';\nimport Menu from './Menu';\nimport MenuItem from './MenuItem';\nimport Button from './Button';\n\nimport './ListItem.scss';\n\ninterface MenuItemContextAction {\n  title: string;\n  icon: string;\n  destructive?: boolean;\n  handler?: () => void;\n}\n\ninterface OwnProps {\n  ref?: RefObject<HTMLDivElement>;\n  buttonRef?: RefObject<HTMLDivElement>;\n  icon?: string;\n  secondaryIcon?: string;\n  className?: string;\n  style?: string;\n  children: React.ReactNode;\n  disabled?: boolean;\n  ripple?: boolean;\n  narrow?: boolean;\n  inactive?: boolean;\n  focus?: boolean;\n  destructive?: boolean;\n  multiline?: boolean;\n  isStatic?: boolean;\n  contextActions?: MenuItemContextAction[];\n  onMouseDown?: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onClick?: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onSecondaryIconClick?: (e: React.MouseEvent<HTMLButtonElement>) => void;\n}\n\nconst ListItem: FC<OwnProps> = ({\n  ref,\n  buttonRef,\n  icon,\n  secondaryIcon,\n  className,\n  style,\n  children,\n  disabled,\n  ripple,\n  narrow,\n  inactive,\n  focus,\n  destructive,\n  multiline,\n  isStatic,\n  contextActions,\n  onMouseDown,\n  onClick,\n  onSecondaryIconClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let containerRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    containerRef = ref;\n  }\n  const [isTouched, markIsTouched, unmarkIsTouched] = useFlag();\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(containerRef, !contextActions);\n\n  const getTriggerElement = useCallback(() => containerRef.current, []);\n\n  const getRootElement = useCallback(\n    () => containerRef.current!.closest('.custom-scroll'),\n    [],\n  );\n\n  const getMenuElement = useCallback(\n    () => containerRef.current!.querySelector('.ListItem-context-menu .bubble'),\n    [],\n  );\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useContextMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n  );\n\n  const handleClick = useCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (disabled || !onClick) {\n      return;\n    }\n    onClick(e);\n\n    if (IS_TOUCH_ENV && !ripple) {\n      markIsTouched();\n      fastRaf(unmarkIsTouched);\n    }\n  }, [disabled, markIsTouched, onClick, ripple, unmarkIsTouched]);\n\n  const handleSecondaryIconClick = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    if (disabled || e.button !== 0 || (!onSecondaryIconClick && !contextActions)) return;\n    e.stopPropagation();\n    if (onSecondaryIconClick) {\n      onSecondaryIconClick(e);\n    } else {\n      handleContextMenu(e);\n    }\n  };\n\n  const handleMouseDown = useCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (inactive || IS_TOUCH_ENV) {\n      return;\n    }\n    if (contextActions && (e.button === 2 || !onClick)) {\n      handleBeforeContextMenu(e);\n    }\n    if (e.button === 0) {\n      if (!onClick) {\n        handleContextMenu(e);\n      } else {\n        handleClick(e);\n      }\n    }\n  }, [inactive, contextActions, onClick, handleBeforeContextMenu, handleContextMenu, handleClick]);\n\n  const lang = useLang();\n\n  const fullClassName = buildClassName(\n    'ListItem',\n    className,\n    !isStatic && 'no-selection',\n    ripple && 'has-ripple',\n    narrow && 'narrow',\n    disabled && 'disabled',\n    inactive && 'inactive',\n    contextMenuPosition && 'has-menu-open',\n    focus && 'focus',\n    destructive && 'destructive',\n    multiline && 'multiline',\n    isStatic && 'is-static',\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={style}\n      onMouseDown={onMouseDown}\n    >\n      <div\n        className={buildClassName('ListItem-button', isTouched && 'active')}\n        role={!isStatic ? 'button' : undefined}\n        ref={buttonRef}\n        tabIndex={!isStatic ? 0 : undefined}\n        onClick={(!inactive && IS_TOUCH_ENV) ? handleClick : undefined}\n        onMouseDown={handleMouseDown}\n        onContextMenu={(!inactive && contextActions) ? handleContextMenu : undefined}\n      >\n        {icon && (\n          <i className={`icon-${icon}`} />\n        )}\n        {multiline && (<div className=\"multiline-item\">{children}</div>)}\n        {!multiline && children}\n        {!disabled && !inactive && ripple && (\n          <RippleEffect />\n        )}\n        {secondaryIcon && (\n          <Button\n            className=\"secondary-icon\"\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            onClick={IS_TOUCH_ENV ? handleSecondaryIconClick : undefined}\n            onMouseDown={!IS_TOUCH_ENV ? handleSecondaryIconClick : undefined}\n          >\n            <i className={`icon-${secondaryIcon}`} />\n          </Button>\n        )}\n      </div>\n      {contextActions && contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"ListItem-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {contextActions.map((action) => (\n            <MenuItem\n              key={action.title}\n              icon={action.icon}\n              destructive={action.destructive}\n              disabled={!action.handler}\n              onClick={action.handler}\n            >\n              {action.title}\n            </MenuItem>\n          ))}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default ListItem;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport buildClassName from '../../util/buildClassName';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\n\nimport Portal from './Portal';\n\nimport './Notification.scss';\n\ntype OwnProps = {\n  containerId?: string;\n  message: TextPart[];\n  duration?: number;\n  onDismiss: () => void;\n};\n\nconst DEFAULT_DURATION = 3000;\nconst ANIMATION_DURATION = 150;\n\nconst Notification: FC<OwnProps> = ({\n  message, duration = DEFAULT_DURATION, containerId, onDismiss,\n}) => {\n  const [isOpen, setIsOpen] = useState(true);\n  // eslint-disable-next-line no-null/no-null\n  const timerRef = useRef<number | undefined>(null);\n\n  const { transitionClassNames } = useShowTransition(isOpen);\n\n  const closeAndDismiss = useCallback(() => {\n    setIsOpen(false);\n    setTimeout(onDismiss, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [onDismiss]);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(closeAndDismiss) : undefined), [isOpen, closeAndDismiss]);\n\n  useEffect(() => {\n    timerRef.current = window.setTimeout(closeAndDismiss, duration);\n\n    return () => {\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n        timerRef.current = undefined;\n      }\n    };\n  }, [duration, closeAndDismiss]);\n\n  const handleMouseEnter = useCallback(() => {\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n      timerRef.current = undefined;\n    }\n  }, []);\n\n  const handleMouseLeave = useCallback(() => {\n    timerRef.current = window.setTimeout(closeAndDismiss, duration);\n  }, [duration, closeAndDismiss]);\n\n  return (\n    <Portal className=\"Notification-container\" containerId={containerId}>\n      <div\n        className={buildClassName('Notification', transitionClassNames)}\n        onClick={closeAndDismiss}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n      >\n        <div className=\"content\">\n          {message}\n        </div>\n      </div>\n    </Portal>\n  );\n};\n\nexport default Notification;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useEffect, useRef, memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport './ProgressSpinner.scss';\n\nconst RADIUSES = {\n  s: 22, m: 25, l: 28, xl: 20,\n};\nconst STROKE_WIDTH = 2;\nconst MIN_PROGRESS = 0.05;\nconst MAX_PROGRESS = 1;\n\nconst ProgressSpinner: FC<{\n  progress?: number;\n  size?: 's' | 'm' | 'l' | 'xl';\n  square?: boolean;\n  transparent?: boolean;\n  noCross?: boolean;\n  onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n}> = ({\n  progress = 0,\n  size = 'l',\n  square,\n  transparent,\n  noCross,\n  onClick,\n}) => {\n  const radius = RADIUSES[size];\n  const circleRadius = radius - STROKE_WIDTH * 2;\n  const borderRadius = radius - 1;\n  const circumference = circleRadius * 2 * Math.PI;\n  // eslint-disable-next-line no-null/no-null\n  const container = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!container.current) {\n      return;\n    }\n\n    const svg = container.current.firstElementChild;\n    const strokeDashOffset = circumference - Math.min(Math.max(MIN_PROGRESS, progress), MAX_PROGRESS) * circumference;\n\n    if (!svg) {\n      container.current.innerHTML = `<svg\n        viewBox=\"0 0 ${borderRadius * 2} ${borderRadius * 2}\"\n        height=\"${borderRadius * 2}\"\n        width=\"${borderRadius * 2}\"\n      >\n        <circle\n          stroke=\"white\"\n          fill=\"transparent\"\n          stroke-width=${STROKE_WIDTH}\n          stroke-dasharray=\"${circumference} ${circumference}\"}\n          stroke-dashoffset=\"${strokeDashOffset}\"\n          stroke-linecap=\"round\"\n          r=${circleRadius}\n          cx=${borderRadius}\n          cy=${borderRadius}\n        />\n      </svg>`;\n    } else {\n      (svg.firstElementChild as SVGElement).setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n    }\n  }, [container, circumference, borderRadius, circleRadius, progress]);\n\n  const className = buildClassName(\n    `ProgressSpinner size-${size}`,\n    transparent && 'transparent',\n    square && 'square',\n    noCross && 'no-cross',\n  );\n\n  return (\n    <div\n      ref={container}\n      className={className}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(ProgressSpinner);\n","import type { ChangeEvent } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport Spinner from './Spinner';\n\nimport './Radio.scss';\n\ntype OwnProps = {\n  id?: string;\n  name: string;\n  label: TeactNode;\n  subLabel?: string;\n  value: string;\n  checked: boolean;\n  disabled?: boolean;\n  hidden?: boolean;\n  isLoading?: boolean;\n  onChange: (e: ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst Radio: FC<OwnProps> = ({\n  id,\n  label,\n  subLabel,\n  value,\n  name,\n  checked,\n  disabled,\n  hidden,\n  isLoading,\n  onChange,\n}) => {\n  const lang = useLang();\n  const className = buildClassName(\n    'Radio',\n    disabled && 'disabled',\n    hidden && 'hidden-widget',\n    isLoading && 'loading',\n  );\n\n  return (\n    <label className={className} dir={lang.isRtl ? 'rtl' : undefined}>\n      <input\n        type=\"radio\"\n        name={name}\n        value={value}\n        id={id}\n        checked={checked}\n        onChange={onChange}\n        disabled={disabled || hidden}\n      />\n      <div className=\"Radio-main\">\n        <span className=\"label\" dir={lang.isRtl ? 'auto' : undefined}>{label}</span>\n        {subLabel && <span className=\"subLabel\" dir={lang.isRtl ? 'auto' : undefined}>{subLabel}</span>}\n      </div>\n      {isLoading && <Spinner />}\n    </label>\n  );\n};\n\nexport default memo(Radio);\n","import type { ChangeEvent } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { useCallback, memo } from '../../lib/teact/teact';\n\nimport Radio from './Radio';\n\nexport type IRadioOption = {\n  label: TeactNode;\n  subLabel?: string;\n  value: string;\n  hidden?: boolean;\n};\n\ntype OwnProps = {\n  id?: string;\n  name: string;\n  options: IRadioOption[];\n  selected?: string;\n  disabled?: boolean;\n  loadingOption?: string;\n  onChange: (value: string) => void;\n};\n\nconst RadioGroup: FC<OwnProps> = ({\n  id,\n  name,\n  options,\n  selected,\n  disabled,\n  loadingOption,\n  onChange,\n}) => {\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.currentTarget;\n    onChange(value);\n  }, [onChange]);\n\n  return (\n    <div id={id} className=\"radio-group\">\n      {options.map((option) => (\n        <Radio\n          name={name}\n          label={option.label}\n          subLabel={option.subLabel}\n          value={option.value}\n          checked={option.value === selected}\n          hidden={option.hidden}\n          disabled={disabled}\n          isLoading={loadingOption ? loadingOption === option.value : undefined}\n          onChange={handleChange}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(RadioGroup);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, useMemo, memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport './RangeSlider.scss';\n\ntype OwnProps = {\n  options?: string[];\n  min?: number;\n  max?: number;\n  step?: number;\n  label?: string;\n  value: number;\n  disabled?: boolean;\n  bold?: boolean;\n  className?: string;\n  renderValue?: (value: number) => string;\n  onChange: (value: number) => void;\n};\n\nconst RangeSlider: FC<OwnProps> = ({\n  options,\n  min = 0,\n  max = options ? options.length - 1 : 100,\n  step = 1,\n  label,\n  value,\n  disabled,\n  bold,\n  className,\n  renderValue,\n  onChange,\n}) => {\n  const lang = useLang();\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    onChange(Number(event.currentTarget.value));\n  }, [onChange]);\n\n  const mainClassName = buildClassName(\n    className,\n    'RangeSlider',\n    disabled && 'disabled',\n    bold && 'bold',\n  );\n\n  const trackWidth = useMemo(() => {\n    if (options) {\n      return (value / (options.length - 1)) * 100;\n    } else {\n      const possibleValuesLength = (max - min) / step;\n      return ((value - min) / possibleValuesLength) * 100;\n    }\n  }, [options, value, max, min, step]);\n\n  return (\n    <div className={mainClassName}>\n      {label && (\n        <div className=\"slider-top-row\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <span className=\"label\" dir=\"auto\">{label}</span>\n          {!options && (\n            <span className=\"value\" dir=\"auto\">{renderValue ? renderValue(value) : value}</span>\n          )}\n        </div>\n      )}\n      <div className=\"slider-main\">\n        <div\n          className=\"slider-fill-track\"\n          style={`width: ${trackWidth}%`}\n        />\n        <input\n          min={min}\n          max={max}\n          value={value}\n          step={step}\n          type=\"range\"\n          className=\"RangeSlider__input\"\n          onChange={handleChange}\n        />\n        {options && (\n          <div className=\"slider-options\">\n            {options.map((option, index) => (\n              <div\n                className={buildClassName('slider-option no-selection', index === value && 'active')}\n                onClick={() => onChange(index)}\n              >\n                {option}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(RangeSlider);\n","import type { RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  useRef, useEffect, memo, useCallback,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useInputFocusOnOpen from '../../hooks/useInputFocusOnOpen';\n\nimport Loading from './Loading';\nimport Button from './Button';\nimport ShowTransition from './ShowTransition';\n\nimport './SearchInput.scss';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLInputElement>;\n  children?: React.ReactNode;\n  parentContainerClassName?: string;\n  className?: string;\n  inputId?: string;\n  value?: string;\n  focused?: boolean;\n  isLoading?: boolean;\n  spinnerColor?: 'yellow';\n  spinnerBackgroundColor?: 'light';\n  placeholder?: string;\n  disabled?: boolean;\n  autoComplete?: string;\n  canClose?: boolean;\n  autoFocusSearch?: boolean;\n  onChange: (value: string) => void;\n  onReset?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  onSpinnerClick?: NoneToVoidFunction;\n};\n\nconst SearchInput: FC<OwnProps> = ({\n  ref,\n  children,\n  parentContainerClassName,\n  value,\n  inputId,\n  className,\n  focused,\n  isLoading,\n  spinnerColor,\n  spinnerBackgroundColor,\n  placeholder,\n  disabled,\n  autoComplete,\n  canClose,\n  autoFocusSearch,\n  onChange,\n  onReset,\n  onFocus,\n  onBlur,\n  onSpinnerClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLInputElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  const [isInputFocused, markInputFocused, unmarkInputFocused] = useFlag(focused);\n\n  useInputFocusOnOpen(inputRef, autoFocusSearch, unmarkInputFocused);\n\n  useEffect(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (focused) {\n      inputRef.current.focus();\n    } else {\n      inputRef.current.blur();\n    }\n  }, [focused, placeholder]); // Trick for setting focus when selecting a contact to search for\n\n  const lang = useLang();\n\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const { currentTarget } = event;\n    onChange(currentTarget.value);\n  }\n\n  function handleFocus() {\n    markInputFocused();\n    if (onFocus) {\n      onFocus();\n    }\n  }\n\n  function handleBlur() {\n    unmarkInputFocused();\n    if (onBlur) {\n      onBlur();\n    }\n  }\n\n  const handleKeyDown = useCallback((e: React.KeyboardEvent) => {\n    if (e.key === 'ArrowDown' || e.key === 'Enter') {\n      const element = document.querySelector(`.${parentContainerClassName} .ListItem-button`) as HTMLElement;\n      if (element) {\n        element.focus();\n      }\n    }\n  }, [parentContainerClassName]);\n\n  return (\n    <div\n      className={buildClassName('SearchInput', className, isInputFocused && 'has-focus')}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {children}\n      <input\n        ref={inputRef}\n        id={inputId}\n        type=\"text\"\n        dir=\"auto\"\n        placeholder={placeholder || lang('Search')}\n        className=\"form-control\"\n        value={value}\n        disabled={disabled}\n        autoComplete={autoComplete}\n        onChange={handleChange}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        onKeyDown={handleKeyDown}\n      />\n      <i className=\"icon-search\" />\n      <ShowTransition isOpen={Boolean(isLoading)} className=\"slow\">\n        <Loading color={spinnerColor} backgroundColor={spinnerBackgroundColor} onClick={onSpinnerClick} />\n      </ShowTransition>\n      {!isLoading && (value || canClose) && onReset && (\n        <Button\n          round\n          size=\"tiny\"\n          color=\"translucent\"\n          onClick={onReset}\n        >\n          <span className=\"icon-close\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SearchInput);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useRef } from '../../lib/teact/teact';\n\nimport useShowTransition from '../../hooks/useShowTransition';\nimport usePrevious from '../../hooks/usePrevious';\nimport buildClassName from '../../util/buildClassName';\n\ntype OwnProps = {\n  isOpen: boolean;\n  isCustom?: boolean;\n  id?: string;\n  className?: string;\n  onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  children: React.ReactNode;\n};\n\nconst ShowTransition: FC<OwnProps> = ({\n  isOpen, isCustom, id, className, onClick, children,\n}) => {\n  const { shouldRender, transitionClassNames } = useShowTransition(\n    isOpen, undefined, undefined, isCustom ? false : undefined,\n  );\n  const prevIsOpen = usePrevious(isOpen);\n  const prevChildren = usePrevious(children);\n  const fromChildrenRef = useRef<React.ReactNode>();\n\n  if (prevIsOpen && !isOpen) {\n    fromChildrenRef.current = prevChildren;\n  }\n\n  return (\n    shouldRender && (\n      <div id={id} className={buildClassName(className, transitionClassNames)} onClick={onClick}>\n        {isOpen ? children : fromChildrenRef.current!}\n      </div>\n    )\n  );\n};\n\nexport default ShowTransition;\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport './Switcher.scss';\n\ntype OwnProps = {\n  id?: string;\n  name?: string;\n  value?: string;\n  label: string;\n  checked?: boolean;\n  disabled?: boolean;\n  inactive?: boolean;\n  noAnimation?: boolean;\n  onChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  onCheck?: (isChecked: boolean) => void;\n};\n\nconst Switcher: FC<OwnProps> = ({\n  id,\n  name,\n  value,\n  label,\n  checked = false,\n  disabled,\n  inactive,\n  noAnimation,\n  onChange,\n  onCheck,\n}) => {\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (onChange) {\n      onChange(e);\n    }\n\n    if (onCheck) {\n      onCheck(e.currentTarget.checked);\n    }\n  }, [onChange, onCheck]);\n\n  const className = buildClassName(\n    'Switcher',\n    disabled && 'disabled',\n    inactive && 'inactive',\n    noAnimation && 'no-animation',\n  );\n\n  return (\n    <label className={className} title={label}>\n      <input\n        type=\"checkbox\"\n        id={id}\n        name={name}\n        value={value}\n        checked={checked}\n        disabled={disabled}\n        onChange={handleChange}\n      />\n      <span className=\"widget\" />\n    </label>\n  );\n};\n\nexport default memo(Switcher);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useRef, memo, useEffect } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport forceReflow from '../../util/forceReflow';\nimport renderText from '../common/helpers/renderText';\n\nimport './Tab.scss';\n\ntype OwnProps = {\n  className?: string;\n  title: string;\n  isActive?: boolean;\n  badgeCount?: number;\n  isBadgeActive?: boolean;\n  previousActiveTab?: number;\n  onClick: (arg: number) => void;\n  clickArg: number;\n};\n\nconst classNames = {\n  active: 'Tab--active',\n  badgeActive: 'Tab__badge--active',\n};\n\nconst Tab: FC<OwnProps> = ({\n  className,\n  title,\n  isActive,\n  badgeCount,\n  isBadgeActive,\n  previousActiveTab,\n  onClick,\n  clickArg,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const tabRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    // Set initial active state\n    if (isActive && previousActiveTab === undefined && tabRef.current) {\n      tabRef.current.classList.add(classNames.active);\n    }\n\n    if (!isActive || previousActiveTab === undefined) {\n      return;\n    }\n\n    const tabEl = tabRef.current!;\n    const prevTabEl = tabEl.parentElement!.children[previousActiveTab];\n    if (!prevTabEl) {\n      return;\n    }\n\n    const platformEl = tabEl.querySelector('i')!;\n    const prevPlatformEl = prevTabEl.querySelector('i')!;\n\n    // We move and resize the platform, so it repeats the position and size of the previous one\n    const shiftLeft = prevPlatformEl.parentElement!.offsetLeft - platformEl.parentElement!.offsetLeft;\n    const scaleFactor = prevPlatformEl.clientWidth / platformEl.clientWidth;\n\n    prevPlatformEl.classList.remove('animate');\n    platformEl.classList.remove('animate');\n    platformEl.style.transform = `translate3d(${shiftLeft}px, 0, 0) scale3d(${scaleFactor}, 1, 1)`;\n    forceReflow(platformEl);\n    platformEl.classList.add('animate');\n    platformEl.style.transform = 'none';\n\n    prevTabEl.classList.remove(classNames.active);\n    tabEl.classList.add(classNames.active);\n  }, [isActive, previousActiveTab]);\n\n  return (\n    <div\n      className={buildClassName('Tab', className)}\n      onClick={() => onClick(clickArg)}\n      ref={tabRef}\n    >\n      <span>\n        {renderText(title)}\n        {Boolean(badgeCount) && (\n          <span className={buildClassName('badge', isBadgeActive && classNames.badgeActive)}>{badgeCount}</span>\n        )}\n        <i />\n      </span>\n    </div>\n  );\n};\n\nexport default memo(Tab);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef, useEffect } from '../../lib/teact/teact';\n\nimport { IS_ANDROID, IS_IOS } from '../../util/environment';\nimport fastSmoothScrollHorizontal from '../../util/fastSmoothScrollHorizontal';\nimport usePrevious from '../../hooks/usePrevious';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLang from '../../hooks/useLang';\n\nimport Tab from './Tab';\n\nimport './TabList.scss';\n\nexport type TabWithProperties = {\n  title: string;\n  badgeCount?: number;\n  isBadgeActive?: boolean;\n};\n\ntype OwnProps = {\n  tabs: readonly TabWithProperties[];\n  activeTab: number;\n  big?: boolean;\n  onSwitchTab: (index: number) => void;\n};\n\nconst TAB_SCROLL_THRESHOLD_PX = 16;\n// Should match duration from `--slide-transition` CSS variable\nconst SCROLL_DURATION = IS_IOS ? 450 : IS_ANDROID ? 400 : 300;\n\nconst TabList: FC<OwnProps> = ({\n  tabs, activeTab, big, onSwitchTab,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const previousActiveTab = usePrevious(activeTab);\n\n  useHorizontalScroll(containerRef.current);\n\n  // Scroll container to place active tab in the center\n  useEffect(() => {\n    const container = containerRef.current!;\n    const { scrollWidth, offsetWidth, scrollLeft } = container;\n    if (scrollWidth <= offsetWidth) {\n      return;\n    }\n\n    const activeTabElement = container.childNodes[activeTab] as HTMLElement | null;\n    if (!activeTabElement) {\n      return;\n    }\n\n    const { offsetLeft: activeTabOffsetLeft, offsetWidth: activeTabOffsetWidth } = activeTabElement;\n    const newLeft = activeTabOffsetLeft - (offsetWidth / 2) + (activeTabOffsetWidth / 2);\n\n    // Prevent scrolling by only a couple of pixels, which doesn't look smooth\n    if (Math.abs(newLeft - scrollLeft) < TAB_SCROLL_THRESHOLD_PX) {\n      return;\n    }\n\n    fastSmoothScrollHorizontal(container, newLeft, SCROLL_DURATION);\n  }, [activeTab]);\n\n  const lang = useLang();\n\n  return (\n    <div\n      className={`TabList no-selection no-scrollbar ${big ? 'big' : ''}`}\n      ref={containerRef}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {tabs.map((tab, i) => (\n        <Tab\n          key={tab.title}\n          title={lang(tab.title)}\n          isActive={i === activeTab}\n          badgeCount={tab.badgeCount}\n          isBadgeActive={tab.isBadgeActive}\n          previousActiveTab={previousActiveTab}\n          onClick={onSwitchTab}\n          clickArg={i}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(TabList);\n","import type { StateReducer, Dispatch } from '../useReducer';\nimport useReducer from '../useReducer';\nimport type { ApiChatFolder } from '../../api/types';\nimport { pick, omit } from '../../util/iteratees';\n\nexport type FolderChatType = {\n  icon: string;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nexport const INCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'user', title: 'FilterContacts', key: 'contacts' },\n  { icon: 'non-contacts', title: 'FilterNonContacts', key: 'nonContacts' },\n  { icon: 'group', title: 'FilterGroups', key: 'groups' },\n  { icon: 'channel', title: 'FilterChannels', key: 'channels' },\n  { icon: 'bots', title: 'FilterBots', key: 'bots' },\n];\n\nexport const EXCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'mute', title: 'FilterMuted', key: 'excludeMuted' },\n  { icon: 'archive', title: 'FilterArchived', key: 'excludeArchived' },\n  { icon: 'readchats', title: 'FilterRead', key: 'excludeRead' },\n];\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  return {\n    selectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters'\n);\nexport type FolderEditDispatch = Dispatch<FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: '',\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : getSuggestedFolderName(state.includeFilters),\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        error: action.payload,\n      };\n    }\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import {\n  useCallback, useEffect, useRef, useState,\n} from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport { register } from '../util/audioPlayer';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\n\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useOnChange from './useOnChange';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  }, [onTrackChange]);\n\n  useOnChange(() => {\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n\n          registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          setPlaybackState('playing');\n          setVolume(getGlobal().audioPlayer.volume);\n          toggleMuted(Boolean(getGlobal().audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(getGlobal().audioPlayer.playbackRate);\n          }\n\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      isPlayingSync = true;\n    }\n\n    if (onInit) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current!;\n  const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n\n  // RAF progress\n  useEffect(() => {\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy.src && proxy.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy.src, proxy.paused]);\n\n  const playIfPresent = useCallback(() => {\n    if (src) {\n      play(src);\n    }\n  }, [src, play]);\n\n  const playPause = useCallback(() => {\n    if (isPlaying) {\n      pause();\n    } else {\n      playIfPresent();\n    }\n  }, [pause, playIfPresent, isPlaying]);\n\n  const setTime = useCallback((time: number) => {\n    setCurrentTime(time);\n    if (duration) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, proxy, setCurrentTime]);\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import type React from '../lib/teact/teact';\nimport { useCallback, useMemo, useState } from '../lib/teact/teact';\nimport { debounce } from '../util/schedulers';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\n\ntype BufferingEvent = (e: Event | React.SyntheticEvent<HTMLMediaElement>) => void;\n\nconst MIN_READY_STATE = 3;\n// Avoid flickering when re-mounting previously buffered video\nconst DEBOUNCE = 200;\n\n/**\n * Time range relative to the duration [0, 1]\n */\nexport type BufferedRange = { start: number; end: number };\n\nconst useBuffering = (noInitiallyBuffered = false) => {\n  const [isBuffered, setIsBuffered] = useState(!noInitiallyBuffered);\n  const [bufferedProgress, setBufferedProgress] = useState(0);\n  const [bufferedRanges, setBufferedRanges] = useState<BufferedRange[]>([]);\n\n  const setIsBufferedDebounced = useMemo(() => {\n    return debounce(setIsBuffered, DEBOUNCE, false, true);\n  }, []);\n\n  const handleBuffering = useCallback<BufferingEvent>((e) => {\n    const media = e.currentTarget as HTMLMediaElement;\n\n    if (!isSafariPatchInProgress(media)) {\n      if (media.buffered.length) {\n        const ranges = getTimeRanges(media.buffered, media.duration);\n        setBufferedRanges(ranges);\n        const bufferedLength = ranges.reduce((acc, { start, end }) => acc + end - start, 0);\n        setBufferedProgress(bufferedLength / media.duration);\n      }\n\n      setIsBufferedDebounced(media.readyState >= MIN_READY_STATE || media.currentTime > 0);\n    }\n  }, [setIsBufferedDebounced]);\n\n  const bufferingHandlers = {\n    onLoadedData: handleBuffering,\n    onPlaying: handleBuffering,\n    onLoadStart: handleBuffering, // Needed for Safari to start\n    onPause: handleBuffering, // Needed for Chrome when seeking\n    onTimeUpdate: handleBuffering, // Needed for audio buffering progress\n    onProgress: handleBuffering, // Needed for video buffering progress\n  };\n\n  return {\n    isBuffered,\n    bufferedProgress,\n    bufferedRanges,\n    bufferingHandlers,\n    checkBuffering(element: HTMLMediaElement) {\n      setIsBufferedDebounced(element.readyState >= MIN_READY_STATE);\n    },\n  };\n};\n\nfunction getTimeRanges(ranges: TimeRanges, duration: number) {\n  const result: BufferedRange[] = [];\n  for (let i = 0; i < ranges.length; i++) {\n    result.push({\n      start: ranges.start(i) / duration,\n      end: ranges.end(i) / duration,\n    });\n  }\n  return result;\n}\n\nexport default useBuffering;\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport useForceUpdate from './useForceUpdate';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/environment';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(dataUri?: string, isDisabled = false, withRaf?: boolean) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled) {\n      return;\n    }\n\n    const img = new Image();\n\n    const processBlur = () => {\n      canvas.width = img.width;\n      canvas.height = img.height;\n\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      if (IS_CANVAS_FILTER_SUPPORTED) {\n        ctx.filter = `blur(${RADIUS}px)`;\n      }\n\n      ctx.drawImage(img, -RADIUS * 2, -RADIUS * 2, canvas.width + RADIUS * 4, canvas.height + RADIUS * 4);\n\n      if (!IS_CANVAS_FILTER_SUPPORTED) {\n        fastBlur(ctx, 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n      }\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestAnimationFrame(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [canvasRef, dataUri, forceUpdate, isDisabled, withRaf]);\n\n  return canvasRef;\n}\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiChat, ApiUser } from '../api/types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  isChatArchived, getCanDeleteChat, isUserId, isChatChannel, isChatGroup,\n} from '../global/helpers';\nimport { compact } from '../util/iteratees';\nimport useLang from './useLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  handleDelete,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  handleDelete: () => void;\n  handleChatFolderChange: () => void;\n  handleReport?: () => void;\n}, isInSearch = false) => {\n  const lang = useLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  return useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      toggleChatUnread,\n    } = getActions();\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatList.Filter.AddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleChatPinned({ id: chat.id, folderId }),\n      }\n      : { title: lang('PinToTop'), icon: 'pin', handler: () => toggleChatPinned({ id: chat.id, folderId }) };\n\n    if (isInSearch) {\n      return compact([actionPin, actionAddToFolder]);\n    }\n\n    const actionUnreadMark = chat.unreadCount || chat.hasUnreadMark\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : { title: lang('MarkAsUnread'), icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) };\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: lang('ChatList.Mute'),\n        icon: 'mute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: true }),\n      };\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && (isChatChannel(chat) || isChatGroup(chat) || (user && !user.isSelf));\n    const actionReport = canReport\n      ? { title: lang('ReportPeer.Report'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const actionDelete = {\n      title: isUserId(chat.id)\n        ? lang('Delete')\n        : lang(getCanDeleteChat(chat)\n          ? 'DeleteChat'\n          : (isChatChannel(chat) ? 'LeaveChannel' : 'Group.LeaveGroup')),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionAddToFolder,\n      actionUnreadMark,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]);\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted,\n    handleDelete, handleReport, folderId, isSelf, isServiceNotifications,\n  ]);\n};\n\nexport default useChatContextActions;\n","import type { RefObject } from 'react';\nimport { useState, useEffect, useCallback } from '../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../types';\nimport {\n  IS_TOUCH_ENV, IS_PWA, IS_IOS,\n} from '../util/environment';\n\nconst LONG_TAP_DURATION_MS = 200;\n\nfunction stopEvent(e: Event) {\n  e.stopImmediatePropagation();\n  e.preventDefault();\n  e.stopPropagation();\n}\n\nconst useContextMenuHandlers = (\n  elementRef: RefObject<HTMLElement>,\n  isMenuDisabled?: boolean,\n  shouldDisableOnLink?: boolean,\n  shouldDisableOnLongTap?: boolean,\n) => {\n  const [isContextMenuOpen, setIsContextMenuOpen] = useState(false);\n  const [contextMenuPosition, setContextMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleBeforeContextMenu = useCallback((e: React.MouseEvent) => {\n    if (!isMenuDisabled && e.button === 2) {\n      (e.target as HTMLElement).classList.add('no-selection');\n    }\n  }, [isMenuDisabled]);\n\n  const handleContextMenu = useCallback((e: React.MouseEvent) => {\n    (e.target as HTMLElement).classList.remove('no-selection');\n\n    if (isMenuDisabled || (shouldDisableOnLink && (e.target as HTMLElement).matches('a[href]'))) {\n      return;\n    }\n    e.preventDefault();\n\n    if (contextMenuPosition) {\n      return;\n    }\n\n    setIsContextMenuOpen(true);\n    setContextMenuPosition({ x: e.clientX, y: e.clientY });\n  }, [isMenuDisabled, shouldDisableOnLink, contextMenuPosition]);\n\n  const handleContextMenuClose = useCallback(() => {\n    setIsContextMenuOpen(false);\n  }, []);\n\n  const handleContextMenuHide = useCallback(() => {\n    setContextMenuPosition(undefined);\n  }, []);\n\n  // Support context menu on touch devices\n  useEffect(() => {\n    if (isMenuDisabled || !IS_TOUCH_ENV || shouldDisableOnLongTap) {\n      return undefined;\n    }\n\n    const element = elementRef.current;\n    if (!element) {\n      return undefined;\n    }\n\n    let timer: number | undefined;\n\n    const clearLongPressTimer = () => {\n      if (timer) {\n        clearTimeout(timer);\n        timer = undefined;\n      }\n    };\n\n    const emulateContextMenuEvent = (originalEvent: TouchEvent) => {\n      clearLongPressTimer();\n\n      const { clientX, clientY, target } = originalEvent.touches[0];\n\n      if (contextMenuPosition || (shouldDisableOnLink && (target as HTMLElement).matches('a[href]'))) {\n        return;\n      }\n\n      // Temporarily intercept and clear the next click\n      element.addEventListener('touchend', function cancelClickOnce(e) {\n        element.removeEventListener('touchend', cancelClickOnce, true);\n        stopEvent(e);\n      }, true);\n\n      // On iOS15, in PWA mode, the context menu immediately closes after opening\n      if (IS_PWA && IS_IOS) {\n        element.addEventListener('mousedown', function cancelClickOnce(e) {\n          element.removeEventListener('mousedown', cancelClickOnce, true);\n          stopEvent(e);\n        }, true);\n      }\n\n      setIsContextMenuOpen(true);\n      setContextMenuPosition({ x: clientX, y: clientY });\n    };\n\n    const startLongPressTimer = (e: TouchEvent) => {\n      if (isMenuDisabled) {\n        return;\n      }\n      clearLongPressTimer();\n\n      timer = window.setTimeout(() => emulateContextMenuEvent(e), LONG_TAP_DURATION_MS);\n    };\n\n    // @perf Consider event delegation\n    element.addEventListener('touchstart', startLongPressTimer, { passive: true });\n    element.addEventListener('touchcancel', clearLongPressTimer, true);\n    element.addEventListener('touchend', clearLongPressTimer, true);\n    element.addEventListener('touchmove', clearLongPressTimer, { passive: true });\n\n    return () => {\n      clearLongPressTimer();\n      element.removeEventListener('touchstart', startLongPressTimer);\n      element.removeEventListener('touchcancel', clearLongPressTimer, true);\n      element.removeEventListener('touchend', clearLongPressTimer, true);\n      element.removeEventListener('touchmove', clearLongPressTimer);\n    };\n  }, [contextMenuPosition, isMenuDisabled, shouldDisableOnLongTap, elementRef, shouldDisableOnLink]);\n\n  return {\n    isContextMenuOpen,\n    contextMenuPosition,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  };\n};\n\nexport default useContextMenuHandlers;\n","import { useState, useEffect } from '../lib/teact/teact';\nimport type { IAnchorPosition } from '../types';\n\ninterface Layout {\n  extraPaddingX?: number;\n  extraTopPadding?: number;\n  marginSides?: number;\n  extraMarginTop?: number;\n}\n\nconst MENU_POSITION_VISUAL_COMFORT_SPACE_PX = 16;\nconst MENU_POSITION_BOTTOM_MARGIN = 12;\nconst EMPTY_RECT = {\n  width: 0, left: 0, height: 0, top: 0,\n};\n\nexport default function useContextMenuPosition(\n  anchor: IAnchorPosition | undefined,\n  getTriggerElement: () => HTMLElement | null,\n  getRootElement: () => HTMLElement | null,\n  getMenuElement: () => HTMLElement | null,\n  getLayout?: () => Layout,\n) {\n  const [positionX, setPositionX] = useState<'right' | 'left'>('right');\n  const [positionY, setPositionY] = useState<'top' | 'bottom'>('bottom');\n  const [transformOriginX, setTransformOriginX] = useState<number>();\n  const [transformOriginY, setTransformOriginY] = useState<number>();\n  const [withScroll, setWithScroll] = useState(false);\n  const [style, setStyle] = useState('');\n  const [menuStyle, setMenuStyle] = useState('opacity: 0;');\n\n  useEffect(() => {\n    const triggerEl = getTriggerElement();\n    if (!anchor || !triggerEl) {\n      return;\n    }\n\n    let { x, y } = anchor;\n    const anchorX = x;\n    const anchorY = y;\n\n    const menuEl = getMenuElement();\n    const rootEl = getRootElement();\n\n    const {\n      extraPaddingX = 0,\n      extraTopPadding = 0,\n      marginSides = 0,\n      extraMarginTop = 0,\n    } = getLayout?.() || {};\n\n    const marginTop = menuEl ? parseInt(getComputedStyle(menuEl).marginTop, 10) + extraMarginTop : undefined;\n\n    const menuRect = menuEl ? {\n      width: menuEl.offsetWidth,\n      height: menuEl.offsetHeight + marginTop!,\n    } : EMPTY_RECT;\n\n    const rootRect = rootEl ? rootEl.getBoundingClientRect() : EMPTY_RECT;\n\n    let horizontalPosition: 'left' | 'right';\n    let verticalPosition: 'top' | 'bottom';\n    if (x + menuRect.width + extraPaddingX < rootRect.width + rootRect.left) {\n      x += 3;\n      horizontalPosition = 'left';\n    } else if (x - menuRect.width > 0) {\n      horizontalPosition = 'right';\n      x -= 3;\n    } else {\n      horizontalPosition = 'left';\n      x = 16;\n    }\n    setPositionX(horizontalPosition);\n\n    if (marginSides\n      && horizontalPosition === 'right' && (x + extraPaddingX + marginSides >= rootRect.width + rootRect.left)) {\n      x -= marginSides;\n    }\n\n    if (marginSides && horizontalPosition === 'left') {\n      if (x + extraPaddingX + marginSides + menuRect.width >= rootRect.width + rootRect.left) {\n        x -= marginSides;\n      } else if (x - marginSides <= 0) {\n        x += marginSides;\n      }\n    }\n\n    if (y + menuRect.height < rootRect.height + rootRect.top) {\n      verticalPosition = 'top';\n    } else {\n      verticalPosition = 'bottom';\n\n      if (y - menuRect.height < rootRect.top + extraTopPadding) {\n        y = rootRect.top + rootRect.height;\n      }\n    }\n    setPositionY(verticalPosition);\n\n    const triggerRect = triggerEl.getBoundingClientRect();\n    const left = horizontalPosition === 'left'\n      ? Math.min(x - triggerRect.left, rootRect.width - menuRect.width - MENU_POSITION_VISUAL_COMFORT_SPACE_PX)\n      : (x - triggerRect.left);\n    const top = y - triggerRect.top;\n\n    const menuMaxHeight = rootRect.height - MENU_POSITION_BOTTOM_MARGIN - (marginTop || 0);\n\n    setWithScroll(menuMaxHeight < menuRect.height);\n    setMenuStyle(`max-height: ${menuMaxHeight}px;`);\n    setStyle(`left: ${left}px; top: ${top}px`);\n    const offsetX = (anchorX - triggerRect.left) - left;\n    const offsetY = (anchorY - triggerRect.top) - top - (marginTop || 0);\n    setTransformOriginX(horizontalPosition === 'left' ? offsetX : menuRect.width + offsetX);\n    setTransformOriginY(verticalPosition === 'bottom' ? menuRect.height + offsetY : offsetY);\n  }, [\n    anchor, getMenuElement, getRootElement, getTriggerElement, getLayout,\n  ]);\n\n  return {\n    positionX,\n    positionY,\n    transformOriginX,\n    transformOriginY,\n    style,\n    menuStyle,\n    withScroll,\n  };\n}\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst useEnsureMessage = (\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n) => {\n  const { loadMessage } = getActions();\n  const loadMessageThrottled = useMemo(() => {\n    const throttled = throttle(loadMessage, 500, true);\n    return () => {\n      throttled({ chatId, messageId, replyOriginForId });\n    };\n  }, [loadMessage, chatId, messageId, replyOriginForId]);\n\n  useEffect(() => {\n    if (messageId && !message) {\n      loadMessageThrottled();\n    }\n  });\n};\n\nexport default useEnsureMessage;\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  getOrderedIds,\n  getUnreadCounters,\n  getChatsCount,\n  addOrderedIdsCallback,\n  addUnreadCountersCallback,\n  addChatsCountCallback,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n","import { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (container: HTMLElement | null, isDisabled?: boolean) => {\n  useEffect(() => {\n    if (!container || isDisabled) {\n      return undefined;\n    }\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container!.scrollLeft += e.deltaY / 4;\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: true });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [container, isDisabled]);\n};\n\nexport default useHorizontalScroll;\n","import { useEffect } from '../lib/teact/teact';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\nimport { createCallbackManager } from '../util/callbacks';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../util/environment';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  useEffect(() => {\n    if (isOpen) {\n      if (!IS_SINGLE_COLUMN_LAYOUT) {\n        setTimeout(() => {\n          requestAnimationFrame(() => {\n            if (inputRef.current) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isOpen, onClose]);\n}\n","import type { RefObject } from 'react';\nimport {\n  useEffect, useRef, useCallback, useState,\n} from '../lib/teact/teact';\n\nimport { throttle, debounce } from '../util/schedulers';\nimport useHeavyAnimationCheck from './useHeavyAnimationCheck';\n\ntype TargetCallback = (entry: IntersectionObserverEntry) => void;\ntype RootCallback = (entries: IntersectionObserverEntry[]) => void;\ntype ObserveCleanup = NoneToVoidFunction;\nexport type ObserveFn = (target: HTMLElement, targetCallback?: TargetCallback) => ObserveCleanup;\n\ninterface IntersectionController {\n  observer: IntersectionObserver;\n  callbacks: Map<HTMLElement, TargetCallback>;\n}\n\ninterface Response {\n  observe: ObserveFn;\n  freeze: NoneToVoidFunction;\n  unfreeze: NoneToVoidFunction;\n}\n\nexport function useIntersectionObserver({\n  rootRef,\n  throttleMs,\n  debounceMs,\n  shouldSkipFirst,\n  margin,\n  threshold,\n  isDisabled,\n}: {\n  rootRef: RefObject<HTMLDivElement>;\n  throttleMs?: number;\n  debounceMs?: number;\n  shouldSkipFirst?: boolean;\n  margin?: number;\n  threshold?: number | number[];\n  isDisabled?: boolean;\n}, rootCallback?: RootCallback): Response {\n  const controllerRef = useRef<IntersectionController>();\n  const rootCallbackRef = useRef<RootCallback>();\n  const freezeFlagsRef = useRef(0);\n  const onUnfreezeRef = useRef<NoneToVoidFunction>();\n\n  rootCallbackRef.current = rootCallback;\n\n  const freeze = useCallback(() => {\n    freezeFlagsRef.current++;\n  }, []);\n\n  const unfreeze = useCallback(() => {\n    if (!freezeFlagsRef.current) {\n      return;\n    }\n\n    freezeFlagsRef.current--;\n\n    if (!freezeFlagsRef.current && onUnfreezeRef.current) {\n      onUnfreezeRef.current();\n      onUnfreezeRef.current = undefined;\n    }\n  }, []);\n\n  useHeavyAnimationCheck(freeze, unfreeze);\n\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (controllerRef.current) {\n        controllerRef.current.observer.disconnect();\n        controllerRef.current.callbacks.clear();\n        controllerRef.current = undefined;\n      }\n    };\n  }, [isDisabled]);\n\n  function initController() {\n    const callbacks = new Map();\n    const entriesAccumulator = new Map<Element, IntersectionObserverEntry>();\n    const observerCallbackSync = () => {\n      const entries = Array.from(entriesAccumulator.values());\n\n      entries.forEach((entry: IntersectionObserverEntry) => {\n        const callback = callbacks.get(entry.target);\n        if (callback) {\n          callback!(entry, entries);\n        }\n      });\n\n      if (rootCallbackRef.current) {\n        rootCallbackRef.current(entries);\n      }\n\n      entriesAccumulator.clear();\n    };\n    const scheduler = throttleMs ? throttle : debounceMs ? debounce : undefined;\n    const observerCallback = scheduler\n      ? scheduler(observerCallbackSync, (throttleMs || debounceMs)!, !shouldSkipFirst)\n      : observerCallbackSync;\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          entriesAccumulator.set(entry.target, entry);\n        });\n\n        if (freezeFlagsRef.current) {\n          onUnfreezeRef.current = () => {\n            observerCallback();\n          };\n        } else {\n          observerCallback();\n        }\n      },\n      {\n        root: rootRef.current,\n        rootMargin: margin ? `${margin}px` : undefined,\n        threshold,\n      },\n    );\n\n    controllerRef.current = { observer, callbacks };\n  }\n\n  const observe = useCallback((target, targetCallback) => {\n    if (!controllerRef.current) {\n      initController();\n    }\n\n    const controller = controllerRef.current!;\n    controller.observer.observe(target);\n\n    if (targetCallback) {\n      controller.callbacks.set(target, targetCallback);\n    }\n\n    return () => {\n      if (targetCallback) {\n        controller.callbacks.delete(target);\n      }\n\n      controller.observer.unobserve(target);\n    };\n    // Arguments should never change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isDisabled]);\n\n  return { observe, freeze, unfreeze };\n}\n\nexport function useOnIntersect(\n  targetRef: RefObject<HTMLDivElement>, observe?: ObserveFn, callback?: TargetCallback,\n) {\n  useEffect(() => {\n    return observe ? observe(targetRef.current!, callback) : undefined;\n    // Arguments should never change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n}\n\nexport function useIsIntersecting(\n  targetRef: RefObject<HTMLDivElement>, observe?: ObserveFn, callback?: TargetCallback,\n) {\n  const [isIntersecting, setIsIntersecting] = useState(!observe);\n\n  useOnIntersect(targetRef, observe, (entry) => {\n    setIsIntersecting(entry.isIntersecting);\n\n    if (callback) {\n      callback(entry);\n    }\n  });\n\n  return isIntersecting;\n}\n","import { useLayoutEffect } from '../lib/teact/teact';\nimport usePrevious from './usePrevious';\n\nconst useLayoutEffectWithPrevDeps = <T extends readonly any[]>(\n  cb: (args: T | readonly []) => void, dependencies: T, debugKey?: string,\n) => {\n  const prevDeps = usePrevious<T>(dependencies);\n  return useLayoutEffect(() => {\n    return cb(prevDeps || []);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies, debugKey);\n};\n\nexport default useLayoutEffectWithPrevDeps;\n","import { useRef } from '../lib/teact/teact';\nimport generateIdFor from '../util/generateIdFor';\n\nconst store: Record<string, boolean> = {};\n\nconst useUniqueId = () => {\n  const idRef = useRef<string>();\n\n  if (!idRef.current) {\n    idRef.current = generateIdFor(store);\n    store[idRef.current] = true;\n  }\n\n  return idRef.current;\n};\n\nexport default useUniqueId;\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/environment';\nimport { ApiMediaFormat } from '../api/types';\nimport { throttle } from '../util/schedulers';\nimport * as mediaLoader from '../util/mediaLoader';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  cacheBuster?: number,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = mediaFormat === ApiMediaFormat.Stream || (\n    IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive\n  );\n  const forceUpdate = useForceUpdate();\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, cacheBuster, forceUpdate, isStreaming, delay, handleProgress,\n    isHtmlAllowed, id,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useCallback, useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/environment';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useCallback(() => {\n    isMouseInside.current = true;\n  }, []);\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useCallback(() => {\n    isMouseInside.current = true;\n  }, []);\n\n  const handleMouseLeave = useCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  }, [menuCloseTimeout, onClose]);\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport usePrevious from './usePrevious';\nimport useForceUpdate from './useForceUpdate';\nimport useOnChange from './useOnChange';\n\nexport default function usePrevDuringAnimation(current: any, duration?: number) {\n  const prev = usePrevious(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useOnChange(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [current]);\n\n  return !timeoutRef.current || !duration || isCurrentPresent ? current : prev;\n}\n","import { useState, useCallback, useRef } from '../lib/teact/teact';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<Actions> = (action: ReducerAction<Actions>) => void;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const reducerRef = useRef(reducer);\n  const [state, setState] = useState<State>(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    setState((currentState) => reducerRef.current(currentState, action));\n  }, []);\n\n  return [\n    state,\n    dispatch,\n  ] as [State, Dispatch<Actions>];\n}\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n  }, [], ms, noFirst, noLast);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport type { OwnProps } from './CalendarModal';\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default memo(CalendarModalAsync);\n","import React, { useCallback, useState } from '../lib/teact/teact';\nimport { getGlobal } from '../lib/teact/teactn';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dateFormat';\nimport useLang from './useLang';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n) => {\n  const lang = useLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useCallback((date: Date, isWhenOnline = false) => {\n    const { serverTimeOffset } = getGlobal();\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : serverTimeOffset);\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  }, [onScheduled]);\n\n  const handleMessageScheduleUntilOnline = useCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  }, [handleMessageSchedule]);\n\n  const handleCloseCalendar = useCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  }, [onCancel]);\n\n  const requestCalendar = useCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  }, []);\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: number) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import { useRef } from '../lib/teact/teact';\n\nimport useOnChange from './useOnChange';\n\n// Allows to use state value as \"silent\" dependency in hooks (not causing updates).\n// Useful for state values that update frequently (such as controlled input value).\nexport function useStateRef<T>(value: T) {\n  const ref = useRef<T>(value);\n\n  useOnChange(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref;\n}\n","import { useEffect, useLayoutEffect, useRef } from '../lib/teact/teact';\n\nfunction useTimeout(callback: () => void, delay?: number) {\n  const savedCallback = useRef(callback);\n\n  useLayoutEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n    const id = setTimeout(() => savedCallback.current(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\nimport { fastRaf } from '../util/schedulers';\n\n// Fix for memory leak when unmounting video element\nexport default function useVideoCleanup(videoRef: RefObject<HTMLVideoElement>, dependencies: any[]) {\n  useEffect(() => {\n    const videoEl = videoRef.current;\n\n    return () => {\n      if (videoEl) {\n        fastRaf(() => {\n          videoEl.pause();\n          videoEl.src = '';\n          videoEl.load();\n        });\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies);\n}\n","/* eslint-disable no-nested-ternary */\n/* eslint-disable no-bitwise */\n/* eslint-disable no-multi-assign */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-param-reassign */\n/* eslint-disable prefer-const */\n/* eslint-disable eqeqeq */\n/* eslint-disable @typescript-eslint/naming-convention */\n\n/*\nSuperfast Blur - a fast Box Blur For Canvas\n\nVersion:     0.5\nAuthor:        Mario Klingemann\nContact:     mario@quasimondo.com\nWebsite:    http://www.quasimondo.com/BoxBlurForCanvas\nTwitter:    @quasimondo\n\nIn case you find this class useful - especially in commercial projects -\nI am not totally unhappy for a small donation to my PayPal account\nmario@quasimondo.de\n\nOr support me on flattr:\nhttps://flattr.com/thing/140066/Superfast-Blur-a-pretty-fast-Box-Blur-Effect-for-CanvasJavascript\n\nCopyright (c) 2011 Mario Klingemann\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n*/\n\n// eslint-disable-next-line max-len\nconst mul_table = [1, 57, 41, 21, 203, 34, 97, 73, 227, 91, 149, 62, 105, 45, 39, 137, 241, 107, 3, 173, 39, 71, 65, 238, 219, 101, 187, 87, 81, 151, 141, 133, 249, 117, 221, 209, 197, 187, 177, 169, 5, 153, 73, 139, 133, 127, 243, 233, 223, 107, 103, 99, 191, 23, 177, 171, 165, 159, 77, 149, 9, 139, 135, 131, 253, 245, 119, 231, 224, 109, 211, 103, 25, 195, 189, 23, 45, 175, 171, 83, 81, 79, 155, 151, 147, 9, 141, 137, 67, 131, 129, 251, 123, 30, 235, 115, 113, 221, 217, 53, 13, 51, 50, 49, 193, 189, 185, 91, 179, 175, 43, 169, 83, 163, 5, 79, 155, 19, 75, 147, 145, 143, 35, 69, 17, 67, 33, 65, 255, 251, 247, 243, 239, 59, 29, 229, 113, 111, 219, 27, 213, 105, 207, 51, 201, 199, 49, 193, 191, 47, 93, 183, 181, 179, 11, 87, 43, 85, 167, 165, 163, 161, 159, 157, 155, 77, 19, 75, 37, 73, 145, 143, 141, 35, 138, 137, 135, 67, 33, 131, 129, 255, 63, 250, 247, 61, 121, 239, 237, 117, 29, 229, 227, 225, 111, 55, 109, 216, 213, 211, 209, 207, 205, 203, 201, 199, 197, 195, 193, 48, 190, 47, 93, 185, 183, 181, 179, 178, 176, 175, 173, 171, 85, 21, 167, 165, 41, 163, 161, 5, 79, 157, 78, 154, 153, 19, 75, 149, 74, 147, 73, 144, 143, 71, 141, 140, 139, 137, 17, 135, 134, 133, 66, 131, 65, 129, 1];\n// eslint-disable-next-line max-len\nconst shg_table = [0, 9, 10, 10, 14, 12, 14, 14, 16, 15, 16, 15, 16, 15, 15, 17, 18, 17, 12, 18, 16, 17, 17, 19, 19, 18, 19, 18, 18, 19, 19, 19, 20, 19, 20, 20, 20, 20, 20, 20, 15, 20, 19, 20, 20, 20, 21, 21, 21, 20, 20, 20, 21, 18, 21, 21, 21, 21, 20, 21, 17, 21, 21, 21, 22, 22, 21, 22, 22, 21, 22, 21, 19, 22, 22, 19, 20, 22, 22, 21, 21, 21, 22, 22, 22, 18, 22, 22, 21, 22, 22, 23, 22, 20, 23, 22, 22, 23, 23, 21, 19, 21, 21, 21, 23, 23, 23, 22, 23, 23, 21, 23, 22, 23, 18, 22, 23, 20, 22, 23, 23, 23, 21, 22, 20, 22, 21, 22, 24, 24, 24, 24, 24, 22, 21, 24, 23, 23, 24, 21, 24, 23, 24, 22, 24, 24, 22, 24, 24, 22, 23, 24, 24, 24, 20, 23, 22, 23, 24, 24, 24, 24, 24, 24, 24, 23, 21, 23, 22, 23, 24, 24, 24, 22, 24, 24, 24, 23, 22, 24, 24, 25, 23, 25, 25, 23, 24, 25, 25, 24, 22, 25, 25, 25, 24, 23, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 23, 25, 23, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 24, 22, 25, 25, 23, 25, 25, 20, 24, 25, 24, 25, 25, 22, 24, 25, 24, 25, 24, 25, 25, 24, 25, 25, 25, 25, 22, 25, 25, 25, 24, 25, 24, 25, 18];\n\nexport default function boxBlurCanvasRGB(context, top_x, top_y, width, height, radius, iterations) {\n  if (Number.isNaN(radius) || radius < 1) return;\n\n  radius |= 0;\n\n  if (Number.isNaN(iterations)) iterations = 1;\n  iterations |= 0;\n  if (iterations > 3) iterations = 3;\n  if (iterations < 1) iterations = 1;\n\n  const imageData = context.getImageData(top_x, top_y, width, height);\n\n  const pixels = imageData.data;\n\n  let rsum;\n  let gsum;\n  let bsum;\n  let x;\n  let y;\n  let i;\n  let p;\n  let p1;\n  let p2;\n  let yp;\n  let yi;\n  let yw;\n  let wm = width - 1;\n  let hm = height - 1;\n  let rad1 = radius + 1;\n\n  let r = [];\n  let g = [];\n  let b = [];\n\n  let mul_sum = mul_table[radius];\n  let shg_sum = shg_table[radius];\n\n  let vmin = [];\n  let vmax = [];\n\n  while (iterations-- > 0) {\n    yw = yi = 0;\n\n    for (y = 0; y < height; y++) {\n      rsum = pixels[yw] * rad1;\n      gsum = pixels[yw + 1] * rad1;\n      bsum = pixels[yw + 2] * rad1;\n\n      for (i = 1; i <= radius; i++) {\n        p = yw + (((i > wm ? wm : i)) << 2);\n        rsum += pixels[p++];\n        gsum += pixels[p++];\n        bsum += pixels[p++];\n      }\n\n      for (x = 0; x < width; x++) {\n        r[yi] = rsum;\n        g[yi] = gsum;\n        b[yi] = bsum;\n\n        if (y == 0) {\n          vmin[x] = ((p = x + rad1) < wm ? p : wm) << 2;\n          vmax[x] = ((p = x - radius) > 0 ? p << 2 : 0);\n        }\n\n        p1 = yw + vmin[x];\n        p2 = yw + vmax[x];\n\n        rsum += pixels[p1++] - pixels[p2++];\n        gsum += pixels[p1++] - pixels[p2++];\n        bsum += pixels[p1++] - pixels[p2++];\n\n        yi++;\n      }\n      yw += (width << 2);\n    }\n\n    for (x = 0; x < width; x++) {\n      yp = x;\n      rsum = r[yp] * rad1;\n      gsum = g[yp] * rad1;\n      bsum = b[yp] * rad1;\n\n      for (i = 1; i <= radius; i++) {\n        yp += (i > hm ? 0 : width);\n        rsum += r[yp];\n        gsum += g[yp];\n        bsum += b[yp];\n      }\n\n      yi = x << 2;\n      for (y = 0; y < height; y++) {\n        pixels[yi] = (rsum * mul_sum) >>> shg_sum;\n        pixels[yi + 1] = (gsum * mul_sum) >>> shg_sum;\n        pixels[yi + 2] = (bsum * mul_sum) >>> shg_sum;\n\n        if (x == 0) {\n          vmin[y] = ((p = y + rad1) < hm ? p : hm) * width;\n          vmax[y] = ((p = y - radius) > 0 ? p * width : 0);\n        }\n\n        p1 = x + vmin[y];\n        p2 = x + vmax[y];\n\n        rsum += r[p1] - r[p2];\n        gsum += g[p1] - g[p2];\n        bsum += b[p1] - b[p2];\n\n        yi += width << 2;\n      }\n    }\n  }\n\n  context.putImageData(imageData, top_x, top_y);\n}\n","import { getActions, getGlobal } from '../global';\n\nimport { AudioOrigin, GlobalSearchContent } from '../types';\nimport type { ApiMessage } from '../api/types';\n\nimport { IS_SAFARI } from './environment';\nimport safePlay from './safePlay';\nimport { patchSafariProgressiveAudio, isSafariPatchInProgress } from './patchSafariProgressiveAudio';\nimport type { MessageKey } from '../global/helpers';\nimport { getMessageKey, parseMessageKey } from '../global/helpers';\nimport { fastRaf } from './schedulers';\nimport { selectCurrentMessageList } from '../global/selectors';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = getGlobal().audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset src to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // onPause not called otherwise, but required to sync UI\n        fastRaf(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, getGlobal().audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, getGlobal().audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (getGlobal().globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId {\n  return `${getMessageKey(message)}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","import { IS_IOS } from './environment';\nimport { clamp, round } from './math';\nimport { debounce } from './schedulers';\n\nexport enum SwipeDirection {\n  Up,\n  Down,\n  Left,\n  Right,\n}\n\ninterface CaptureOptions {\n  onCapture?: (e: MouseEvent | TouchEvent) => void;\n  onRelease?: (e: MouseEvent | TouchEvent) => void;\n  onDrag?: (\n    e: MouseEvent | TouchEvent | WheelEvent,\n    captureEvent: MouseEvent | TouchEvent | WheelEvent,\n    params: {\n      dragOffsetX: number;\n      dragOffsetY: number;\n    },\n    cancelDrag?: (x: boolean, y: boolean) => void,\n  ) => void;\n  onSwipe?: (e: Event, direction: SwipeDirection) => boolean;\n  onZoom?: (e: TouchEvent | WheelEvent, params: {\n    // Absolute zoom level\n    zoom?: number;\n    // Relative zoom factor\n    zoomFactor?: number;\n\n    // center coordinate of the initial pinch\n    initialCenterX: number;\n    initialCenterY: number;\n\n    // offset of the pinch center (current from initial)\n    dragOffsetX: number;\n    dragOffsetY: number;\n\n    // center coordinate of the current pinch\n    currentCenterX: number;\n    currentCenterY: number;\n  }) => void;\n  onClick?: (e: MouseEvent | TouchEvent) => void;\n  onDoubleClick?: (e: MouseEvent | RealTouchEvent, params: { centerX: number; centerY: number }) => void;\n  excludedClosestSelector?: string;\n  selectorToPreventScroll?: string;\n  withNativeDrag?: boolean;\n  maxZoom?: number;\n  minZoom?: number;\n  doubleTapZoom?: number;\n  initialZoom?: number;\n  isNotPassive?: boolean;\n  withCursor?: boolean;\n}\n\n// https://stackoverflow.com/questions/11287877/how-can-i-get-e-offsetx-on-mobile-ipad\n// Android does not have this value, and iOS has it but as read-only\nexport interface RealTouchEvent extends TouchEvent {\n  pageX?: number;\n  pageY?: number;\n}\n\ntype TSwipeAxis =\n  'x'\n  | 'y'\n  | undefined;\n\nexport const IOS_SCREEN_EDGE_THRESHOLD = 20;\nconst MOVED_THRESHOLD = 15;\nconst SWIPE_THRESHOLD = 50;\n\nfunction getDistance(a: Touch, b?: Touch) {\n  if (!b) return 0;\n  return Math.hypot((b.pageX - a.pageX), (b.pageY - a.pageY));\n}\n\nfunction getTouchCenter(a: Touch, b: Touch) {\n  return {\n    x: (a.pageX + b.pageX) / 2,\n    y: (a.pageY + b.pageY) / 2,\n  };\n}\n\nlet lastClickTime = 0;\n\nexport function captureEvents(element: HTMLElement, options: CaptureOptions) {\n  let captureEvent: MouseEvent | RealTouchEvent | WheelEvent | undefined;\n  let hasMoved = false;\n  let hasSwiped = false;\n  let isZooming = false;\n  let initialDistance = 0;\n  let wheelZoom = options.initialZoom ?? 1;\n  let initialDragOffset = {\n    x: 0,\n    y: 0,\n  };\n  let isDragCanceled = {\n    x: false,\n    y: false,\n  };\n  let initialTouchCenter = {\n    x: window.innerWidth / 2,\n    y: window.innerHeight / 2,\n  };\n  let initialSwipeAxis: TSwipeAxis | undefined;\n  const minZoom = options.minZoom ?? 1;\n  const maxZoom = options.maxZoom ?? 4;\n\n  function onCapture(e: MouseEvent | RealTouchEvent) {\n    if (options.excludedClosestSelector && (\n      (e.target as HTMLElement).matches(options.excludedClosestSelector)\n      || (e.target as HTMLElement).closest(options.excludedClosestSelector)\n    )) {\n      return;\n    }\n\n    captureEvent = e;\n\n    if (e.type === 'mousedown') {\n      if (!options.withNativeDrag && options.onDrag) {\n        e.preventDefault();\n      }\n\n      document.addEventListener('mousemove', onMove);\n      document.addEventListener('mouseup', onRelease);\n    } else if (e.type === 'touchstart') {\n      // We need to always listen on `touchstart` target:\n      // https://stackoverflow.com/questions/33298828/touch-move-event-dont-fire-after-touch-start-target-is-removed\n      const target = e.target as HTMLElement;\n      target.addEventListener('touchmove', onMove, { passive: true });\n      target.addEventListener('touchend', onRelease);\n      target.addEventListener('touchcancel', onRelease);\n\n      if ('touches' in e) {\n        if (e.pageX === undefined) {\n          e.pageX = e.touches[0].pageX;\n        }\n\n        if (e.pageY === undefined) {\n          e.pageY = e.touches[0].pageY;\n        }\n\n        if (e.touches.length === 2) {\n          initialDistance = getDistance(e.touches[0], e.touches[1]);\n          initialTouchCenter = getTouchCenter(e.touches[0], e.touches[1]);\n        }\n      }\n    }\n\n    if (options.withCursor) {\n      document.body.classList.add('cursor-grabbing');\n    }\n\n    if (options.onCapture) {\n      options.onCapture(e);\n    }\n  }\n\n  function onRelease(e?: MouseEvent | TouchEvent) {\n    if (captureEvent) {\n      if (options.withCursor) {\n        document.body.classList.remove('cursor-grabbing');\n      }\n\n      document.removeEventListener('mouseup', onRelease);\n      document.removeEventListener('mousemove', onMove);\n      (captureEvent.target as HTMLElement).removeEventListener('touchcancel', onRelease);\n      (captureEvent.target as HTMLElement).removeEventListener('touchend', onRelease);\n      (captureEvent.target as HTMLElement).removeEventListener('touchmove', onMove);\n\n      if (IS_IOS && options.selectorToPreventScroll) {\n        Array.from(document.querySelectorAll<HTMLElement>(options.selectorToPreventScroll))\n          .forEach((scrollable) => {\n            scrollable.style.overflow = '';\n          });\n      }\n\n      if (e) {\n        if (hasMoved) {\n          if (options.onRelease) {\n            options.onRelease(e);\n          }\n        } else if (e.type === 'mouseup') {\n          if (options.onDoubleClick && Date.now() - lastClickTime < 300) {\n            options.onDoubleClick(e, {\n              centerX: captureEvent!.pageX!,\n              centerY: captureEvent!.pageY!,\n            });\n          } else if (options.onClick && (!('button' in e) || e.button === 0)) {\n            options.onClick(e);\n          }\n          lastClickTime = Date.now();\n        }\n      }\n    }\n\n    hasMoved = false;\n    hasSwiped = false;\n    isZooming = false;\n    initialDistance = 0;\n    wheelZoom = clamp(wheelZoom, minZoom, maxZoom);\n    initialSwipeAxis = undefined;\n    initialDragOffset = {\n      x: 0,\n      y: 0,\n    };\n    isDragCanceled = {\n      x: false,\n      y: false,\n    };\n    initialTouchCenter = {\n      x: window.innerWidth / 2,\n      y: window.innerHeight / 2,\n    };\n    captureEvent = undefined;\n  }\n\n  function onMove(e: MouseEvent | RealTouchEvent) {\n    if (captureEvent) {\n      if (e.type === 'touchmove' && ('touches' in e)) {\n        if (e.pageX === undefined) {\n          e.pageX = e.touches[0].pageX;\n        }\n\n        if (e.pageY === undefined) {\n          e.pageY = e.touches[0].pageY;\n        }\n\n        if (options.onZoom && initialDistance > 0 && e.touches.length === 2) {\n          const endDistance = getDistance(e.touches[0], e.touches[1]);\n          const touchCenter = getTouchCenter(e.touches[0], e.touches[1]);\n          const dragOffsetX = touchCenter.x - initialTouchCenter.x;\n          const dragOffsetY = touchCenter.y - initialTouchCenter.y;\n          const zoomFactor = endDistance / initialDistance;\n          options.onZoom(e, {\n            zoomFactor,\n            initialCenterX: initialTouchCenter.x,\n            initialCenterY: initialTouchCenter.y,\n            dragOffsetX,\n            dragOffsetY,\n            currentCenterX: touchCenter.x,\n            currentCenterY: touchCenter.y,\n          });\n          if (zoomFactor !== 1) hasMoved = true;\n        }\n      }\n\n      const dragOffsetX = e.pageX! - captureEvent.pageX!;\n      const dragOffsetY = e.pageY! - captureEvent.pageY!;\n\n      if (Math.abs(dragOffsetX) >= MOVED_THRESHOLD || Math.abs(dragOffsetY) >= MOVED_THRESHOLD) {\n        hasMoved = true;\n      }\n\n      let shouldPreventScroll = false;\n\n      if (options.onDrag) {\n        options.onDrag(e, captureEvent, {\n          dragOffsetX,\n          dragOffsetY,\n        });\n        shouldPreventScroll = true;\n      }\n\n      if (options.onSwipe && !hasSwiped) {\n        hasSwiped = onSwipe(e, dragOffsetX, dragOffsetY);\n        shouldPreventScroll = hasSwiped;\n      }\n\n      if (IS_IOS && shouldPreventScroll && options.selectorToPreventScroll) {\n        Array.from(document.querySelectorAll<HTMLElement>(options.selectorToPreventScroll))\n          .forEach((scrollable) => {\n            scrollable.style.overflow = 'hidden';\n          });\n      }\n    }\n  }\n\n  function onSwipe(e: MouseEvent | RealTouchEvent, dragOffsetX: number, dragOffsetY: number) {\n    // Avoid conflicts with swipe-to-back gestures\n    if (IS_IOS) {\n      const x = (e as RealTouchEvent).touches[0].pageX;\n      if (x <= IOS_SCREEN_EDGE_THRESHOLD || x >= window.innerWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n        return false;\n      }\n    }\n\n    const xAbs = Math.abs(dragOffsetX);\n    const yAbs = Math.abs(dragOffsetY);\n\n    if (dragOffsetX && dragOffsetY) {\n      const ratio = Math.max(xAbs, yAbs) / Math.min(xAbs, yAbs);\n      // Diagonal swipe\n      if (ratio < 2) {\n        return false;\n      }\n    }\n\n    let axis: TSwipeAxis | undefined;\n    if (xAbs >= SWIPE_THRESHOLD) {\n      axis = 'x';\n    } else if (yAbs >= SWIPE_THRESHOLD) {\n      axis = 'y';\n    }\n\n    if (!axis) {\n      return false;\n    }\n\n    if (!initialSwipeAxis) {\n      initialSwipeAxis = axis;\n    } else if (initialSwipeAxis !== axis) {\n      // Prevent horizontal swipe after vertical to prioritize scroll\n      return false;\n    }\n\n    return processSwipe(e, axis, dragOffsetX, dragOffsetY, options.onSwipe!);\n  }\n\n  const releaseWheel = debounce(onRelease, 100, false);\n\n  function onWheel(e: WheelEvent) {\n    if (!options.onZoom && !options.onDrag) return;\n    if (options.excludedClosestSelector && (\n      (e.target as HTMLElement).matches(options.excludedClosestSelector)\n      || (e.target as HTMLElement).closest(options.excludedClosestSelector)\n    )) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    if (!hasMoved) {\n      onCapture(e);\n      hasMoved = true;\n      initialTouchCenter = {\n        x: e.x,\n        y: e.y,\n      };\n    }\n    const { doubleTapZoom = 3 } = options;\n    if (options.onDoubleClick && Object.is(e.deltaX, -0) && Object.is(e.deltaY, -0) && e.ctrlKey) {\n      wheelZoom = wheelZoom > 1 ? 1 : doubleTapZoom;\n      options.onDoubleClick(e, { centerX: e.pageX, centerY: e.pageY });\n      hasMoved = false;\n      return;\n    }\n    const metaKeyPressed = e.metaKey || e.ctrlKey || e.shiftKey;\n    if (options.onZoom && metaKeyPressed) {\n      isZooming = true;\n      const dragOffsetX = e.x - initialTouchCenter.x;\n      const dragOffsetY = e.y - initialTouchCenter.y;\n      const delta = clamp(e.deltaY, -25, 25);\n      wheelZoom -= delta * 0.01;\n      wheelZoom = clamp(wheelZoom, minZoom * 0.5, maxZoom * 3);\n      options.onZoom(e, {\n        zoom: round(wheelZoom, 2),\n        initialCenterX: initialTouchCenter.x,\n        initialCenterY: initialTouchCenter.y,\n        dragOffsetX,\n        dragOffsetY,\n        currentCenterX: e.x,\n        currentCenterY: e.y,\n      });\n    }\n    if (options.onDrag && !metaKeyPressed && !isZooming) {\n      // Ignore wheel inertia if drag is canceled in this direction\n      if (!isDragCanceled.x || Math.sign(initialDragOffset.x) === Math.sign(e.deltaX)) {\n        initialDragOffset.x -= e.deltaX;\n      }\n      if (!isDragCanceled.y || Math.sign(initialDragOffset.y) === Math.sign(e.deltaY)) {\n        initialDragOffset.y -= e.deltaY;\n      }\n      const { x, y } = initialDragOffset;\n      options.onDrag(e, captureEvent!, {\n        dragOffsetX: x,\n        dragOffsetY: y,\n      }, (dx, dy) => {\n        isDragCanceled = { x: dx, y: dy };\n      });\n    }\n    releaseWheel(e);\n  }\n\n  element.addEventListener('wheel', onWheel);\n  element.addEventListener('mousedown', onCapture);\n  element.addEventListener('touchstart', onCapture, { passive: !options.isNotPassive });\n\n  return () => {\n    onRelease();\n    element.removeEventListener('wheel', onWheel);\n    element.removeEventListener('touchstart', onCapture);\n    element.removeEventListener('mousedown', onCapture);\n  };\n}\n\nfunction processSwipe(\n  e: Event,\n  currentSwipeAxis: TSwipeAxis,\n  dragOffsetX: number,\n  dragOffsetY: number,\n  onSwipe: (e: Event, direction: SwipeDirection) => boolean,\n) {\n  if (currentSwipeAxis === 'x') {\n    if (dragOffsetX < 0) {\n      return onSwipe(e, SwipeDirection.Left);\n    } else {\n      return onSwipe(e, SwipeDirection.Right);\n    }\n  } else if (currentSwipeAxis === 'y') {\n    if (dragOffsetY < 0) {\n      return onSwipe(e, SwipeDirection.Up);\n    } else {\n      return onSwipe(e, SwipeDirection.Down);\n    }\n  }\n\n  return false;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { getGlobal } from '../global';\n\nimport { FocusDirection } from '../types';\n\nimport {\n  ANIMATION_LEVEL_MIN,\n  FAST_SMOOTH_MAX_DISTANCE, FAST_SMOOTH_MAX_DURATION, FAST_SMOOTH_MIN_DURATION,\n  FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { IS_ANDROID } from './environment';\nimport { dispatchHeavyAnimationEvent } from '../hooks/useHeavyAnimationCheck';\nimport { animateSingle } from './animation';\nimport { fastRaf } from './schedulers';\n\nlet isAnimating = false;\n\nexport default function fastSmoothScroll(\n  container: HTMLElement,\n  element: HTMLElement,\n  position: ScrollLogicalPosition | 'centerOrTop',\n  margin = 0,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n  forceDuration?: number,\n  forceNormalContainerHeight?: boolean,\n) {\n  const scrollFrom = calculateScrollFrom(container, element, maxDistance, forceDirection);\n\n  if (forceDirection === FocusDirection.Static) {\n    scrollWithJs(container, element, scrollFrom, position, margin, 0);\n    return;\n  }\n\n  if (getGlobal().settings.byKey.animationLevel === ANIMATION_LEVEL_MIN) {\n    forceDuration = 0;\n  }\n\n  scrollWithJs(container, element, scrollFrom, position, margin, forceDuration, forceNormalContainerHeight);\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  element: HTMLElement,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { offsetTop: elementTop } = element;\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = elementTop - container.scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return elementTop + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, elementTop - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction scrollWithJs(\n  container: HTMLElement,\n  element: HTMLElement,\n  scrollFrom: number,\n  position: ScrollLogicalPosition | 'centerOrTop',\n  margin = 0,\n  forceDuration?: number,\n  forceNormalContainerHeight?: boolean,\n) {\n  const { offsetTop: elementTop, offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  if (currentScrollTop !== scrollFrom) {\n    container.scrollTop = scrollFrom;\n  }\n\n  let path!: number;\n\n  switch (position) {\n    case 'start':\n      path = (elementTop - margin) - scrollFrom + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      path = (elementTop + elementHeight + margin) - (scrollFrom + targetContainerHeight);\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      path = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2) - (scrollFrom + targetContainerHeight / 2)\n        : (elementTop - margin) - scrollFrom;\n      break;\n  }\n\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return;\n  }\n\n  const target = scrollFrom + path;\n\n  if (forceDuration === 0) {\n    container.scrollTop = target;\n    return;\n  }\n\n  isAnimating = true;\n\n  const absPath = Math.abs(path);\n  const transition = absPath < FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n  const duration = forceDuration || (\n    FAST_SMOOTH_MIN_DURATION\n    + (absPath / FAST_SMOOTH_MAX_DISTANCE) * (FAST_SMOOTH_MAX_DURATION - FAST_SMOOTH_MIN_DURATION)\n  );\n  const startAt = Date.now();\n  const onHeavyAnimationStop = dispatchHeavyAnimationEvent();\n\n  fastRaf(() => {\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n\n      container.scrollTop = Math.round(target - currentPath);\n\n      isAnimating = t < 1;\n\n      if (!isAnimating) {\n        onHeavyAnimationStop();\n      }\n\n      return isAnimating;\n    });\n  });\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 5);\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { getGlobal } from '../global';\n\nimport { ANIMATION_LEVEL_MIN } from '../config';\nimport { animate } from './animation';\nimport { fastRaf } from './schedulers';\n\nconst DEFAULT_DURATION = 300;\n\nexport default function fastSmoothScrollHorizontal(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (getGlobal().settings.byKey.animationLevel === ANIMATION_LEVEL_MIN) {\n    duration = 0;\n  }\n\n  scrollWithJs(container, left, duration);\n}\n\nfunction scrollWithJs(container: HTMLElement, left: number, duration: number) {\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const { scrollLeft, offsetWidth: containerWidth, scrollWidth } = container;\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return;\n  }\n\n  const target = scrollLeft + path;\n\n  if (duration === 0) {\n    container.scrollLeft = target;\n    return;\n  }\n\n  const startAt = Date.now();\n\n  fastRaf(() => {\n    animate(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n\n      const currentPath = path * (1 - transition(t));\n      container.scrollLeft = Math.round(target - currentPath);\n\n      return t < 1;\n    });\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { IS_TOUCH_ENV } from './environment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","const ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection && selection.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  return messageIds;\n}\n","import windowSize from './windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","export const clamp = (num: number, min: number, max: number) => (Math.min(max, Math.max(min, num)));\nexport const isBetween = (num: number, min: number, max: number) => (num >= min && num <= max);\nexport const round = (num: number, decimals: number = 0) => Math.round(num * 10 ** decimals) / 10 ** decimals;\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function setMicrophoneActive(active: boolean) {\n  const { mediaSession } = window.navigator;\n  mediaSession?.setMicrophoneActive?.(active);\n}\n\nexport function setCameraActive(active: boolean) {\n  const { mediaSession } = window.navigator;\n  mediaSession?.setCameraActive?.(active);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import type { ApiMessageEntity, ApiFormattedText } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\nimport { IS_EMOJI_SUPPORTED } from './environment';\nimport { RE_LINK_TEMPLATE } from '../config';\n\nconst ENTITY_CLASS_BY_NODE_NAME: Record<string, string> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseMessageInput(html: string, withMarkdownLinks = false): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = withMarkdownLinks ? parseMarkdown(parseMarkdownLinks(html)) : parseMarkdown(html);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  let textIndex = 0;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  if (!IS_EMOJI_SUPPORTED) {\n    // Emojis\n    parsedHtml = parsedHtml.replace(/<img[^>]+alt=\"([^\"]+)\"[^>]*>/gm, '$1');\n  }\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*?)[\\n\\r](.*?[\\n\\r]?)`{3}/gms, '<pre data-language=\"$1\">$2</pre>');\n  parsedHtml = parsedHtml.replace(/^`{3}[\\n\\r]?(.*?)[\\n\\r]?`{3}/gms, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(/[`]{1}([^`\\n]+)[`]{1}/g, '<code>$1</code>');\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(\n    /(^|\\s)(?!<code[^<]*|<\\/)[*]{2}([^*\\n]+)[*]{2}(?![^<]*<\\/code>)(\\s|$)/g,\n    '$1<b>$2</b>$3',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(^|\\s)(?!<code[^<]*|<\\/)[_]{2}([^_\\n]+)[_]{2}(?![^<]*<\\/code>)(\\s|$)/g,\n    '$1<i>$2</i>$3',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(^|\\s)(?!<code[^<]*|<\\/)[~]{2}([^~\\n]+)[~]{2}(?![^<]*<\\/code>)(\\s|$)/g,\n    '$1<s>$2</s>$3',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(^|\\s)(?!<code[^<]*|<\\/)[|]{2}([^|\\n]+)[|]{2}(?![^<]*<\\/code>)(\\s|$)/g,\n    `$1<span data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">$2</span>$3`,\n  );\n\n  return parsedHtml;\n}\n\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `http://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  let url: string | undefined;\n  let userId: string | undefined;\n  let language: string | undefined;\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    url = (node as HTMLAnchorElement).href;\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    userId = (node as HTMLAnchorElement).dataset.userId;\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    language = (node as HTMLPreElement).dataset.language;\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n      ...(url && { url }),\n      ...(userId && { userId }),\n      ...(language && { language }),\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode) {\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType;\n  }\n\n  return undefined;\n}\n","/*\n * Thanks to Ace Monkey for this mind-blowing patch.\n */\n\nexport function patchSafariProgressiveAudio(audioEl: HTMLAudioElement) {\n  if (audioEl.dataset.patchedForSafari) {\n    return;\n  }\n\n  audioEl.addEventListener('play', () => {\n    const t = audioEl.currentTime;\n\n    audioEl.dataset.patchForSafariInProgress = 'true';\n    function onProgress() {\n      if (!audioEl.buffered.length) {\n        return;\n      }\n      audioEl.currentTime = audioEl.duration - 1;\n      audioEl.addEventListener('progress', () => {\n        delete audioEl.dataset.patchForSafariInProgress;\n        audioEl.currentTime = t;\n        if (audioEl.paused && !audioEl.dataset.preventPlayAfterPatch) {\n          audioEl.play();\n        }\n      }, { once: true });\n\n      audioEl.removeEventListener('progress', onProgress);\n    }\n\n    audioEl.addEventListener('progress', onProgress);\n  }, { once: true });\n\n  audioEl.dataset.patchedForSafari = 'true';\n}\n\nexport function isSafariPatchInProgress(audioEl: HTMLAudioElement) {\n  return Boolean(audioEl.dataset.patchForSafariInProgress);\n}\n","import type React from '../lib/teact/teact';\n\nconst stopEvent = (e: React.UIEvent | Event) => {\n  e.stopPropagation();\n  e.preventDefault();\n};\n\nexport default stopEvent;\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","import type { ApiThemeParameters } from '../api/types';\n\nexport function extractCurrentThemeParams(): ApiThemeParameters {\n  const style = getComputedStyle(document.documentElement);\n  const backgroundColor = getPropertyWrapped(style, '--color-background');\n  const textColor = getPropertyWrapped(style, '--color-text');\n  const buttonColor = getPropertyWrapped(style, '--color-primary');\n  const buttonTextColor = getPropertyWrapped(style, '--color-white');\n  const linkColor = getPropertyWrapped(style, '--color-links');\n  const hintColor = getPropertyWrapped(style, '--color-text-secondary');\n  return {\n    bg_color: backgroundColor,\n    text_color: textColor,\n    hint_color: hintColor,\n    link_color: linkColor,\n    button_color: buttonColor,\n    button_text_color: buttonTextColor,\n  };\n}\n\nexport function validateHexColor(color: string) {\n  return /^#[0-9A-F]{6}$/i.test(color);\n}\n\nfunction getPropertyWrapped(style: CSSStyleDeclaration, property: string) {\n  const value = style.getPropertyValue(property);\n  return wrapColor(value.trim());\n}\n\nfunction wrapColor(color: string) {\n  if (validateHexColor(color)) return color;\n  return `#${color.match(/^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+\\.{0,1}\\d*))?\\)$/)!\n    .slice(1)\n    .map((n: string, i: number) => (i === 3 ? Math.round(parseFloat(n) * 255) : parseFloat(n))\n      .toString(16)\n      .padStart(2, '0')\n      .replace('NaN', ''))\n    .join('')}`;\n}\n"],"names":["memo","props","sticker","noLoad","forcePreview","lastSyncTime","otherProps","thumbDataUri","thumbnail","dataUri","localMediaHash","id","previewBlobUrl","useMedia","undefined","ApiMediaFormat","tgsUrl","previewUrl","className","transitionClassNames","useMediaTransition","isAnimationReady","markAnimationReady","useFlag","size","buildClassName","style","buildStyle","src","styles","AnimatedIcon","onLoad","noTransition","renderWaveform","canvas","spikes","progress","peak","fillStyle","progressFillStyle","width","length","height","ctx","getContext","scale","forEach","item","i","globalAlpha","spikeHeight","Math","max","x","y","radius","beginPath","moveTo","arcTo","closePath","roundedRectangle","fill","decodeWaveform","encoded5bit","bitsCount","valuesCount","floor","result","Array","bitsData","l","byteIndex","bitShift","value","lastByteIndex","lastBitShift","lastValue","interpolateArray","data","fitCount","newData","springFactor","leftFiller","rightFiller","idx","val","MIN_SPIKES","IS_SINGLE_COLUMN_LAYOUT","MAX_SPIKES","renderSeekline","playProgress","bufferedRanges","seekerRef","ref","map","start","end","theme","message","senderTitle","uploadProgress","origin","date","isSelectable","isSelected","isDownloading","onPlay","onReadMedia","onCancelUpload","onDateClick","cancelMessageMediaDownload","downloadMessageMedia","getActions","content","audio","voice","video","isMediaUnread","isVoice","Boolean","isSeeking","useRef","lang","useLang","isRtl","isActivated","setIsActivated","useState","shouldLoad","coverHash","getMessageMediaHash","coverBlobUrl","mediaData","getMessageMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","useCallback","chatId","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","isPlaying","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","isOwn","isOwnMessage","waveformCanvasRef","canvasRef","useMemo","waveform","min","durationFactor","spikesCount","round","Uint8Array","useLayoutEffect","current","useWaveformCanvas","withSeekline","useEffect","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRender","shouldRenderSpinner","spinnerClassNames","useShowTransition","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","renderFirstLine","title","fileName","captureEvents","onCapture","onRelease","onClick","onDrag","fullClassName","AudioOrigin","buttonClassNames","push","contentClassName","renderWithTitle","dir","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","Button","ripple","color","join","ariaLabel","backgroundImage","ProgressSpinner","transparent","noCross","showProgress","showSeekline","getTranslation","getFileSizeString","formatMediaDateTime","renderAudio","draggable","renderVoice","withGlobal","global","chatOrUserId","countryList","phoneCodes","phoneCodeList","chat","selectChat","user","isUserId","selectUser","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","canInviteUsers","isChatChannel","isUserRightBanned","getHasAdminRight","forceShowSelf","loadFullUser","showNotification","updateChatMutedState","userId","fullInfo","username","phoneNumber","isSelf","handleNotificationChange","isRestricted","copy","text","entity","copyTextToClipboard","formattedNumber","formatPhoneNumberWithCode","link","getChatLink","description","bio","getChatDescription","icon","multiline","narrow","isStatic","label","checked","inactive","isPrivateChat","isChatWithSelf","selectIsChatWithSelf","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isChannel","isBasicGroup","isChatBasicGroup","isSuperGroup","isChatSuperGroup","currentUserId","isOpen","onClose","onCloseAnimationEnd","leaveChannel","deleteHistory","deleteChannel","deleteChatUser","blockContact","chatTitle","getChatTitle","handleDeleteMessageForAll","shouldDeleteForAll","handleDeleteAndStop","contactId","accessHash","handleDeleteChat","isCreator","handleLeaveChat","header","isSavedMessages","isText","observeIntersection","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","sender","onMediaClick","dispatch","document","timestamp","extension","getDocumentExtension","isIntersecting","useIsIntersecting","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","isLoaded","hasPreview","getDocumentHasPreview","getMessageMediaThumbDataUri","localBlobUrl","previewData","withMediaViewer","mediaType","handleClick","name","thumbnailDataUri","actionIcon","isMessageDocumentVideo","fakeType","elementRef","shouldSpinnerRender","getColorFromExtension","sizeString","getDocumentThumbnailDimensions","alt","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","typingStatus","avatarSize","status","withDots","withUsername","withFullInfo","withUpdatingStatus","withChatType","noRtl","loadFullChat","openMediaViewer","isMin","handleAvatarViewerOpen","hasPhoto","avatarOwnerId","MediaViewerOrigin","key","isVerified","getChatTypeString","handle","groupStatus","chatTypeString","membersCount","getGroupStatus","onlineStatus","renderStatusOrTyping","outgoingStatus","idPrefix","isProtected","mediaBlobUrl","getMessageVideo","getMessageHtmlId","decoding","onContextMenu","stopEvent","isGif","Keys","activeKey","DEFAULT_TEXT","FOCUS_DELAY_TIMEOUT_MS","isLoading","isPasswordVisible","error","hint","placeholder","submitLabel","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","inputRef","password","setPassword","canSubmit","setCanSubmit","useTimeout","IS_TOUCH_ENV","focus","requestAnimationFrame","select","action","event","preventDefault","autoComplete","type","tabIndex","onChange","target","MIN_PASSWORD_LENGTH","maxLength","role","disabled","itemIds","selectedIds","filterValue","filterPlaceholder","notFoundText","searchInputId","noScrollRestore","onSelectedIdsChange","onFilterChange","onLoadMore","shouldMinimize","setTimeout","handleItemClick","newSelectedIds","includes","splice","indexOf","handleFilterChange","currentTarget","viewportIds","getMore","useInfiniteScroll","isMinimized","canClose","clickArg","items","iconElement","titleText","serverTimeOffset","userStatus","selectUserStatus","noStatusOrTyping","fullName","getUserFullName","isUserOnline","getUserStatus","photo","isFirstPhoto","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","getMediaHash","forceAvatar","hash","getChatAvatarHash","photoBlobUrl","avatarMediaHash","avatarBlobUrl","imageSrc","userFullName","getFirstLetters","Spinner","getUserColorKey","connectionState","animationLevel","settings","byKey","photos","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","profile","currentIndex","slice","mediaLoader","usePhotosPreload","handleProfilePhotoClick","profilePhotoIndex","selectPreviousMedia","selectNextMedia","element","querySelector","selectorToPreventScroll","onSwipe","direction","SwipeDirection","isVerifiedIconShown","_","renderPhotoTabs","Transition","renderPhoto","VerifiedIcon","FakeIcon","reaction","staticIconId","getGlobal","availableReactions","find","staticIcon","subject","messageIds","reportMessages","reportPeer","reportProfilePhoto","exitMessageSelectMode","selectedReason","setSelectedReason","setDescription","handleReport","reason","handleSelectReason","handleDescriptionChange","REPORT_OPTIONS","onEnter","options","selected","noAnimate","noContextMenu","canViewSet","onFaveClick","onUnfaveClick","onRemoveRecentClick","openStickerSet","stickerSelector","shouldPlay","lottieData","isLottie","isLottieLoaded","markLoaded","unmarkLoaded","canLottiePlay","isVideo","IS_WEBM_SUPPORTED","videoBlobUrl","canVideoPlay","previewTransitionClassNames","isContextMenuOpen","contextMenuPosition","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","getTriggerElement","getRootElement","closest","getMenuElement","positionX","positionY","transformOriginX","transformOriginY","menuStyle","useContextMenuPosition","safePlay","pause","handleRemoveClick","handleContextRemoveRecent","handleContextUnfave","handleContextFave","handleSendQuiet","handleSendScheduled","handleOpenSet","shouldShowCloseButton","emoji","onMouseDown","preventMessageInputBlurWithBubbling","autoPlay","loop","playsInline","muted","play","isLowPriority","autoClose","StickerSetModal","useModuleLoader","Bundles","typingUser","typingUserName","replace","trim","VERIFIED_ICON","__html","dangerouslySetInnerHTML","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","url","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","handleMessageClick","displayUrl","truncatedDescription","trimText","MEDIA_VIEWER_MEDIA_QUERY","REM","parseInt","getComputedStyle","documentElement","fontSize","ROUND_VIDEO_DIMENSIONS_PX","AVATAR_FULL_DIMENSIONS","LIKE_STICKER_ID","DEFAULT_MEDIA_DIMENSIONS","cachedMaxWidthOwn","cachedMaxWidth","cachedMaxWidthNoAvatar","getAvailableWidth","fromOwnMessage","isForwarded","isWebPagePhoto","noAvatars","extraPaddingRem","availableWidthRem","regularMaxWidth","windowWidth","windowSize","getMaxMessageWidthRem","calculateDimensionsForMessageMedia","aspectRatio","availableWidth","availableHeight","getAvailableHeight","mediaWidth","calculateDimensions","getMediaViewerAvailableDimensions","withFooter","mql","window","matchMedia","windowHeight","occupiedHeightRem","matches","calculateInlineImageDimensions","getPhotoInlineDimensions","calculateVideoDimensions","getVideoDimensions","getPictogramDimensions","getStickerDimensions","baseWidth","STICKER_SIZE_INLINE_MOBILE_FACTOR","STICKER_SIZE_INLINE_DESKTOP_FACTOR","calculatedHeight","calculateMediaViewerDimensions","mediaHeight","calculatedWidth","ChatFolderModal","ChatAnimationTypes","isPinned","isShown","unreadCount","unreadMentionsCount","hasUnreadMark","unreadReactionsCount","isUnread","ShowTransition","isCustom","unreadReactionsElement","unreadMentionsElement","unreadCountElement","formatIntegerCompact","elements","filter","renderContent","isActive","lastMessage","senderId","replyToMessageId","isOutgoing","lastMessageSender","lastMessageAction","getMessageAction","actionTargetMessage","selectChatMessage","targetUserIds","actionTargetUserIds","targetChatId","actionTargetChatId","privateChatUserId","currentChatId","threadId","currentThreadId","messageListType","selectCurrentMessageList","MAIN_THREAD_ID","draft","selectDraft","canScrollDown","canChangeFolder","chatFolders","orderedIds","lastMessageOutgoingStatus","selectOutgoingStatus","folderId","orderDiff","animationType","openChat","focusLastMessage","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","isReportModalOpen","openReportModal","closeReportModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderReportModal","markRenderReportModal","unmarkRenderReportModal","isAction","isActionMessage","useEnsureMessage","mediaThumbnail","getMessageSticker","isRoundVideo","getMessageRoundVideo","actionTargetUsers","usersById","users","byId","Opacity","opacity","fastRaf","classList","add","Move","transform","remove","ANIMATION_END_DELAY","shouldReplaceHistory","handleDelete","handleChatFolderChange","contextActions","useChatContextActions","ListItem","Avatar","isCallActive","isCallNotEmpty","LastMessageMeta","TypingStatus","isChat","renderActionMessageText","asTextWithSpoilers","senderName","getMessageSenderName","blobUrl","renderSummary","renderLastMessageOrTyping","DeleteChatModal","ReportModal","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","foldersDispatch","onScreenSelect","handleEditFolder","payload","SettingsScreens","AnimatedIconFromSticker","fluid","pill","openNextChat","resolvedFolderId","ALL_FOLDER_ID","ARCHIVED_FOLDER_ID","useFolderManagerForOrderedIds","orderById","reduce","acc","prevOrderById","usePrevious","orderDiffById","mapValues","order","CHAT_LIST_SLICE","useHotkeys","targetIndexDelta","IS_PWA","addEventListener","handleKeyDown","removeEventListener","IS_MAC_OS","metaKey","ctrlKey","code","startsWith","digit","match","position","Number","getAnimationType","orderDiffs","Object","values","numberOfUp","diff","numberOfDown","None","Infinity","useChatAnimationType","InfiniteScroll","preloadBackwards","withAbsolutePositioning","maxHeight","CHAT_HEIGHT_PX","viewportOffset","pinnedCount","getPinnedChatsCount","teactOrderKey","getOrderKey","renderChats","Loading","getSenderName","chatsById","getSenderTitle","isChatGroup","CustomSend","isQuick","onFileSelect","isHovered","markHovered","unmarkHovered","onDrop","onDragEnter","onDragLeave","relatedTarget","toTarget","DropAreaState","withQuick","onHide","hideTimeoutRef","prevWithQuick","captureEscKeyListener","handleFilesDrop","async","dataTransfer","dt","files","folderFiles","getFilesFromDataTransferItems","concat","from","handleQuickFilesDrop","handleDragLeave","fromTarget","Portal","containerId","onDragOver","clearTimeout","EmojiTooltip","MAX_INPUT_HEIGHT","messageSendKeyCombo","replyingToId","selectReplyingToId","noTabCapture","pollModal","payment","isPaymentModalOpen","isAttachmentModalInput","editableInputId","html","forcedPlaceholder","canAutoFocus","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","onSend","editLastMessage","replyToNextMessage","cloneRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","sendMessageAction","useSendMessageAction","updateInputHeight","useLayoutEffectWithPrevDeps","prevHtml","innerHTML","focusInput","isHeavyAnimating","focusEditableElement","handleCloseTextFormatter","selection","getSelection","removeAllRanges","empty","clearSelection","checkSelection","IS_IOS","rangeCount","selectionRange","getRangeAt","selectedText","toString","isSelectionInsideInput","EDITABLE_INPUT_ID","parseEmojiOnlyString","START_TO_END","processSelection","selectionRect","inputRect","top","processSelectionWithTimeout","willSend","input","clone","currentHeight","newHeight","scrollHeight","transitionDuration","log","abs","exec","toggle","captureFirstTab","debounce","captureKeyboardListeners","onTab","suppressFocus","blur","contentEditable","textContent","IS_EMOJI_SUPPORTED","onKeyDown","shiftKey","altKey","once","IS_ANDROID","handleCloseContextMenu","e2","KeyboardEvent","onTouchCancel","anchorPosition","TEXT_FORMAT_BY_TAG_NAME","B","STRONG","I","EM","U","DEL","CODE","SPAN","fragmentEl","createElement","containerRef","linkUrlInputRef","isLinkControlOpen","openLinkControl","closeLinkControl","linkUrl","setLinkUrl","isEditingLink","setIsEditingLink","inputClassName","setInputClassName","selectedTextFormats","setSelectedTextFormats","useVirtualBackdrop","selectedFormats","parentElement","commonAncestorContainer","textFormat","tagName","restoreSelection","addRange","updateSelectedRange","getSelectedText","replaceChildren","cloneContents","getSelectedElement","updateInputStyles","offsetWidth","scrollWidth","scrollLeft","getFormatButtonClassName","keys","some","fKey","monospace","strikethrough","handleSpoilerText","spoiler","dataset","entityType","ApiMessageEntityTypes","replaceWith","execCommand","handleBoldText","bold","handleItalicText","italic","handleUnderlineText","underline","handleStrikethroughText","handleMonospaceText","handleLinkUrlConfirm","formattedLinkUrl","ensureProtocol","split","encodeURI","href","handler","k","b","u","m","s","p","toLowerCase","getKeyFromEvent","linkUrlConfirmClassName","inputMode","onScroll","dataTransferItems","traverseFileTreePromise","entry","Promise","resolve","File","isFile","itemFile","getAsFile","file","isDirectory","createReader","readEntries","entries","entriesPromises","all","kind","webkitGetAsEntry","fixMovMime","ext","pop","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","prepareForRegExp","inputId","parentNode","iterations","cache","WeakMap","memoized","fn","cached","get","args","areSortedArraysEqual","lastArgs","lastResult","set","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","prepareRecentEmojisMemo","recentEmojiIds","limit","pickTruthy","MEMO_EMPTY_ARRAY","prepareLibraryMemo","baseEmojiKeywords","emojiKeywords","emojis","byNative","buildCollectionByKey","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","keywords","byName","names","searchInLibraryMemo","library","matched","matchedKeywords","keyword","sort","flat","matchedNames","unique","useEmojiTooltip","isAllowed","htmlRef","onUpdateHtml","isDisabled","markIsOpen","unmarkIsOpen","setById","shouldForceInsertEmoji","setShouldForceInsertEmoji","filteredEmojis","setFilteredEmojis","ensureEmojiData","then","getEmojiCode","forceSend","endsWith","substr","insertEmoji","textEmoji","isForce","currentHtml","atIndex","lastIndexOf","messageInput","EDITABLE_INPUT_CSS_SELECTOR","getElementById","native","isEmojiTooltipOpen","closeEmojiTooltip","default","uncompressEmoji","runThrottled","throttle","cb","RE_USERNAME_SEARCH","useMentionTooltip","canSuggestMembers","groupChatMembers","topInlineBotIds","usersToMention","setUsersToMention","updateFilteredUsers","withInlineBots","memberIds","member","filteredIds","filterUsersByName","usernameFilter","getUsernameFilter","canSuggestInlineBots","insertMention","forceFocus","insertedHtml","isMentionTooltipOpen","closeMentionTooltip","mentionFilteredUsers","useAsyncRendering","dependencies","delay","shouldRenderRef","timeoutRef","forceUpdate","useForceUpdate","useOnChange","loadingOptions","setValues","handleChange","newValues","v","option","subLabel","textParts","confirmLabel","confirmHandler","confirmIsDestructive","isButtonsInOneRow","children","handleSelectWithEnter","index","useKeyboardListNavigation","textPart","buttonClassName","buttonRef","secondaryIcon","destructive","onSecondaryIconClick","isTouched","markIsTouched","unmarkIsTouched","handleSecondaryIconClick","handleMouseDown","DEFAULT_DURATION","onDismiss","setIsOpen","timerRef","closeAndDismiss","handleMouseEnter","handleMouseLeave","onMouseEnter","onMouseLeave","RADIUSES","xl","square","circleRadius","STROKE_WIDTH","borderRadius","circumference","PI","container","svg","firstElementChild","strokeDashOffset","setAttribute","hidden","loadingOption","step","renderValue","mainClassName","trackWidth","parentContainerClassName","focused","spinnerColor","spinnerBackgroundColor","autoFocusSearch","onReset","onFocus","onBlur","onSpinnerClick","isInputFocused","markInputFocused","unmarkInputFocused","useInputFocusOnOpen","backgroundColor","prevIsOpen","prevChildren","fromChildrenRef","noAnimation","onCheck","classNames","badgeCount","isBadgeActive","previousActiveTab","tabRef","tabEl","prevTabEl","platformEl","prevPlatformEl","shiftLeft","offsetLeft","scaleFactor","clientWidth","forceReflow","SCROLL_DURATION","tabs","activeTab","big","onSwitchTab","useHorizontalScroll","activeTabElement","childNodes","activeTabOffsetLeft","activeTabOffsetWidth","newLeft","fastSmoothScrollHorizontal","tab","INCLUDED_CHAT_TYPES","EXCLUDED_CHAT_TYPES","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","state","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","bots","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","useReducer","makeMediaHandlers","controllerRef","mediaHandlers","proxy","requestNextTrack","requestPreviousTrack","stop","closeAudioPlayer","seekbackward","skipTime","seekOffset","currentTime","seekforward","seekTo","seekTime","nexttrack","previoustrack","trackId","originalDuration","trackType","handlers","metadata","onInit","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","setIsPlaying","isPlayingSync","setPlayProgress","register","eventName","setVolume","setPlaybackRate","toggleMuted","registerMediaSession","setPlaybackState","audioPlayer","volume","isFinite","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","playbackRate","setPositionState","paused","updateMetadata","destroy","isSafariPatchInProgress","useEffectWithPrevDeps","prevShouldPlay","prevSrc","playIfPresent","setTime","time","audioProxy","getTimeRanges","ranges","noInitiallyBuffered","setIsBuffered","bufferedProgress","setBufferedProgress","setBufferedRanges","setIsBufferedDebounced","handleBuffering","media","buffered","bufferedLength","readyState","onLoadedData","onPlaying","onLoadStart","onPause","onTimeUpdate","onProgress","useCanvasBlur","withRaf","img","Image","processBlur","alpha","IS_CANVAS_FILTER_SUPPORTED","drawImage","RADIUS","fastBlur","onload","isInSearch","isServiceNotifications","SERVICE_NOTIFICATIONS_USER_ID","toggleChatPinned","toggleChatArchived","toggleChatUnread","actionAddToFolder","actionPin","compact","actionUnreadMark","actionMute","actionArchive","isChatArchived","actionReport","actionDelete","getCanDeleteChat","isInFolder","stopImmediatePropagation","isMenuDisabled","shouldDisableOnLink","shouldDisableOnLongTap","setIsContextMenuOpen","setContextMenuPosition","clientY","timer","clearLongPressTimer","startLongPressTimer","originalEvent","touches","cancelClickOnce","emulateContextMenuEvent","passive","EMPTY_RECT","anchor","getLayout","setPositionX","setPositionY","setTransformOriginX","setTransformOriginY","withScroll","setWithScroll","setStyle","setMenuStyle","triggerEl","anchorX","anchorY","menuEl","rootEl","extraPaddingX","extraTopPadding","marginSides","extraMarginTop","marginTop","menuRect","offsetHeight","rootRect","horizontalPosition","verticalPosition","triggerRect","menuMaxHeight","offsetX","offsetY","messageId","replyOriginForId","loadMessage","loadMessageThrottled","throttled","addOrderedIdsCallback","getOrderedIds","useFolderManagerForUnreadCounters","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","handleScroll","deltaX","deltaY","IGNORE_TAGS","Set","createCallbackManager","hotkeys","addCallback","HTMLElement","has","shouldFireEvent","hotkey","ctrl","meta","mod","shift","pressedKey","isExactHotkey","part","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","runCallbacks","useIntersectionObserver","rootCallback","rootRef","throttleMs","debounceMs","shouldSkipFirst","margin","threshold","rootCallbackRef","freezeFlagsRef","onUnfreezeRef","freeze","unfreeze","useHeavyAnimationCheck","observer","disconnect","callbacks","clear","observe","targetCallback","Map","entriesAccumulator","observerCallbackSync","callback","scheduler","observerCallback","IntersectionObserver","root","rootMargin","initController","controller","delete","unobserve","useOnIntersect","targetRef","setIsIntersecting","debugKey","prevDeps","store","idRef","generateIdFor","mediaHash","mediaFormat","cacheBuster","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","useUniqueId","setLoadProgress","startedAtRef","handleProgress","Date","now","spentTime","closeTimeout","useMouseInside","menuCloseTimeout","isMouseInside","markMouseInside","usePrevDuringAnimation","prev","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","setState","currentState","useRunDebounced","ms","noFirst","noLast","useDebouncedCallback","CalendarModal","canScheduleUntilOnline","onCancel","onScheduled","setOnScheduled","handleMessageSchedule","isWhenOnline","scheduledAt","getTime","handleMessageScheduleUntilOnline","SCHEDULED_WHEN_ONLINE","handleCloseCalendar","requestCalendar","whenScheduled","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onSecondButtonClick","SEND_MESSAGE_ACTION_INTERVAL","useStateRef","savedCallback","useVideoCleanup","videoRef","videoEl","load","mul_table","shg_table","boxBlurCanvasRGB","context","top_x","top_y","isNaN","imageData","getImageData","pixels","rsum","gsum","bsum","p1","p2","yp","yi","yw","wm","hm","rad1","r","g","mul_sum","shg_sum","vmin","vmax","putImageData","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","openAudioPlayer","parseMessageKey","splitTrackId","messageKey","nextTrack","stopCurrentAudio","track","Audio","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","preload","IS_SAFARI","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","openedChatId","queueFilter","cleanUpQueue","fastSeek","rate","shouldRemoveFromQueue","h","trackIdFilter","el","removeFromQueue","getTrackQueue","currentId","queue","chatAudio","getMessageKey","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","IOS_SCREEN_EDGE_THRESHOLD","getDistance","a","hypot","pageX","pageY","getTouchCenter","lastClickTime","captureEvent","initialSwipeAxis","hasMoved","hasSwiped","isZooming","initialDistance","wheelZoom","initialZoom","initialDragOffset","isDragCanceled","initialTouchCenter","innerWidth","innerHeight","minZoom","maxZoom","excludedClosestSelector","withNativeDrag","onMove","withCursor","body","querySelectorAll","scrollable","overflow","onDoubleClick","centerX","centerY","clamp","onZoom","endDistance","touchCenter","dragOffsetX","dragOffsetY","zoomFactor","initialCenterX","initialCenterY","currentCenterX","currentCenterY","shouldPreventScroll","xAbs","yAbs","axis","currentSwipeAxis","Left","Right","Up","Down","processSwipe","releaseWheel","onWheel","doubleTapZoom","is","metaKeyPressed","delta","zoom","sign","dx","dy","isNotPassive","cycleRestrict","isAnimating","fastSmoothScroll","maxDistance","FAST_SMOOTH_MAX_DISTANCE","forceDirection","forceDuration","forceNormalContainerHeight","scrollFrom","calculateScrollFrom","FocusDirection","ANIMATION_LEVEL_MIN","scrollWithJs","isAnimatingScroll","offsetTop","elementTop","scrollTop","offset","elementHeight","currentScrollTop","containerHeight","targetContainerHeight","normalHeight","path","remainingPath","absPath","transition","FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","FAST_SMOOTH_MIN_DURATION","FAST_SMOOTH_MAX_DURATION","startAt","onHeavyAnimationStop","dispatchHeavyAnimationEvent","animateSingle","t","currentPath","getAttribute","containerWidth","animate","force","forcePlaceCaretAtEnd","activeElement","range","createRange","lastChild","nodeValue","selectNodeContents","collapse","getMessageIdsForSelectedText","selectedFragments","childElementCount","node","nodeType","contains","messageEl","firstChild","removeChild","isElementInViewport","display","rect","num","isBetween","decimals","DEFAULT_HANDLERS","mediaSession","navigator","setMediaSessionHandlers","console","warn","setActionHandler","err","clearMediaSession","playbackState","buildMediaMetadata","artist","album","artwork","MediaMetadata","ENTITY_CLASS_BY_NODE_NAME","S","STRIKE","PRE","BLOCKQUOTE","parseMessageInput","withMarkdownLinks","fragment","parseMarkdown","parseMarkdownLinks","innerText","textIndex","recursionDeepness","entities","addEntity","getEntityDataFromNode","hasChildNodes","parsedHtml","RegExp","RE_LINK_TEMPLATE","rawText","nodeName","getEntityTypeFromNode","rawIndex","substring","language","audioEl","patchedForSafari","patchForSafariInProgress","fileSelector","openSystemFilesDialog","accept","noMultiple","removeAttribute","onchange","click","extractCurrentThemeParams","getPropertyWrapped","textColor","buttonColor","buttonTextColor","linkColor","bg_color","text_color","hint_color","link_color","button_color","button_text_color","validateHexColor","test","property","getPropertyValue","n","parseFloat","padStart"],"sourceRoot":""}