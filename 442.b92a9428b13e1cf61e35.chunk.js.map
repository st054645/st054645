{"version":3,"file":"442.b92a9428b13e1cf61e35.chunk.js","mappings":"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","sources":["webpack://tweb/./src/components/monkeys/password.ts","webpack://tweb/./src/components/passwordInputField.ts","webpack://tweb/./src/helpers/dom/htmlToSpan.ts","webpack://tweb/./src/helpers/dom/toggleDisability.ts","webpack://tweb/./src/pages/loginPage.ts","webpack://tweb/./src/pages/pagePassword.ts"],"sourcesContent":["/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport lottieLoader, { LottieLoader } from \"../../lib/rlottie/lottieLoader\";\r\nimport RLottiePlayer from \"../../lib/rlottie/rlottiePlayer\";\r\nimport PasswordInputField from \"../passwordInputField\";\r\n\r\nexport default class PasswordMonkey {\r\n  public container: HTMLElement;\r\n  public animation: RLottiePlayer;\r\n  public needFrame = 0;\r\n  protected loadPromise: ReturnType<LottieLoader['waitForFirstFrame']>;\r\n\r\n  constructor(protected passwordInputField: PasswordInputField, protected size: number) {\r\n    this.container = document.createElement('div');\r\n    this.container.classList.add('media-sticker-wrapper');\r\n  }\r\n\r\n  public load() {\r\n    if(this.loadPromise) return this.loadPromise;\r\n    return this.loadPromise = lottieLoader.loadAnimationAsAsset({\r\n      container: this.container,\r\n      loop: false,\r\n      autoplay: false,\r\n      width: this.size,\r\n      height: this.size,\r\n      noCache: true\r\n    //}, 'assets/img/TwoFactorSetupMonkeyClose.tgs').then((_animation) => {\r\n    }, 'TwoFactorSetupMonkeyPeek').then((_animation) => {\r\n      //return;\r\n      this.animation = _animation;\r\n      this.animation.addEventListener('enterFrame', currentFrame => {\r\n        //console.log('enterFrame', currentFrame, this.needFrame);\r\n\r\n        if((this.animation.direction === 1 && currentFrame >= this.needFrame) ||\r\n          (this.animation.direction === -1 && currentFrame <= this.needFrame)) {\r\n            this.animation.setSpeed(1);\r\n            this.animation.pause();\r\n        } \r\n      });\r\n\r\n      this.passwordInputField.onVisibilityClickAdditional = () => {\r\n        if(this.passwordInputField.passwordVisible) {\r\n          this.animation.setDirection(1);\r\n          this.animation.curFrame = 0;\r\n          this.needFrame = 16;\r\n          this.animation.play();\r\n        } else {\r\n          this.animation.setDirection(-1);\r\n          this.animation.curFrame = 16;\r\n          this.needFrame = 0;\r\n          this.animation.play();\r\n        }\r\n      };\r\n\r\n      return lottieLoader.waitForFirstFrame(_animation);\r\n    });\r\n  }\r\n\r\n  public remove() {\r\n    if(this.animation) {\r\n      this.animation.remove();\r\n    }\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n// import { IS_MOBILE_SAFARI, IS_SAFARI } from \"../environment/userAgent\";\r\nimport cancelEvent from \"../helpers/dom/cancelEvent\";\r\nimport InputField, { InputFieldOptions } from \"./inputField\";\r\n\r\nexport default class PasswordInputField extends InputField {\r\n  public passwordVisible = false;\r\n  public toggleVisible: HTMLElement;\r\n  public onVisibilityClickAdditional: () => void;\r\n\r\n  constructor(options: InputFieldOptions = {}) {\r\n    super({\r\n      plainText: true,\r\n      ...options\r\n    });\r\n\r\n    const input = this.input as HTMLInputElement;\r\n    input.type = 'password';\r\n    input.setAttribute('required', '');\r\n    input.name = 'notsearch_password';\r\n    input.autocomplete = 'off';\r\n\r\n    /* if(IS_SAFARI && !IS_MOBILE_SAFARI) {\r\n      input.setAttribute('readonly', '');\r\n      input.addEventListener('focus', () => {\r\n        input.removeAttribute('readonly');\r\n      }, {once: true});\r\n    } */\r\n\r\n    // * https://stackoverflow.com/a/35949954/6758968\r\n    const stealthy = document.createElement('input');\r\n    stealthy.classList.add('stealthy');\r\n    stealthy.tabIndex = -1;\r\n    stealthy.type = 'password';\r\n    input.parentElement.prepend(stealthy);\r\n    input.parentElement.insertBefore(stealthy.cloneNode(), input.nextSibling);\r\n\r\n    const toggleVisible = this.toggleVisible = document.createElement('span');\r\n    toggleVisible.classList.add('toggle-visible', 'tgico');\r\n\r\n    this.container.classList.add('input-field-password');\r\n    this.container.append(toggleVisible);\r\n\r\n    toggleVisible.addEventListener('click', this.onVisibilityClick);\r\n    toggleVisible.addEventListener('touchend', this.onVisibilityClick);\r\n  }\r\n\r\n  public onVisibilityClick = (e: Event) => {\r\n    cancelEvent(e);\r\n    this.passwordVisible = !this.passwordVisible;\r\n\r\n    this.toggleVisible.classList.toggle('eye-hidden', this.passwordVisible);\r\n    (this.input as HTMLInputElement).type = this.passwordVisible ? 'text' : 'password';\r\n    this.onVisibilityClickAdditional && this.onVisibilityClickAdditional();\r\n  };\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function htmlToSpan(html: string | DocumentFragment) {\r\n  const span = document.createElement('span');\r\n  if(typeof(html) === 'string') span.innerHTML = html;\r\n  else span.append(html);\r\n  return span;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function toggleDisability(elements: HTMLElement[], disable: boolean): () => void {\r\n  if(disable) {\r\n    elements.forEach((el) => el.setAttribute('disabled', 'true'));\r\n  } else {\r\n    elements.forEach((el) => el.removeAttribute('disabled'));\r\n  }\r\n\r\n  return () => toggleDisability(elements, !disable);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { LangPackKey, i18n } from \"../lib/langPack\";\r\n\r\nexport default class LoginPage {\r\n  public element: HTMLElement;\r\n  public container: HTMLElement;\r\n  public imageDiv: HTMLElement;\r\n  public inputWrapper: HTMLElement;\r\n  public title: HTMLElement;\r\n  public subtitle: HTMLParagraphElement;\r\n\r\n  constructor(options: {\r\n    className: string,\r\n    withInputWrapper?: boolean,\r\n    titleLangKey?: LangPackKey,\r\n    subtitleLangKey?: LangPackKey,\r\n  }) {\r\n    this.element = document.body.querySelector('.' + options.className) as HTMLDivElement;\r\n    //this.element = document.createElement('div');\r\n    //this.element.className = 'page-' + options.className;\r\n\r\n    this.container = document.createElement('div');\r\n    this.container.className = 'container center-align';\r\n\r\n    this.imageDiv = document.createElement('div');\r\n    this.imageDiv.className = 'auth-image';\r\n\r\n    this.title = document.createElement('h4');\r\n    if(options.titleLangKey) {\r\n      this.title.append(i18n(options.titleLangKey));\r\n    }\r\n\r\n    this.subtitle = document.createElement('p');\r\n    this.subtitle.className = 'subtitle';\r\n    if(options.subtitleLangKey) {\r\n      this.subtitle.append(i18n(options.subtitleLangKey));\r\n    }\r\n    \r\n    this.container.append(this.imageDiv, this.title, this.subtitle);\r\n\r\n    if(options.withInputWrapper) {\r\n      this.inputWrapper = document.createElement('div');\r\n      this.inputWrapper.className = 'input-wrapper';\r\n      this.container.append(this.inputWrapper);\r\n    }\r\n\r\n    this.element.append(this.container);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { putPreloader } from '../components/putPreloader';\r\nimport mediaSizes from '../helpers/mediaSizes';\r\nimport { AccountPassword } from '../layer';\r\nimport Page from './page';\r\nimport Button from '../components/button';\r\nimport PasswordInputField from '../components/passwordInputField';\r\nimport PasswordMonkey from '../components/monkeys/password';\r\nimport I18n from '../lib/langPack';\r\nimport LoginPage from './loginPage';\r\nimport cancelEvent from '../helpers/dom/cancelEvent';\r\nimport { attachClickEvent } from '../helpers/dom/clickEvent';\r\nimport htmlToSpan from '../helpers/dom/htmlToSpan';\r\nimport replaceContent from '../helpers/dom/replaceContent';\r\nimport toggleDisability from '../helpers/dom/toggleDisability';\r\nimport wrapEmojiText from '../lib/richTextProcessor/wrapEmojiText';\r\nimport rootScope from '../lib/rootScope';\r\n\r\nconst TEST = false;\r\nlet passwordInput: HTMLInputElement;\r\n\r\nlet onFirstMount = (): Promise<any> => {\r\n  const page = new LoginPage({\r\n    className: 'page-password',\r\n    withInputWrapper: true,\r\n    titleLangKey: 'Login.Password.Title',\r\n    subtitleLangKey: 'Login.Password.Subtitle'\r\n  });\r\n\r\n  const btnNext = Button('btn-primary btn-color-primary');\r\n  const btnNextI18n = new I18n.IntlElement({key: 'Login.Next'});\r\n\r\n  btnNext.append(btnNextI18n.element);\r\n\r\n  const passwordInputField = new PasswordInputField({\r\n    label: 'LoginPassword',\r\n    name: 'password'\r\n  });\r\n\r\n  passwordInput = passwordInputField.input as HTMLInputElement;\r\n\r\n  page.inputWrapper.append(passwordInputField.container, btnNext);\r\n\r\n  let getStateInterval: number;\r\n\r\n  let getState = () => {\r\n    // * just to check session relevance\r\n    if(!getStateInterval) {\r\n      getStateInterval = window.setInterval(getState, 10e3);\r\n    }\r\n\r\n    return !TEST && rootScope.managers.passwordManager.getState().then((_state) => {\r\n      state = _state;\r\n\r\n      if(state.hint) {\r\n        replaceContent(passwordInputField.label, htmlToSpan(wrapEmojiText(state.hint)));\r\n      } else {\r\n        passwordInputField.setLabel();\r\n      }\r\n    });\r\n  };\r\n\r\n  let state: AccountPassword;\r\n  \r\n  const onSubmit = (e?: Event) => {\r\n    if(e) {\r\n      cancelEvent(e);\r\n    }\r\n\r\n    if(!passwordInput.value.length) {\r\n      passwordInput.classList.add('error');\r\n      return;\r\n    }\r\n\r\n    const toggle = toggleDisability([passwordInput, btnNext], true);\r\n    let value = passwordInput.value;\r\n\r\n    btnNextI18n.update({key: 'PleaseWait'});\r\n    const preloader = putPreloader(btnNext);\r\n\r\n    passwordInputField.setValueSilently('' + Math.random()); // prevent saving suggestion\r\n    passwordInputField.setValueSilently(value); // prevent saving suggestion\r\n\r\n    rootScope.managers.passwordManager.check(value, state).then((response) => {\r\n      //console.log('passwordManager response:', response);\r\n        \r\n      switch(response._) {\r\n        case 'auth.authorization':\r\n          clearInterval(getStateInterval);\r\n          import('./pageIm').then((m) => {\r\n            m.default.mount();\r\n          });\r\n          if(monkey) monkey.remove();\r\n          break;\r\n        default:\r\n          btnNext.removeAttribute('disabled');\r\n          btnNextI18n.update({key: response._ as any});\r\n          preloader.remove();\r\n          break;\r\n      }\r\n    }).catch((err: any) => {\r\n      toggle();\r\n      passwordInputField.input.classList.add('error');\r\n      \r\n      switch(err.type) {\r\n        default:\r\n          //btnNext.innerText = err.type;\r\n          btnNextI18n.update({key: 'PASSWORD_HASH_INVALID'});\r\n          passwordInput.select();\r\n          break;\r\n      }\r\n\r\n      preloader.remove();\r\n  \r\n      getState();\r\n    });\r\n  };\r\n  \r\n  attachClickEvent(btnNext, onSubmit);\r\n\r\n  passwordInput.addEventListener('keypress', function(this, e) {\r\n    this.classList.remove('error');\r\n    btnNextI18n.update({key: 'Login.Next'});\r\n\r\n    if(e.key === 'Enter') {\r\n      return onSubmit();\r\n    }\r\n  });\r\n\r\n  const size = mediaSizes.isMobile ? 100 : 166;\r\n  const monkey = new PasswordMonkey(passwordInputField, size);\r\n  page.imageDiv.append(monkey.container);\r\n  return Promise.all([\r\n    monkey.load(),\r\n    getState()\r\n  ]);\r\n};\r\n\r\nconst page = new Page('page-password', true, onFirstMount, null, () => {\r\n  //if(!isAppleMobile) {\r\n    passwordInput.focus();\r\n  //}\r\n\r\n  rootScope.managers.appStateManager.pushToState('authState', {_: 'authStatePassword'});\r\n});\r\n\r\nexport default page;\r\n"],"names":["PasswordMonkey","constructor","passwordInputField","size","needFrame","this","container","document","createElement","classList","add","load","loadPromise","loop","autoplay","width","height","noCache","then","_animation","animation","addEventListener","currentFrame","direction","setSpeed","pause","onVisibilityClickAdditional","passwordVisible","setDirection","curFrame","play","remove","PasswordInputField","options","super","plainText","onVisibilityClick","e","toggleVisible","toggle","input","type","setAttribute","name","autocomplete","stealthy","tabIndex","parentElement","prepend","insertBefore","cloneNode","nextSibling","append","htmlToSpan","html","span","innerHTML","toggleDisability","elements","disable","forEach","el","removeAttribute","LoginPage","element","body","querySelector","className","imageDiv","title","titleLangKey","subtitle","subtitleLangKey","withInputWrapper","inputWrapper","passwordInput","page","btnNext","btnNextI18n","key","label","getStateInterval","state","getState","window","setInterval","_state","hint","setLabel","onSubmit","value","length","update","preloader","setValueSilently","Math","random","response","_","clearInterval","m","default","mount","monkey","catch","err","select","Promise","all","focus"],"sourceRoot":""}