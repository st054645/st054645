{"version":3,"file":"445.bacab5e339bac3247ae1.chunk.js","mappings":"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","sources":["webpack://tweb/./src/components/checkboxField.ts","webpack://tweb/./src/components/scrollable.ts","webpack://tweb/./src/components/telInputField.ts","webpack://tweb/./src/helpers/dom/findUpTag.ts","webpack://tweb/./src/helpers/dom/placeCaretAtEnd.ts","webpack://tweb/./src/helpers/dom/toggleDisability.ts","webpack://tweb/./src/helpers/formatPhoneNumber.ts","webpack://tweb/./src/helpers/object/getDeepProperty.ts"],"sourcesContent":["/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport ripple from \"./ripple\";\r\nimport { LangPackKey, _i18n } from \"../lib/langPack\";\r\nimport getDeepProperty from \"../helpers/object/getDeepProperty\";\r\nimport rootScope from \"../lib/rootScope\";\r\nimport apiManagerProxy from \"../lib/mtproto/mtprotoworker\";\r\n\r\nexport type CheckboxFieldOptions = {\r\n  text?: LangPackKey,\r\n  textArgs?: any[],\r\n  name?: string, \r\n  round?: boolean, \r\n  toggle?: boolean,\r\n  stateKey?: string,\r\n  stateValues?: any[],\r\n  disabled?: boolean,\r\n  checked?: boolean,\r\n  restriction?: boolean,\r\n  withRipple?: boolean,\r\n  withHover?: boolean,\r\n};\r\nexport default class CheckboxField {\r\n  public input: HTMLInputElement;\r\n  public label: HTMLLabelElement;\r\n  public span: HTMLSpanElement;\r\n\r\n  constructor(options: CheckboxFieldOptions = {}) {\r\n    const label = this.label = document.createElement('label');\r\n    label.classList.add('checkbox-field');\r\n\r\n    if(options.restriction) {\r\n      label.classList.add('checkbox-field-restriction');\r\n    }\r\n\r\n    if(options.round) {\r\n      label.classList.add('checkbox-field-round');\r\n    }\r\n\r\n    if(options.disabled) {\r\n      this.toggleDisability(true);\r\n    }\r\n\r\n    const input = this.input = document.createElement('input');\r\n    input.classList.add('checkbox-field-input');\r\n    input.type = 'checkbox';\r\n    if(options.name) {\r\n      input.id = 'input-' + options.name;\r\n    }\r\n\r\n    if(options.checked) {\r\n      input.checked = true;\r\n    }\r\n\r\n    if(options.stateKey) {\r\n      apiManagerProxy.getState().then((state) => {\r\n        const stateValue = getDeepProperty(state, options.stateKey);\r\n        let checked: boolean;\r\n        if(options.stateValues) {\r\n          checked = options.stateValues.indexOf(stateValue) === 1;\r\n        } else {\r\n          checked = stateValue;\r\n        }\r\n\r\n        this.setValueSilently(checked);\r\n\r\n        input.addEventListener('change', () => {\r\n          let value: any;\r\n          if(options.stateValues) {\r\n            value = options.stateValues[input.checked ? 1 : 0];\r\n          } else {\r\n            value = input.checked;\r\n          }\r\n\r\n          rootScope.managers.appStateManager.setByKey(options.stateKey, value);\r\n        });\r\n      });\r\n    }\r\n\r\n    let span: HTMLSpanElement;\r\n    if(options.text) {\r\n      span = this.span = document.createElement('span');\r\n      span.classList.add('checkbox-caption');\r\n      _i18n(span, options.text, options.textArgs);\r\n    } else {\r\n      label.classList.add('checkbox-without-caption');\r\n    }\r\n\r\n    label.append(input);\r\n\r\n    if(options.toggle) {\r\n      label.classList.add('checkbox-field-toggle');\r\n\r\n      const toggle = document.createElement('div');\r\n      toggle.classList.add('checkbox-toggle');\r\n      label.append(toggle);\r\n    } else {\r\n      const box = document.createElement('div');\r\n      box.classList.add('checkbox-box');\r\n  \r\n      const checkSvg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n      checkSvg.classList.add('checkbox-box-check');\r\n      checkSvg.setAttributeNS(null, 'viewBox', '0 0 24 24');\r\n      const use = document.createElementNS(\"http://www.w3.org/2000/svg\", \"use\");\r\n      use.setAttributeNS(null, 'href', '#check');\r\n      use.setAttributeNS(null, 'x', '-1');\r\n      checkSvg.append(use);\r\n  \r\n      const bg = document.createElement('div');\r\n      bg.classList.add('checkbox-box-background');\r\n  \r\n      const border = document.createElement('div');\r\n      border.classList.add('checkbox-box-border');\r\n  \r\n      box.append(border, bg, checkSvg);\r\n  \r\n      label.append(box);\r\n    }\r\n\r\n    if(span) {\r\n      label.append(span);\r\n    }\r\n\r\n    if(options.withRipple) {\r\n      label.classList.add('checkbox-ripple', 'hover-effect');\r\n      ripple(label, undefined, undefined, true);\r\n      //label.prepend(input);\r\n    } else if(options.withHover) {\r\n      label.classList.add('hover-effect');\r\n    }\r\n  }\r\n\r\n  get checked() {\r\n    return this.input.checked;\r\n  }\r\n\r\n  set checked(checked: boolean) {\r\n    /* if(this.checked === checked) {\r\n      return;\r\n    } */\r\n    \r\n    this.setValueSilently(checked);\r\n\r\n    const event = new Event('change', {bubbles: true, cancelable: true});\r\n    this.input.dispatchEvent(event);\r\n  }\r\n\r\n  public setValueSilently(checked: boolean) {\r\n    this.input.checked = checked;\r\n  }\r\n\r\n  public toggleDisability(disable: boolean) {\r\n    this.label.classList.toggle('checkbox-disabled', disable);\r\n    return () => this.toggleDisability(!disable);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport IS_TOUCH_SUPPORTED from \"../environment/touchSupport\";\r\nimport { logger, LogTypes } from \"../lib/logger\";\r\nimport fastSmoothScroll, { ScrollOptions } from \"../helpers/fastSmoothScroll\";\r\nimport useHeavyAnimationCheck from \"../hooks/useHeavyAnimationCheck\";\r\nimport cancelEvent from \"../helpers/dom/cancelEvent\";\r\n/*\r\nvar el = $0;\r\nvar height = 0;\r\nvar checkUp = false;\r\n\r\ndo {\r\n  height += el.scrollHeight;\r\n} while(el = (checkUp ? el.previousElementSibling : el.nextElementSibling));\r\nconsole.log(height);\r\n*/\r\n\r\n/*\r\nArray.from($0.querySelectorAll('.bubble-content')).forEach((_el) => {\r\n\t//_el.style.display = '';\t\r\n\t//return;\r\n\r\n\tlet el = _el.parentElement;\r\n\tlet height = el.scrollHeight;\r\n\tlet width = el.scrollWidth;\r\n\tel.style.width = width + 'px';\r\n\tel.style.height = height + 'px';\r\n\t_el.style.display = 'none';\r\n});\r\n*/\r\n\r\n/* const scrollables: Map<HTMLElement, Scrollable> = new Map();\r\nconst scrollsIntersector = new IntersectionObserver((entries) => {\r\n  for(let entry of entries) {\r\n    const scrollable = scrollables.get(entry.target as HTMLElement);\r\n\r\n    if(entry.isIntersecting) {\r\n      scrollable.isVisible = true;\r\n    } else {\r\n      scrollable.isVisible = false;\r\n\r\n      if(!isInDOM(entry.target)) {\r\n        scrollsIntersector.unobserve(scrollable.container);\r\n        scrollables.delete(scrollable.container);\r\n      }\r\n    }\r\n  }\r\n}); */\r\n\r\nexport class ScrollableBase {\r\n  protected log: ReturnType<typeof logger>;\r\n\r\n  public splitUp: HTMLElement;\r\n  public onScrollMeasure: number = 0;\r\n\r\n  public lastScrollPosition: number = 0;\r\n  public lastScrollDirection: number = 0;\r\n\r\n  public onAdditionalScroll: () => void;\r\n  public onScrolledTop: () => void;\r\n  public onScrolledBottom: () => void;\r\n\r\n  public isHeavyAnimationInProgress = false;\r\n  protected needCheckAfterAnimation = false;\r\n\r\n  public checkForTriggers?: () => void;\r\n\r\n  public scrollProperty: 'scrollTop' | 'scrollLeft';\r\n  \r\n  protected removeHeavyAnimationListener: () => void;\r\n  protected addedScrollListener: boolean;\r\n\r\n  constructor(public el: HTMLElement, logPrefix = '', public container: HTMLElement = document.createElement('div')) {\r\n    this.container.classList.add('scrollable');\r\n\r\n    this.log = logger('SCROLL' + (logPrefix ? '-' + logPrefix : ''), LogTypes.Error);\r\n\r\n    if(el) {\r\n      Array.from(el.children).forEach((c) => this.container.append(c));\r\n\r\n      el.append(this.container);\r\n    }\r\n    //this.onScroll();\r\n  }\r\n\r\n  public addScrollListener() {\r\n    if(this.addedScrollListener) {\r\n      return;\r\n    }\r\n\r\n    this.addedScrollListener = true;\r\n    this.container.addEventListener('scroll', this.onScroll, {passive: true, capture: true});\r\n  }\r\n  \r\n  public removeScrollListener() {\r\n    if(!this.addedScrollListener) {\r\n      return;\r\n    }\r\n\r\n    this.addedScrollListener = false;\r\n    this.container.removeEventListener('scroll', this.onScroll, {capture: true});\r\n  }\r\n\r\n  public setListeners() {\r\n    if(this.removeHeavyAnimationListener) {\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('resize', this.onScroll, {passive: true});\r\n    this.addScrollListener();\r\n\r\n    this.removeHeavyAnimationListener = useHeavyAnimationCheck(() => {\r\n      this.isHeavyAnimationInProgress = true;\r\n\r\n      if(this.onScrollMeasure) {\r\n        this.cancelMeasure();\r\n        this.needCheckAfterAnimation = true;\r\n      }\r\n    }, () => {\r\n      this.isHeavyAnimationInProgress = false;\r\n\r\n      if(this.needCheckAfterAnimation) {\r\n        this.onScroll();\r\n        this.needCheckAfterAnimation = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  public removeListeners() {\r\n    if(!this.removeHeavyAnimationListener) {\r\n      return;\r\n    }\r\n\r\n    window.removeEventListener('resize', this.onScroll);\r\n    this.removeScrollListener();\r\n\r\n    this.removeHeavyAnimationListener();\r\n    this.removeHeavyAnimationListener = undefined;\r\n  }\r\n\r\n  public append(element: HTMLElement) {\r\n    this.container.append(element);\r\n  }\r\n\r\n  public scrollIntoViewNew(options: Omit<ScrollOptions, 'container'>) {\r\n    //return Promise.resolve();\r\n    return fastSmoothScroll({\r\n      ...options,\r\n      container: this.container\r\n    });\r\n  }\r\n\r\n  public onScroll = () => {\r\n    //if(this.debug) {\r\n      //this.log('onScroll call', this.onScrollMeasure);\r\n    //}\r\n\r\n    //return;\r\n\r\n    if(this.isHeavyAnimationInProgress) {\r\n      this.cancelMeasure();\r\n      this.needCheckAfterAnimation = true;\r\n      return;\r\n    }\r\n\r\n    //if(this.onScrollMeasure || ((this.scrollLocked || (!this.onScrolledTop && !this.onScrolledBottom)) && !this.splitUp && !this.onAdditionalScroll)) return;\r\n    if((!this.onScrolledTop && !this.onScrolledBottom) && !this.splitUp && !this.onAdditionalScroll) return;\r\n    if(this.onScrollMeasure) return;\r\n    // if(this.onScrollMeasure) window.cancelAnimationFrame(this.onScrollMeasure);\r\n    this.onScrollMeasure = window.requestAnimationFrame(() => {\r\n      this.onScrollMeasure = 0;\r\n\r\n      const scrollPosition = this.container[this.scrollProperty];\r\n      this.lastScrollDirection = this.lastScrollPosition === scrollPosition ? 0 : (this.lastScrollPosition < scrollPosition ? 1 : -1); // * 1 - bottom, -1 - top\r\n      this.lastScrollPosition = scrollPosition;\r\n\r\n      // lastScrollDirection check is useless here, every callback should decide on its own\r\n      if(this.onAdditionalScroll/*  && this.lastScrollDirection !== 0 */) {\r\n        this.onAdditionalScroll();\r\n      }\r\n      \r\n      if(this.checkForTriggers) {\r\n        this.checkForTriggers();\r\n      }\r\n    });\r\n  };\r\n\r\n  public cancelMeasure() {\r\n    if(this.onScrollMeasure) {\r\n      window.cancelAnimationFrame(this.onScrollMeasure);\r\n      this.onScrollMeasure = 0;\r\n    }\r\n  }\r\n}\r\n\r\nexport type SliceSides = 'top' | 'bottom';\r\nexport type SliceSidesContainer = {[k in SliceSides]: boolean};\r\n\r\nexport default class Scrollable extends ScrollableBase {\r\n  public padding: HTMLElement;\r\n  \r\n  public loadedAll: SliceSidesContainer = {top: true, bottom: false};\r\n\r\n  constructor(el: HTMLElement, logPrefix = '', public onScrollOffset = 300, withPaddingContainer?: boolean) {\r\n    super(el, logPrefix);\r\n\r\n    /* if(withPaddingContainer) {\r\n      this.padding = document.createElement('div');\r\n      this.padding.classList.add('scrollable-padding');\r\n      Array.from(this.container.children).forEach((c) => this.padding.append(c));\r\n      this.container.append(this.padding);\r\n    } */\r\n\r\n    this.container.classList.add('scrollable-y');\r\n    this.setListeners();\r\n    this.scrollProperty = 'scrollTop';\r\n  }\r\n\r\n  public setVirtualContainer(el?: HTMLElement) {\r\n    this.splitUp = el;\r\n    this.log('setVirtualContainer:', el, this);\r\n  }\r\n\r\n  public checkForTriggers = () => {\r\n    if((!this.onScrolledTop && !this.onScrolledBottom)) return;\r\n\r\n    if(this.isHeavyAnimationInProgress) {\r\n      this.onScroll();\r\n      return;\r\n    }\r\n\r\n    const scrollHeight = this.container.scrollHeight;\r\n    if(!scrollHeight) { // незачем вызывать триггеры если блок пустой или не виден\r\n      return;\r\n    }\r\n\r\n    const clientHeight = this.container.clientHeight;\r\n    const maxScrollTop = scrollHeight - clientHeight;\r\n    const scrollTop = this.lastScrollPosition;\r\n\r\n    //this.log('checkForTriggers:', scrollTop, maxScrollTop);\r\n\r\n    if(this.onScrolledTop && scrollTop <= this.onScrollOffset && this.lastScrollDirection <= 0/* && direction === -1 */) {\r\n      this.onScrolledTop();\r\n    }\r\n\r\n    if(this.onScrolledBottom && (maxScrollTop - scrollTop) <= this.onScrollOffset && this.lastScrollDirection >= 0/* && direction === 1 */) {\r\n      this.onScrolledBottom();\r\n    }\r\n  };\r\n\r\n  public prepend(...elements: (HTMLElement | DocumentFragment)[]) {\r\n    (this.splitUp || this.padding || this.container).prepend(...elements);\r\n  }\r\n\r\n  public append(...elements: (HTMLElement | DocumentFragment)[]) {\r\n    (this.splitUp || this.padding || this.container).append(...elements);\r\n  }\r\n\r\n  public getDistanceToEnd() {\r\n    return this.scrollHeight - Math.round(this.scrollTop + this.container.offsetHeight);\r\n  }\r\n\r\n  get isScrolledDown() {\r\n    return this.getDistanceToEnd() <= 1;\r\n  }\r\n\r\n  set scrollTop(y: number) {\r\n    this.container.scrollTop = y;\r\n  }\r\n  \r\n  get scrollTop() {\r\n    //this.log.trace('get scrollTop');\r\n    return this.container.scrollTop;\r\n  }\r\n\r\n  public setScrollTopSilently(value: number) {\r\n    this.lastScrollPosition = value;\r\n    this.ignoreNextScrollEvent();\r\n\r\n    this.scrollTop = value;\r\n  }\r\n\r\n  public ignoreNextScrollEvent() {\r\n    if(this.removeHeavyAnimationListener) {\r\n      this.removeScrollListener();\r\n      this.container.addEventListener('scroll', (e) => {\r\n        cancelEvent(e);\r\n        this.addScrollListener();\r\n      }, {capture: true, passive: false, once: true});\r\n    }\r\n  }\r\n  \r\n  get scrollHeight() {\r\n    return this.container.scrollHeight;\r\n  }\r\n}\r\n\r\nexport class ScrollableX extends ScrollableBase {\r\n  constructor(el: HTMLElement, logPrefix = '', public onScrollOffset = 300, public splitCount = 15, public container: HTMLElement = document.createElement('div')) {\r\n    super(el, logPrefix, container);\r\n\r\n    this.container.classList.add('scrollable-x');\r\n\r\n    if(!IS_TOUCH_SUPPORTED) {\r\n      const scrollHorizontally = (e: any) => {\r\n        if(!e.deltaX && this.container.scrollWidth > this.container.clientWidth) {\r\n          this.container.scrollLeft += e.deltaY / 4;\r\n          cancelEvent(e);\r\n        }\r\n      };\r\n      \r\n      this.container.addEventListener('wheel', scrollHorizontally, {passive: false});\r\n    }\r\n\r\n    this.scrollProperty = 'scrollLeft';\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport placeCaretAtEnd from \"../helpers/dom/placeCaretAtEnd\";\r\nimport { formatPhoneNumber } from \"../helpers/formatPhoneNumber\";\r\nimport { IS_APPLE, IS_ANDROID, IS_APPLE_MOBILE } from \"../environment/userAgent\";\r\nimport { HelpCountry, HelpCountryCode } from \"../layer\";\r\nimport InputField, { InputFieldOptions } from \"./inputField\";\r\n\r\nexport default class TelInputField extends InputField {\r\n  private pasted = false;\r\n  public lastValue = '';\r\n  \r\n  constructor(options: InputFieldOptions & {\r\n    onInput?: (formatted: ReturnType<typeof formatPhoneNumber>) => void\r\n  } = {}) {\r\n    super({\r\n      label: 'Contacts.PhoneNumber.Placeholder',\r\n      //plainText: true,\r\n      name: 'phone',\r\n      ...options\r\n    });\r\n\r\n    this.container.classList.add('input-field-phone');\r\n\r\n    let telEl = this.input;\r\n    if(telEl instanceof HTMLInputElement) {\r\n      telEl.type = 'tel';\r\n      telEl.autocomplete = 'rr55RandomRR55';\r\n    } else {\r\n      telEl.inputMode = 'decimal';\r\n\r\n      const pixelRatio = window.devicePixelRatio;\r\n      if(pixelRatio > 1) {\r\n        let letterSpacing: number;\r\n        if(IS_APPLE) {\r\n          letterSpacing = pixelRatio * -.16;\r\n        } else if(IS_ANDROID) {\r\n          letterSpacing = 0;\r\n        }\r\n\r\n        telEl.style.setProperty('--letter-spacing', letterSpacing + 'px');\r\n      }\r\n\r\n      const originalFunc = this.setValueSilently.bind(this);\r\n      this.setValueSilently = (value) => {\r\n        originalFunc(value);\r\n        placeCaretAtEnd(this.input, true);\r\n      };\r\n    }\r\n\r\n    telEl.addEventListener('input', () => {\r\n      //console.log('input', this.value);\r\n      telEl.classList.remove('error');\r\n  \r\n      const value = this.value;\r\n      const diff = Math.abs(value.length - this.lastValue.length);\r\n      if(diff > 1 && !this.pasted && IS_APPLE_MOBILE) {\r\n        this.setValueSilently(this.lastValue + value);\r\n      }\r\n  \r\n      this.pasted = false;\r\n  \r\n      this.setLabel();\r\n  \r\n      let formattedPhoneNumber: ReturnType<typeof formatPhoneNumber>;\r\n      let formatted: string, country: HelpCountry, countryCode: HelpCountryCode, leftPattern = '';\r\n      if(this.value.replace(/\\++/, '+') === '+') {\r\n        this.setValueSilently('+');\r\n      } else {\r\n        formattedPhoneNumber = formatPhoneNumber(this.value);\r\n        formatted = formattedPhoneNumber.formatted;\r\n        country = formattedPhoneNumber.country;\r\n        leftPattern = formattedPhoneNumber.leftPattern;\r\n        countryCode = formattedPhoneNumber.code;\r\n        this.setValueSilently(this.lastValue = formatted ? '+' + formatted : '');\r\n      }\r\n  \r\n      telEl.dataset.leftPattern = leftPattern/* .replace(/X/g, '0') */;\r\n  \r\n      //console.log(formatted, country);\r\n\r\n      options.onInput && options.onInput(formattedPhoneNumber);\r\n    });\r\n  \r\n    telEl.addEventListener('paste', () => {\r\n      this.pasted = true;\r\n      //console.log('paste', telEl.value);\r\n    });\r\n  \r\n    /* telEl.addEventListener('change', (e) => {\r\n      console.log('change', telEl.value);\r\n    }); */\r\n  \r\n    telEl.addEventListener('keypress', (e) => {\r\n      //console.log('keypress', this.value);\r\n      const key = e.key;\r\n      if(/\\D/.test(key) && !(e.metaKey || e.ctrlKey) && key !== 'Backspace' && !(key === '+' && e.shiftKey/*  && !this.value */)) {\r\n        e.preventDefault();\r\n        return false;\r\n      }\r\n    });\r\n  \r\n    /* telEl.addEventListener('focus', function(this: typeof telEl, e) {\r\n      this.removeAttribute('readonly'); // fix autocomplete\r\n    });*/\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function findUpTag(el: any, tag: string): HTMLElement {\r\n  return el.closest(tag);\r\n  /* if(el.tagName === tag) return el; // 03.02.2020\r\n\r\n  while(el.parentElement) {\r\n    el = el.parentElement;\r\n    if(el.tagName === tag) \r\n      return el;\r\n  }\r\n  return null; */\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport IS_TOUCH_SUPPORTED from \"../../environment/touchSupport\";\r\n\r\nexport default function placeCaretAtEnd(el: HTMLElement, ignoreTouchCheck = false) {\r\n  if(IS_TOUCH_SUPPORTED && (!ignoreTouchCheck || document.activeElement !== el)) {\r\n    return;\r\n  }\r\n  \r\n  el.focus();\r\n  if(typeof window.getSelection !== \"undefined\" && typeof document.createRange !== \"undefined\") {\r\n    var range = document.createRange();\r\n    range.selectNodeContents(el);\r\n    range.collapse(false);\r\n    var sel = window.getSelection();\r\n    sel.removeAllRanges();\r\n    sel.addRange(range);\r\n    // @ts-ignore\r\n  } else if(typeof document.body.createTextRange !== \"undefined\") {\r\n    // @ts-ignore\r\n    var textRange = document.body.createTextRange();\r\n    textRange.moveToElementText(el);\r\n    textRange.collapse(false);\r\n    textRange.select();\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function toggleDisability(elements: HTMLElement[], disable: boolean): () => void {\r\n  if(disable) {\r\n    elements.forEach((el) => el.setAttribute('disabled', 'true'));\r\n  } else {\r\n    elements.forEach((el) => el.removeAttribute('disabled'));\r\n  }\r\n\r\n  return () => toggleDisability(elements, !disable);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { HelpCountry, HelpCountryCode } from \"../layer\";\r\nimport I18n from \"../lib/langPack\";\r\n\r\nlet sortedCountries: HelpCountry[];\r\ntype PrefixCountry = {country: HelpCountry, code: HelpCountryCode};\r\nconst prefixes: Map<string, PrefixCountry> = new Map();\r\nlet maxPrefixLength = 0;\r\nconst setPrefix = (country: HelpCountry, code: HelpCountryCode, prefix: string = '') => {\r\n  prefix = code.country_code + prefix;\r\n  /* if(prefixes.has(prefix)) {\r\n    console.error('asdasdasd', prefixes.get(prefix), country, code);\r\n  } */\r\n  maxPrefixLength = Math.max(maxPrefixLength, prefix.length);\r\n  prefixes.set(prefix, {country, code});\r\n};\r\n\r\nexport function formatPhoneNumber(originalStr: string): {\r\n  formatted: string,\r\n  country: HelpCountry,\r\n  code: HelpCountryCode,\r\n  leftPattern: string\r\n} {\r\n  originalStr = originalStr || '';\r\n  \r\n  if(!prefixes.size) {\r\n    I18n.countriesList.forEach((country) => {\r\n      country.country_codes.forEach((code) => {\r\n        if(code.prefixes) {\r\n          code.prefixes.forEach((prefix) => {\r\n            setPrefix(country, code, prefix);\r\n          });\r\n        } else {\r\n          setPrefix(country, code);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  // return {formatted: originalStr, country: undefined as any, leftPattern: ''};\r\n  let str = originalStr.replace(/\\D/g, '');\r\n  let phoneCode = str.slice(0, maxPrefixLength);\r\n  \r\n  ////console.log('str', str, phoneCode);\r\n  // if(!sortedCountries) {\r\n  //   sortedCountries = I18n.countriesList.slice().sort((a, b) => b.country_codes[0].country_code.length - a.country_codes[0].country_code.length);\r\n  // }\r\n  \r\n  // let country = sortedCountries.find((c) => {\r\n  //   return c.country_codes.find((c) => phoneCode.indexOf(c.replace(/\\D/g, '')) === 0);\r\n  // });\r\n\r\n  let prefixCountry: PrefixCountry;\r\n  for(let i = phoneCode.length - 1; i >= 0; --i) { // lookup for country by prefix\r\n    prefixCountry = prefixes.get(phoneCode.slice(0, i + 1));\r\n    if(prefixCountry) {\r\n      break;\r\n    }\r\n  }\r\n\r\n  if(!prefixCountry) {\r\n    return {\r\n      formatted: str, \r\n      country: undefined, \r\n      code: undefined, \r\n      leftPattern: ''\r\n    };\r\n  }\r\n\r\n  // country = /* PhoneCodesMain[country.phoneCode] ||  */country;\r\n  const country = prefixCountry.country;\r\n  \r\n  const patterns = prefixCountry.code.patterns || [];\r\n  const searchForPattern = str.slice(prefixCountry.code.country_code.length); // splice country code\r\n  let pattern = '', mostMatchedPatternMatches = 0, mostMatchedPattern = '';\r\n  for(let i = patterns.length - 1; i >= 0; --i) {\r\n    pattern = patterns[i];\r\n\r\n    const _pattern = pattern.replace(/ /g, '');\r\n    let patternMatches = 0;\r\n    for(let k = 0, length = Math.min(searchForPattern.length, _pattern.length); k < length; ++k) {\r\n      if(searchForPattern[k] === _pattern[k] || _pattern[k] === 'X') {\r\n        ++patternMatches;\r\n      } else {\r\n        patternMatches = 0;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if(patternMatches > mostMatchedPatternMatches) {\r\n      mostMatchedPatternMatches = patternMatches;\r\n      mostMatchedPattern = pattern;\r\n    }\r\n  }\r\n\r\n  pattern = mostMatchedPattern || pattern;\r\n  pattern = pattern.replace(/\\d/g, 'X');\r\n\r\n  pattern = prefixCountry.code.country_code + ' ' + pattern;\r\n  // let pattern = country.pattern || country.phoneCode;\r\n  pattern.split('').forEach((symbol, idx) => {\r\n    if(symbol === ' ' && str[idx] !== ' ' && str.length > idx) {\r\n      str = str.slice(0, idx) + ' ' + str.slice(idx);\r\n    }\r\n  });\r\n  \r\n  /* if(country.pattern) {\r\n    str = str.slice(0, country.pattern.length);\r\n  } */\r\n\r\n  let leftPattern = pattern && pattern.length > str.length ? pattern.slice(str.length) : '';\r\n  if(leftPattern) {\r\n    /* const length = str.length;\r\n    leftPattern = leftPattern.split('').map((_, idx) => (length + idx).toString().slice(-1)).join(''); */\r\n    leftPattern = leftPattern.replace(/X/g, '‒');\r\n    // leftPattern = leftPattern.replace(/X/g, '0');\r\n  }\r\n  \r\n  return {formatted: str, country, code: prefixCountry.code, leftPattern};\r\n}\r\n","export default function getDeepProperty(object: any, key: string) {\r\n  const splitted = key.split('.');\r\n  let o: any = object;\r\n  splitted.forEach((key) => {\r\n    if(!key) {\r\n      return;\r\n    }\r\n    \r\n    // @ts-ignore\r\n    o = o[key];\r\n  });\r\n  \r\n  return o;\r\n}\r\n"],"names":["CheckboxField","constructor","options","label","this","document","createElement","classList","add","restriction","round","disabled","toggleDisability","input","span","type","name","id","checked","stateKey","then","state","stateValue","stateValues","indexOf","setValueSilently","addEventListener","value","text","textArgs","append","toggle","box","checkSvg","createElementNS","setAttributeNS","use","bg","border","withRipple","undefined","withHover","event","Event","bubbles","cancelable","dispatchEvent","disable","ScrollableBase","el","logPrefix","container","onScrollMeasure","lastScrollPosition","lastScrollDirection","isHeavyAnimationInProgress","needCheckAfterAnimation","onScroll","cancelMeasure","onScrolledTop","onScrolledBottom","splitUp","onAdditionalScroll","window","requestAnimationFrame","scrollPosition","scrollProperty","checkForTriggers","log","Array","from","children","forEach","c","addScrollListener","addedScrollListener","passive","capture","removeScrollListener","removeEventListener","setListeners","removeHeavyAnimationListener","removeListeners","element","scrollIntoViewNew","cancelAnimationFrame","Scrollable","onScrollOffset","withPaddingContainer","super","loadedAll","top","bottom","scrollHeight","maxScrollTop","clientHeight","scrollTop","setVirtualContainer","prepend","elements","padding","getDistanceToEnd","Math","offsetHeight","isScrolledDown","y","setScrollTopSilently","ignoreNextScrollEvent","e","once","ScrollableX","splitCount","scrollHorizontally","deltaX","scrollWidth","clientWidth","scrollLeft","deltaY","TelInputField","pasted","lastValue","telEl","HTMLInputElement","autocomplete","inputMode","pixelRatio","devicePixelRatio","letterSpacing","IS_APPLE","IS_ANDROID","style","setProperty","originalFunc","bind","remove","formattedPhoneNumber","abs","length","IS_APPLE_MOBILE","setLabel","formatted","country","countryCode","leftPattern","replace","code","dataset","onInput","key","test","metaKey","ctrlKey","shiftKey","preventDefault","findUpTag","tag","closest","placeCaretAtEnd","ignoreTouchCheck","activeElement","focus","getSelection","createRange","range","selectNodeContents","collapse","sel","removeAllRanges","addRange","body","createTextRange","textRange","moveToElementText","select","setAttribute","removeAttribute","prefixes","Map","maxPrefixLength","setPrefix","prefix","country_code","max","set","formatPhoneNumber","originalStr","size","country_codes","prefixCountry","str","phoneCode","slice","i","get","patterns","searchForPattern","pattern","mostMatchedPatternMatches","mostMatchedPattern","_pattern","patternMatches","k","min","split","symbol","idx","getDeepProperty","object","splitted","o"],"sourceRoot":""}